{
  "metadata": {
    "nhsFrontendVersion": "10.0.0",
    "gitBranch": "main",
    "gitCommit": "52eeee1",
    "generated": "2025-10-06 11:03:57 UTC",
    "source": "https://github.com/nhsuk/nhsuk-frontend",
    "description": "Auto-generated Sass documentation from NHS Frontend. This contains all Sass mixins, functions, variables, and placeholders extracted using sassdoc."
  },
  "items": [
    {
      "description": "Header link styling\n\n",
      "commentRange": {
        "start": 35,
        "end": 41
      },
      "context": {
        "type": "mixin",
        "name": "_header-link-style",
        "code": "\n  & {\n    color: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n\n  &:focus,\n  &:focus:visited {\n    color: $nhsuk-focus-text-colour;\n    box-shadow: inset 0 ($nhsuk-focus-width * -1) $nhsuk-focus-text-colour;\n  }\n\n  @include nhsuk-print-colour($print-colour: inherit) {\n    &::after {\n      content: \"\";\n    }\n  }\n",
        "line": {
          "start": 43,
          "end": 68
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "link-colour",
          "default": "$nhsuk-header-item-colour",
          "description": "Link colour"
        },
        {
          "type": "Colour",
          "name": "link-hover-colour",
          "default": "$nhsuk-header-item-hover-colour",
          "description": "Link hover colour"
        },
        {
          "type": "Colour",
          "name": "link-active-colour",
          "default": "$nhsuk-header-item-active-colour",
          "description": "Link active colour\n"
        }
      ],
      "access": "private",
      "group": [
        "components/header"
      ],
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-link-style-visited"
        },
        {
          "type": "mixin",
          "name": "nhsuk-link-style-hover"
        },
        {
          "type": "mixin",
          "name": "nhsuk-link-style-active"
        },
        {
          "type": "mixin",
          "name": "nhsuk-link-style-focus"
        },
        {
          "type": "mixin",
          "name": "nhsuk-print-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        }
      ],
      "file": {
        "path": "components/header/_index.scss",
        "name": "_index.scss"
      }
    },
    {
      "description": "   The overflowing is a particular problem with the panel component since it uses white\n   text: when the text overflows the container, it is invisible on the white (page)\n   background. When the text in our other components overflow, the user might have to scroll\n   horizontally to view it but the text remains legible.\n\n",
      "commentRange": {
        "start": 16,
        "end": 24
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-panel-border-width",
        "value": "nhsuk-spacing(1)",
        "scope": "private",
        "line": {
          "start": 26,
          "end": 26
        }
      },
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "components/panel"
      ],
      "access": "public",
      "file": {
        "path": "components/panel/_index.scss",
        "name": "_index.scss"
      }
    },
    {
      "description": "\nGet colour\n\n",
      "commentRange": {
        "start": 12,
        "end": 19
      },
      "context": {
        "type": "function",
        "name": "nhsuk-colour",
        "code": "\n  @if meta.type-of($colour) == \"color\" {\n    $colour: string.quote(\"#{$colour}\");\n  }\n\n  @if not map.has-key($nhsuk-colours, $colour) {\n    @error \"Unknown colour `#{$colour}`\";\n  }\n\n  @return map.get($nhsuk-colours, $colour);\n",
        "line": {
          "start": 21,
          "end": 31
        }
      },
      "parameter": [
        {
          "type": "String | Colour",
          "name": "colour",
          "description": "Name of colour from the colour palette\n  (`$nhsuk-colours`)"
        }
      ],
      "return": {
        "type": "Colour",
        "description": "Representation of named colour\n"
      },
      "throw": [
        "Unknown colour `#{$colour}`"
      ],
      "group": [
        "helpers/colour"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-colours"
        },
        {
          "type": "variable",
          "name": "nhsuk-colours"
        }
      ],
      "file": {
        "path": "core/helpers/_colour.scss",
        "name": "_colour.scss"
      },
      "usedBy": [
        {
          "description": "Converts a colour with potential float values for its RGB channels\ninto hexadecimal notation where possible (e.g. no alpha transparency)\n\nThis ensures the colour is rendered properly by Safari < 12\n\n",
          "context": {
            "type": "function",
            "name": "nhsuk-colour-compatible",
            "code": "\n  @if meta.type-of($colour) == \"string\" {\n    $colour: nhsuk-colour($colour);\n  }\n\n  $alpha: color.alpha($colour);\n  $parts: ();\n\n  // Maintain compatibility with Sass < v1.79.0 where colour space functions\n  // are unavailable and RGB channels are automatically rounded to integers\n  // https://github.com/sass/dart-sass/blob/1.79.0/CHANGELOG.md\n  @if not meta.function-exists(\"channel\", \"color\") {\n    $parts: (\n      \"red\": color.red($colour),\n      \"green\": color.green($colour),\n      \"blue\": color.blue($colour),\n      \"alpha\": $alpha\n    );\n  } @else {\n    $colour: color.to-space($colour, rgb);\n    $alpha: color.channel($colour, \"alpha\");\n\n    $parts: (\n      \"red\": math.round(color.channel($colour, \"red\")),\n      \"green\": math.round(color.channel($colour, \"green\")),\n      \"blue\": math.round(color.channel($colour, \"blue\")),\n      \"alpha\": $alpha\n    );\n  }\n\n  @return color.change($colour, $parts...);\n",
            "line": {
              "start": 41,
              "end": 72
            }
          }
        }
      ]
    },
    {
      "description": "Converts a colour with potential float values for its RGB channels\ninto hexadecimal notation where possible (e.g. no alpha transparency)\n\nThis ensures the colour is rendered properly by Safari < 12\n\n",
      "commentRange": {
        "start": 33,
        "end": 39
      },
      "context": {
        "type": "function",
        "name": "nhsuk-colour-compatible",
        "code": "\n  @if meta.type-of($colour) == \"string\" {\n    $colour: nhsuk-colour($colour);\n  }\n\n  $alpha: color.alpha($colour);\n  $parts: ();\n\n  // Maintain compatibility with Sass < v1.79.0 where colour space functions\n  // are unavailable and RGB channels are automatically rounded to integers\n  // https://github.com/sass/dart-sass/blob/1.79.0/CHANGELOG.md\n  @if not meta.function-exists(\"channel\", \"color\") {\n    $parts: (\n      \"red\": color.red($colour),\n      \"green\": color.green($colour),\n      \"blue\": color.blue($colour),\n      \"alpha\": $alpha\n    );\n  } @else {\n    $colour: color.to-space($colour, rgb);\n    $alpha: color.channel($colour, \"alpha\");\n\n    $parts: (\n      \"red\": math.round(color.channel($colour, \"red\")),\n      \"green\": math.round(color.channel($colour, \"green\")),\n      \"blue\": math.round(color.channel($colour, \"blue\")),\n      \"alpha\": $alpha\n    );\n  }\n\n  @return color.change($colour, $parts...);\n",
        "line": {
          "start": 41,
          "end": 72
        }
      },
      "parameter": [
        {
          "type": "String | Colour",
          "name": "colour",
          "description": "The colour to convert or name from the colour palette"
        }
      ],
      "return": {
        "type": "Colour"
      },
      "group": [
        "helpers/colour"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "nhsuk-colour"
        }
      ],
      "file": {
        "path": "core/helpers/_colour.scss",
        "name": "_colour.scss"
      },
      "usedBy": [
        {
          "description": "Make a colour darker by mixing it with black\n\n",
          "context": {
            "type": "function",
            "name": "nhsuk-shade",
            "code": "\n  // Ensure the output is a hex string so that Safari <12 can render the colour\n  // without issues from float values in `rgb()`\n  @return nhsuk-colour-compatible(color.mix(black, $colour, $percentage));\n",
            "line": {
              "start": 84,
              "end": 88
            }
          }
        },
        {
          "description": "Make a colour lighter by mixing it with white\n\n",
          "context": {
            "type": "function",
            "name": "nhsuk-tint",
            "code": "\n  // Ensure the output is a hex string so that Safari <12 can render the colour\n  // without issues from float values in `rgb()`\n  @return nhsuk-colour-compatible(color.mix(white, $colour, $percentage));\n",
            "line": {
              "start": 100,
              "end": 104
            }
          }
        }
      ]
    },
    {
      "description": "Make a colour darker by mixing it with black\n\n",
      "commentRange": {
        "start": 74,
        "end": 82
      },
      "context": {
        "type": "function",
        "name": "nhsuk-shade",
        "code": "\n  // Ensure the output is a hex string so that Safari <12 can render the colour\n  // without issues from float values in `rgb()`\n  @return nhsuk-colour-compatible(color.mix(black, $colour, $percentage));\n",
        "line": {
          "start": 84,
          "end": 88
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "nhsuk-shade(color, percentage);\nnhsuk-shade(nhsuk-colour(\"blue\"), 50%);"
        }
      ],
      "parameter": [
        {
          "type": "Colour",
          "name": "colour",
          "description": "colour to shade"
        },
        {
          "type": "Number",
          "name": "percentage",
          "description": "percentage of black to mix with $colour"
        }
      ],
      "return": {
        "type": "Colour"
      },
      "group": [
        "helpers/colour"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "nhsuk-colour-compatible"
        }
      ],
      "file": {
        "path": "core/helpers/_colour.scss",
        "name": "_colour.scss"
      },
      "usedBy": [
        {
          "description": "Success link styles\n\nMakes links use the success colour. The link will darken if it's active or a\nuser hovers their cursor over it.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-success",
            "code": "\n  @include nhsuk-link-style(\n    $link-colour: $nhsuk-success-colour,\n    $link-visited-colour: $nhsuk-success-colour,\n    $link-hover-colour: nhsuk-shade($nhsuk-success-colour, 20%),\n    $link-active-colour: nhsuk-shade($nhsuk-success-colour, 50%)\n  );\n",
            "line": {
              "start": 150,
              "end": 157
            }
          }
        },
        {
          "description": "Success link styles\n\nMakes links use the success colour. The link will darken if it's active or a\nuser hovers their cursor over it.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-success",
            "code": "\n  @include nhsuk-link-style(\n    $link-colour: $nhsuk-success-colour,\n    $link-visited-colour: $nhsuk-success-colour,\n    $link-hover-colour: nhsuk-shade($nhsuk-success-colour, 20%),\n    $link-active-colour: nhsuk-shade($nhsuk-success-colour, 50%)\n  );\n",
            "line": {
              "start": 150,
              "end": 157
            }
          }
        }
      ]
    },
    {
      "description": "Make a colour lighter by mixing it with white\n\n",
      "commentRange": {
        "start": 90,
        "end": 98
      },
      "context": {
        "type": "function",
        "name": "nhsuk-tint",
        "code": "\n  // Ensure the output is a hex string so that Safari <12 can render the colour\n  // without issues from float values in `rgb()`\n  @return nhsuk-colour-compatible(color.mix(white, $colour, $percentage));\n",
        "line": {
          "start": 100,
          "end": 104
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "nhsuk-tint(color, percentage);\nnhsuk-tint(nhsuk-colour(\"blue\"), 10%);"
        }
      ],
      "parameter": [
        {
          "type": "Colour",
          "name": "colour",
          "description": "colour to tint"
        },
        {
          "type": "Number",
          "name": "percentage",
          "description": "percentage of white to mix with $colour"
        }
      ],
      "return": {
        "type": "Colour"
      },
      "group": [
        "helpers/colour"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "nhsuk-colour-compatible"
        }
      ],
      "file": {
        "path": "core/helpers/_colour.scss",
        "name": "_colour.scss"
      }
    },
    {
      "description": "Width container mixin\n\nUsed to create page width and custom width container classes.\n\n",
      "commentRange": {
        "start": 9,
        "end": 20
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-width-container",
        "code": "\n  // By default, limit the width of the container to the page width\n  max-width: $width;\n\n  // On mobile, add half width gutters\n  margin-right: $nhsuk-gutter-half;\n  margin-left: $nhsuk-gutter-half;\n\n  // Respect 'display cutout' safe area (avoids notches and rounded corners)\n  @supports (margin: string.unquote(\"max(calc(0px))\")) {\n    $gutter-safe-area-right: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-right));\n    $gutter-safe-area-left: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-left));\n\n    // Use max() to pick largest margin, default or with safe area\n    // Escaped due to Sass max() vs. CSS native max()\n    margin-right: string.unquote(\"max(#{$nhsuk-gutter-half}, #{$gutter-safe-area-right})\");\n    margin-left: string.unquote(\"max(#{$nhsuk-gutter-half}, #{$gutter-safe-area-left})\");\n  }\n\n  // On desktop, add full width gutters\n  @include nhsuk-media-query($from: desktop) {\n    margin-right: $nhsuk-gutter;\n    margin-left: $nhsuk-gutter;\n\n    // Respect 'display cutout' safe area (avoids notches and rounded corners)\n    @supports (margin: string.unquote(\"max(calc(0px))\")) {\n      $gutter-safe-area-right: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-right));\n      $gutter-safe-area-left: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-left));\n\n      // Use max() to pick largest margin, default or with safe area\n      // Escaped due to Sass max() vs. CSS native max()\n      margin-right: string.unquote(\"max(#{$nhsuk-gutter}, #{$gutter-safe-area-right})\");\n      margin-left: string.unquote(\"max(#{$nhsuk-gutter}, #{$gutter-safe-area-left})\");\n    }\n  }\n\n  // As soon as the viewport is greater than the width of the page plus the\n  // gutters, just centre the content instead of adding gutters.\n  @include nhsuk-media-query($and: \"(min-width: #{($width + $nhsuk-gutter * 2)})\") {\n    margin-right: auto;\n    margin-left: auto;\n\n    // Since a safe area may have previously been set above,\n    // we need to duplicate this margin that centers the page.\n    @supports (margin: string.unquote(\"max(calc(0px))\")) {\n      margin-right: auto;\n      margin-left: auto;\n    }\n  }\n",
        "line": {
          "start": 22,
          "end": 71
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "width",
          "default": "$nhsuk-page-width",
          "description": "Width in pixels\n"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": ".app-width-container--wide {\n  @include nhsuk-width-container(1200px);\n}",
          "description": "Creating a 1200px wide container class"
        }
      ],
      "group": [
        "objects/layout"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        },
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        }
      ],
      "file": {
        "path": "core/objects/_width-container.scss",
        "name": "_width-container.scss"
      }
    },
    {
      "description": "Brand colour\n\n",
      "commentRange": {
        "start": 13,
        "end": 15
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-brand-colour",
        "value": "nhsuk-colour(\"blue\")",
        "scope": "default",
        "line": {
          "start": 17,
          "end": 17
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Text colour\n\n",
      "commentRange": {
        "start": 19,
        "end": 21
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-text-colour",
        "value": "nhsuk-colour(\"black\")",
        "scope": "default",
        "line": {
          "start": 23,
          "end": 23
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      },
      "aliased": [
        "nhsuk-text-color"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "nhsuk-text-color"
        }
      ],
      "usedBy": [
        {
          "description": "Text colour\n\nSets the text colour, including a suitable override for print.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-text-colour",
            "code": "\n  color: $nhsuk-text-colour;\n\n  @include nhsuk-media-query($media-type: print) {\n    color: $nhsuk-print-text-colour;\n  }\n",
            "line": {
              "start": 23,
              "end": 29
            }
          }
        }
      ]
    },
    {
      "description": "Text colour (reverse)\n\n",
      "commentRange": {
        "start": 25,
        "end": 27
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-reverse-text-colour",
        "value": "nhsuk-colour(\"white\")",
        "scope": "default",
        "line": {
          "start": 29,
          "end": 29
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      },
      "usedBy": [
        {
          "description": "White link styling, used in hero\ncomponent, and in the `.nhsuk-link--reverse`\nmodifier class.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-white",
            "code": "\n  @include nhsuk-link-style-text($override-colour: $nhsuk-reverse-text-colour);\n",
            "line": {
              "start": 57,
              "end": 59
            }
          }
        }
      ]
    },
    {
      "description": "Template background colour\n\nUsed by components that want to give the illusion of extending\nthe template background (such as the footer).\n\n",
      "commentRange": {
        "start": 31,
        "end": 36
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-template-background-colour",
        "value": "nhsuk-colour(\"grey-4\")",
        "scope": "default",
        "line": {
          "start": 38,
          "end": 38
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Body background colour\n\n",
      "commentRange": {
        "start": 40,
        "end": 42
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-body-background-colour",
        "value": "nhsuk-colour(\"grey-5\")",
        "scope": "default",
        "line": {
          "start": 44,
          "end": 44
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Card background colour\n\n",
      "commentRange": {
        "start": 46,
        "end": 48
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-card-background-colour",
        "value": "nhsuk-colour(\"white\")",
        "scope": "default",
        "line": {
          "start": 50,
          "end": 50
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Text colour for print media\n\nUse 'true black' to avoid printers using colour ink to print body text\n\n",
      "commentRange": {
        "start": 52,
        "end": 56
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-print-text-colour",
        "value": "#000000",
        "scope": "default",
        "line": {
          "start": 58,
          "end": 58
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      },
      "usedBy": [
        {
          "description": "Panel mixin\n\nSee components/_panel\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-panel",
            "code": "\n  @if $panel-border-colour {\n    border: 1px solid $panel-border-colour;\n  }\n  color: $panel-text-colour;\n  background-color: $panel-background-colour;\n\n  @include nhsuk-top-and-bottom;\n  @include nhsuk-responsive-margin(7, \"bottom\");\n\n  @include nhsuk-media-query($media-type: print) {\n    border: 1px solid $nhsuk-print-text-colour;\n    page-break-inside: avoid;\n  }\n",
            "line": {
              "start": 242,
              "end": 256
            }
          }
        },
        {
          "description": "Care card mixin, used for creating\ndifferent coloured care cards\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-care-card",
            "code": "\n  .nhsuk-card--care__heading-container {\n    color: $heading-text-colour;\n    background-color: $heading-background-colour;\n  }\n\n  @include nhsuk-print-colour {\n    border: $print-border-size solid $nhsuk-print-text-colour;\n    page-break-inside: avoid;\n  }\n",
            "line": {
              "start": 370,
              "end": 380
            }
          }
        },
        {
          "description": "Text colour\n\nSets the text colour, including a suitable override for print.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-text-colour",
            "code": "\n  color: $nhsuk-text-colour;\n\n  @include nhsuk-media-query($media-type: print) {\n    color: $nhsuk-print-text-colour;\n  }\n",
            "line": {
              "start": 23,
              "end": 29
            }
          }
        }
      ]
    },
    {
      "description": "Secondary text colour\n\nUsed in for example 'muted' text and help text.\n\n",
      "commentRange": {
        "start": 60,
        "end": 64
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-secondary-text-colour",
        "value": "nhsuk-colour(\"grey-1\")",
        "scope": "default",
        "line": {
          "start": 66,
          "end": 66
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Focus colour\n\nUsed for outline (and background, where appropriate) when interactive\nelements (links, form controls) have keyboard focus.\n\n",
      "commentRange": {
        "start": 68,
        "end": 73
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-focus-colour",
        "value": "nhsuk-colour(\"yellow\")",
        "scope": "default",
        "line": {
          "start": 75,
          "end": 75
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      },
      "usedBy": [
        {
          "description": "Focused text\n\nProvides an outline to clearly indicate when the target element is focused.\nUsed for interactive text-based elements.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-text",
            "code": "\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\n  // transparent outline which will be set to a visible colour.\n  outline: $nhsuk-focus-width solid transparent;\n  background-color: $nhsuk-focus-colour;\n  box-shadow:\n    0 -2px $nhsuk-focus-colour,\n    0 $nhsuk-focus-width $nhsuk-focus-text-colour;\n\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the \"underline\"\n  text-decoration: none;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 15,
              "end": 34
            }
          }
        },
        {
          "description": "Focused text\n\nProvides an outline to clearly indicate when the target element is focused.\nUsed for interactive text-based elements.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-text",
            "code": "\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\n  // transparent outline which will be set to a visible colour.\n  outline: $nhsuk-focus-width solid transparent;\n  background-color: $nhsuk-focus-colour;\n  box-shadow:\n    0 -2px $nhsuk-focus-colour,\n    0 $nhsuk-focus-width $nhsuk-focus-text-colour;\n\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the \"underline\"\n  text-decoration: none;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 15,
              "end": 34
            }
          }
        },
        {
          "description": "Focused input (form elements)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used for interactive input-based elements such\nas text inputs.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-input",
            "code": "\n  border: $nhsuk-border-width-form-element solid $nhsuk-focus-text-colour;\n  outline: $nhsuk-focus-width solid $nhsuk-focus-colour;\n  outline-offset: 0;\n  box-shadow: inset 0 0 0 $nhsuk-border-width-form-element $nhsuk-focus-text-colour;\n",
            "line": {
              "start": 42,
              "end": 47
            }
          }
        },
        {
          "description": "Focused radio input (form element)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used by radios.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-radio",
            "code": "\n  border: $nhsuk-focus-width solid $nhsuk-focus-text-colour;\n  box-shadow: 0 0 0 $nhsuk-focus-width $nhsuk-focus-colour;\n",
            "line": {
              "start": 54,
              "end": 57
            }
          }
        },
        {
          "description": "Focused checkbox input (form element)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used by checkbox.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-checkbox",
            "code": "\n  border: $nhsuk-focus-width solid $nhsuk-focus-text-colour;\n  box-shadow: 0 0 0 $nhsuk-focus-width $nhsuk-focus-colour;\n",
            "line": {
              "start": 64,
              "end": 67
            }
          }
        },
        {
          "description": "Focused button\n\nProvides an additional outline and background to clearly indicate when\nthe target element has focus. Used for buttons.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-button",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  outline-offset: $nhsuk-focus-width;\n  color: $nhsuk-focus-text-colour;\n  background-color: $nhsuk-focus-colour;\n  box-shadow: 0 $nhsuk-focus-width 0 0 $nhsuk-focus-text-colour;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 74,
              "end": 86
            }
          }
        },
        {
          "description": "Focused box\n\nProvides an outline to clearly indicate when the target element is focused.\nUnlike nhsuk-focused-text, which only draws an underline below the element,\nnhsuk-focused-box draws an outline around all sides of the element.\nBest used for non-text content contained within links.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-box",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  box-shadow:\n    0 0 0 4px $nhsuk-focus-colour,\n    0 0 0 8px $nhsuk-focus-text-colour;\n",
            "line": {
              "start": 95,
              "end": 100
            }
          }
        }
      ]
    },
    {
      "description": "Focused text colour\n\nEnsure that the contrast between the text and background colour passes\nWCAG Level AA contrast requirements.\n\n",
      "commentRange": {
        "start": 77,
        "end": 82
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-focus-text-colour",
        "value": "nhsuk-colour(\"black\")",
        "scope": "default",
        "line": {
          "start": 84,
          "end": 84
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      },
      "usedBy": [
        {
          "description": "Header link styling\n\n",
          "context": {
            "type": "mixin",
            "name": "_header-link-style",
            "code": "\n  & {\n    color: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n\n  &:focus,\n  &:focus:visited {\n    color: $nhsuk-focus-text-colour;\n    box-shadow: inset 0 ($nhsuk-focus-width * -1) $nhsuk-focus-text-colour;\n  }\n\n  @include nhsuk-print-colour($print-colour: inherit) {\n    &::after {\n      content: \"\";\n    }\n  }\n",
            "line": {
              "start": 43,
              "end": 68
            }
          }
        },
        {
          "description": "Header link styling\n\n",
          "context": {
            "type": "mixin",
            "name": "_header-link-style",
            "code": "\n  & {\n    color: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n\n  &:focus,\n  &:focus:visited {\n    color: $nhsuk-focus-text-colour;\n    box-shadow: inset 0 ($nhsuk-focus-width * -1) $nhsuk-focus-text-colour;\n  }\n\n  @include nhsuk-print-colour($print-colour: inherit) {\n    &::after {\n      content: \"\";\n    }\n  }\n",
            "line": {
              "start": 43,
              "end": 68
            }
          }
        },
        {
          "description": "Focused text\n\nProvides an outline to clearly indicate when the target element is focused.\nUsed for interactive text-based elements.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-text",
            "code": "\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\n  // transparent outline which will be set to a visible colour.\n  outline: $nhsuk-focus-width solid transparent;\n  background-color: $nhsuk-focus-colour;\n  box-shadow:\n    0 -2px $nhsuk-focus-colour,\n    0 $nhsuk-focus-width $nhsuk-focus-text-colour;\n\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the \"underline\"\n  text-decoration: none;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 15,
              "end": 34
            }
          }
        },
        {
          "description": "Focused text\n\nProvides an outline to clearly indicate when the target element is focused.\nUsed for interactive text-based elements.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-text",
            "code": "\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\n  // transparent outline which will be set to a visible colour.\n  outline: $nhsuk-focus-width solid transparent;\n  background-color: $nhsuk-focus-colour;\n  box-shadow:\n    0 -2px $nhsuk-focus-colour,\n    0 $nhsuk-focus-width $nhsuk-focus-text-colour;\n\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the \"underline\"\n  text-decoration: none;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 15,
              "end": 34
            }
          }
        },
        {
          "description": "Focused text\n\nProvides an outline to clearly indicate when the target element is focused.\nUsed for interactive text-based elements.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-text",
            "code": "\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\n  // transparent outline which will be set to a visible colour.\n  outline: $nhsuk-focus-width solid transparent;\n  background-color: $nhsuk-focus-colour;\n  box-shadow:\n    0 -2px $nhsuk-focus-colour,\n    0 $nhsuk-focus-width $nhsuk-focus-text-colour;\n\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the \"underline\"\n  text-decoration: none;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 15,
              "end": 34
            }
          }
        },
        {
          "description": "Focused input (form elements)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used for interactive input-based elements such\nas text inputs.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-input",
            "code": "\n  border: $nhsuk-border-width-form-element solid $nhsuk-focus-text-colour;\n  outline: $nhsuk-focus-width solid $nhsuk-focus-colour;\n  outline-offset: 0;\n  box-shadow: inset 0 0 0 $nhsuk-border-width-form-element $nhsuk-focus-text-colour;\n",
            "line": {
              "start": 42,
              "end": 47
            }
          }
        },
        {
          "description": "Focused input (form elements)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used for interactive input-based elements such\nas text inputs.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-input",
            "code": "\n  border: $nhsuk-border-width-form-element solid $nhsuk-focus-text-colour;\n  outline: $nhsuk-focus-width solid $nhsuk-focus-colour;\n  outline-offset: 0;\n  box-shadow: inset 0 0 0 $nhsuk-border-width-form-element $nhsuk-focus-text-colour;\n",
            "line": {
              "start": 42,
              "end": 47
            }
          }
        },
        {
          "description": "Focused radio input (form element)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used by radios.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-radio",
            "code": "\n  border: $nhsuk-focus-width solid $nhsuk-focus-text-colour;\n  box-shadow: 0 0 0 $nhsuk-focus-width $nhsuk-focus-colour;\n",
            "line": {
              "start": 54,
              "end": 57
            }
          }
        },
        {
          "description": "Focused checkbox input (form element)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used by checkbox.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-checkbox",
            "code": "\n  border: $nhsuk-focus-width solid $nhsuk-focus-text-colour;\n  box-shadow: 0 0 0 $nhsuk-focus-width $nhsuk-focus-colour;\n",
            "line": {
              "start": 64,
              "end": 67
            }
          }
        },
        {
          "description": "Focused button\n\nProvides an additional outline and background to clearly indicate when\nthe target element has focus. Used for buttons.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-button",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  outline-offset: $nhsuk-focus-width;\n  color: $nhsuk-focus-text-colour;\n  background-color: $nhsuk-focus-colour;\n  box-shadow: 0 $nhsuk-focus-width 0 0 $nhsuk-focus-text-colour;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 74,
              "end": 86
            }
          }
        },
        {
          "description": "Focused button\n\nProvides an additional outline and background to clearly indicate when\nthe target element has focus. Used for buttons.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-button",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  outline-offset: $nhsuk-focus-width;\n  color: $nhsuk-focus-text-colour;\n  background-color: $nhsuk-focus-colour;\n  box-shadow: 0 $nhsuk-focus-width 0 0 $nhsuk-focus-text-colour;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 74,
              "end": 86
            }
          }
        },
        {
          "description": "Focused button\n\nProvides an additional outline and background to clearly indicate when\nthe target element has focus. Used for buttons.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-button",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  outline-offset: $nhsuk-focus-width;\n  color: $nhsuk-focus-text-colour;\n  background-color: $nhsuk-focus-colour;\n  box-shadow: 0 $nhsuk-focus-width 0 0 $nhsuk-focus-text-colour;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 74,
              "end": 86
            }
          }
        },
        {
          "description": "Focused button\n\nProvides an additional outline and background to clearly indicate when\nthe target element has focus. Used for buttons.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-button",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  outline-offset: $nhsuk-focus-width;\n  color: $nhsuk-focus-text-colour;\n  background-color: $nhsuk-focus-colour;\n  box-shadow: 0 $nhsuk-focus-width 0 0 $nhsuk-focus-text-colour;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 74,
              "end": 86
            }
          }
        },
        {
          "description": "Focused box\n\nProvides an outline to clearly indicate when the target element is focused.\nUnlike nhsuk-focused-text, which only draws an underline below the element,\nnhsuk-focused-box draws an outline around all sides of the element.\nBest used for non-text content contained within links.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-box",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  box-shadow:\n    0 0 0 4px $nhsuk-focus-colour,\n    0 0 0 8px $nhsuk-focus-text-colour;\n",
            "line": {
              "start": 95,
              "end": 100
            }
          }
        }
      ]
    },
    {
      "description": "Error colour\n\nUsed to highlight error messages and form controls in an error state\n\n",
      "commentRange": {
        "start": 86,
        "end": 90
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-error-colour",
        "value": "nhsuk-colour(\"red\")",
        "scope": "default",
        "line": {
          "start": 92,
          "end": 92
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Success colour\n\nUsed to highlight success messages and banners\n\n",
      "commentRange": {
        "start": 94,
        "end": 98
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-success-colour",
        "value": "nhsuk-colour(\"green\")",
        "scope": "default",
        "line": {
          "start": 100,
          "end": 100
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      },
      "usedBy": [
        {
          "description": "Success link styles\n\nMakes links use the success colour. The link will darken if it's active or a\nuser hovers their cursor over it.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-success",
            "code": "\n  @include nhsuk-link-style(\n    $link-colour: $nhsuk-success-colour,\n    $link-visited-colour: $nhsuk-success-colour,\n    $link-hover-colour: nhsuk-shade($nhsuk-success-colour, 20%),\n    $link-active-colour: nhsuk-shade($nhsuk-success-colour, 50%)\n  );\n",
            "line": {
              "start": 150,
              "end": 157
            }
          }
        },
        {
          "description": "Success link styles\n\nMakes links use the success colour. The link will darken if it's active or a\nuser hovers their cursor over it.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-success",
            "code": "\n  @include nhsuk-link-style(\n    $link-colour: $nhsuk-success-colour,\n    $link-visited-colour: $nhsuk-success-colour,\n    $link-hover-colour: nhsuk-shade($nhsuk-success-colour, 20%),\n    $link-active-colour: nhsuk-shade($nhsuk-success-colour, 50%)\n  );\n",
            "line": {
              "start": 150,
              "end": 157
            }
          }
        },
        {
          "description": "Success link styles\n\nMakes links use the success colour. The link will darken if it's active or a\nuser hovers their cursor over it.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-success",
            "code": "\n  @include nhsuk-link-style(\n    $link-colour: $nhsuk-success-colour,\n    $link-visited-colour: $nhsuk-success-colour,\n    $link-hover-colour: nhsuk-shade($nhsuk-success-colour, 20%),\n    $link-active-colour: nhsuk-shade($nhsuk-success-colour, 50%)\n  );\n",
            "line": {
              "start": 150,
              "end": 157
            }
          }
        },
        {
          "description": "Success link styles\n\nMakes links use the success colour. The link will darken if it's active or a\nuser hovers their cursor over it.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-success",
            "code": "\n  @include nhsuk-link-style(\n    $link-colour: $nhsuk-success-colour,\n    $link-visited-colour: $nhsuk-success-colour,\n    $link-hover-colour: nhsuk-shade($nhsuk-success-colour, 20%),\n    $link-active-colour: nhsuk-shade($nhsuk-success-colour, 50%)\n  );\n",
            "line": {
              "start": 150,
              "end": 157
            }
          }
        }
      ]
    },
    {
      "description": "Border colour\n\nUsed in for example borders, separators, rules and keylines.\n\n",
      "commentRange": {
        "start": 102,
        "end": 106
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-border-colour",
        "value": "nhsuk-colour(\"grey-4\")",
        "scope": "default",
        "line": {
          "start": 108,
          "end": 108
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Border hover colour\n\n",
      "commentRange": {
        "start": 110,
        "end": 112
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-border-hover-colour",
        "value": "nhsuk-colour(\"grey-3\")",
        "scope": "default",
        "line": {
          "start": 114,
          "end": 114
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Secondary border colour\n\n",
      "commentRange": {
        "start": 116,
        "end": 118
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-secondary-border-colour",
        "value": "rgba(nhsuk-colour(\"white\"), 0.2)",
        "scope": "default",
        "line": {
          "start": 120,
          "end": 120
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Form border colour\n\nUsed for form inputs and controls\n\n",
      "commentRange": {
        "start": 122,
        "end": 126
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-input-border-colour",
        "value": "nhsuk-colour(\"grey-1\")",
        "scope": "default",
        "line": {
          "start": 128,
          "end": 128
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Form element background colour\n\n",
      "commentRange": {
        "start": 130,
        "end": 132
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-input-background-colour",
        "value": "nhsuk-colour(\"white\")",
        "scope": "default",
        "line": {
          "start": 134,
          "end": 134
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Link colour\n\n",
      "commentRange": {
        "start": 140,
        "end": 142
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-link-colour",
        "value": "nhsuk-colour(\"blue\")",
        "scope": "default",
        "line": {
          "start": 144,
          "end": 144
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      },
      "usedBy": [
        {
          "description": "No visited state link mixin\n\nUsed in cases where it is not helpful to distinguish between visited and\nnon-visited links.\n\nFor example, navigation links to pages with dynamic content like admin\ndashboards. The content on the page is changing all the time, so the fact\nthat you’ve visited it before is not important.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-no-visited-state",
            "code": "\n  @include nhsuk-link-style-visited($link-visited-colour: $nhsuk-link-colour);\n",
            "line": {
              "start": 178,
              "end": 180
            }
          }
        }
      ]
    },
    {
      "description": "Visited link colour\n\n",
      "commentRange": {
        "start": 146,
        "end": 148
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-link-visited-colour",
        "value": "nhsuk-colour(\"purple\")",
        "scope": "default",
        "line": {
          "start": 150,
          "end": 150
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Link hover colour\n\n",
      "commentRange": {
        "start": 152,
        "end": 154
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-link-hover-colour",
        "value": "nhsuk-colour(\"dark-pink\")",
        "scope": "default",
        "line": {
          "start": 156,
          "end": 156
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Active link colour\n\n",
      "commentRange": {
        "start": 158,
        "end": 160
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-link-active-colour",
        "value": "nhsuk-shade($nhsuk-link-colour, 50%)",
        "scope": "default",
        "line": {
          "start": 162,
          "end": 162
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Button background colour\n\n",
      "commentRange": {
        "start": 168,
        "end": 170
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-button-colour",
        "value": "nhsuk-colour(\"green\")",
        "scope": "default",
        "line": {
          "start": 172,
          "end": 172
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Button text colour\n\n",
      "commentRange": {
        "start": 174,
        "end": 176
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-button-text-colour",
        "value": "nhsuk-colour(\"white\")",
        "scope": "default",
        "line": {
          "start": 178,
          "end": 178
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Button background colour (hover)\n\n",
      "commentRange": {
        "start": 180,
        "end": 182
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-button-hover-colour",
        "value": "nhsuk-shade($nhsuk-button-colour, 20%)",
        "scope": "default",
        "line": {
          "start": 184,
          "end": 184
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Button background colour (active)\n\n",
      "commentRange": {
        "start": 186,
        "end": 188
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-button-active-colour",
        "value": "nhsuk-shade($nhsuk-button-colour, 50%)",
        "scope": "default",
        "line": {
          "start": 190,
          "end": 190
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Button shadow colour\n\n",
      "commentRange": {
        "start": 192,
        "end": 194
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-button-shadow-colour",
        "value": "nhsuk-shade($nhsuk-button-colour, 50%)",
        "scope": "default",
        "line": {
          "start": 196,
          "end": 196
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Secondary button background colour\n\n",
      "commentRange": {
        "start": 198,
        "end": 200
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-secondary-button-colour",
        "value": "transparent",
        "scope": "default",
        "line": {
          "start": 202,
          "end": 202
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Secondary button (solid background) background colour\n\n",
      "commentRange": {
        "start": 204,
        "end": 206
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-secondary-button-solid-background-colour",
        "value": "nhsuk-colour(\"white\")",
        "scope": "default",
        "line": {
          "start": 208,
          "end": 208
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Secondary button border colour\n\n",
      "commentRange": {
        "start": 210,
        "end": 212
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-secondary-button-border-colour",
        "value": "$nhsuk-brand-colour",
        "scope": "default",
        "line": {
          "start": 214,
          "end": 214
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Secondary button text colour\n\n",
      "commentRange": {
        "start": 216,
        "end": 218
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-secondary-button-text-colour",
        "value": "$nhsuk-brand-colour",
        "scope": "default",
        "line": {
          "start": 220,
          "end": 220
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Secondary button background colour (hover)\n\n",
      "commentRange": {
        "start": 222,
        "end": 224
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-secondary-button-hover-colour",
        "value": "nhsuk-tint($nhsuk-secondary-button-border-colour, 85%)",
        "scope": "default",
        "line": {
          "start": 226,
          "end": 226
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Secondary button background colour (active)\n\n",
      "commentRange": {
        "start": 228,
        "end": 230
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-secondary-button-active-colour",
        "value": "nhsuk-tint($nhsuk-secondary-button-border-colour, 78%)",
        "scope": "default",
        "line": {
          "start": 232,
          "end": 232
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Secondary button shadow colour\n\n",
      "commentRange": {
        "start": 234,
        "end": 236
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-secondary-button-shadow-colour",
        "value": "$nhsuk-secondary-button-border-colour",
        "scope": "default",
        "line": {
          "start": 238,
          "end": 238
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Reverse button background colour\n\n",
      "commentRange": {
        "start": 240,
        "end": 242
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-reverse-button-colour",
        "value": "nhsuk-colour(\"white\")",
        "scope": "default",
        "line": {
          "start": 244,
          "end": 244
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Reverse button text colour\n\n",
      "commentRange": {
        "start": 246,
        "end": 248
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-reverse-button-text-colour",
        "value": "nhsuk-colour(\"black\")",
        "scope": "default",
        "line": {
          "start": 250,
          "end": 250
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Reverse button background colour (hover)\n\n",
      "commentRange": {
        "start": 252,
        "end": 254
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-reverse-button-hover-colour",
        "value": "nhsuk-shade($nhsuk-reverse-button-colour, 15%)",
        "scope": "default",
        "line": {
          "start": 256,
          "end": 256
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Reverse button background colour (active)\n\n",
      "commentRange": {
        "start": 258,
        "end": 260
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-reverse-button-active-colour",
        "value": "nhsuk-shade($nhsuk-reverse-button-colour, 30%)",
        "scope": "default",
        "line": {
          "start": 262,
          "end": 262
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Reverse button shadow colour\n\n",
      "commentRange": {
        "start": 264,
        "end": 266
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-reverse-button-shadow-colour",
        "value": "nhsuk-shade($nhsuk-reverse-button-colour, 30%)",
        "scope": "default",
        "line": {
          "start": 268,
          "end": 268
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Warning button background colour\n\n",
      "commentRange": {
        "start": 270,
        "end": 272
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-warning-button-colour",
        "value": "nhsuk-colour(\"red\")",
        "scope": "default",
        "line": {
          "start": 274,
          "end": 274
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Warning button background colour (hover)\n\n",
      "commentRange": {
        "start": 276,
        "end": 278
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-warning-button-hover-colour",
        "value": "nhsuk-shade($nhsuk-warning-button-colour, 20%)",
        "scope": "default",
        "line": {
          "start": 280,
          "end": 280
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Warning button background colour (active)\n\n",
      "commentRange": {
        "start": 282,
        "end": 284
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-warning-button-active-colour",
        "value": "nhsuk-shade($nhsuk-warning-button-colour, 50%)",
        "scope": "default",
        "line": {
          "start": 286,
          "end": 286
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Warning button shadow colour\n\n",
      "commentRange": {
        "start": 288,
        "end": 290
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-warning-button-shadow-colour",
        "value": "nhsuk-shade($nhsuk-warning-button-colour, 50%)",
        "scope": "default",
        "line": {
          "start": 292,
          "end": 292
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Login button background colour\n\n",
      "commentRange": {
        "start": 294,
        "end": 296
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-login-button-colour",
        "value": "$nhsuk-brand-colour",
        "scope": "default",
        "line": {
          "start": 298,
          "end": 298
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Login button background colour (hover)\n\n",
      "commentRange": {
        "start": 300,
        "end": 302
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-login-button-hover-colour",
        "value": "nhsuk-shade($nhsuk-login-button-colour, 20%)",
        "scope": "default",
        "line": {
          "start": 304,
          "end": 304
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Login button background colour (active)\n\n",
      "commentRange": {
        "start": 306,
        "end": 308
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-login-button-active-colour",
        "value": "nhsuk-shade($nhsuk-login-button-colour, 50%)",
        "scope": "default",
        "line": {
          "start": 310,
          "end": 310
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "Login button shadow colour\n\n",
      "commentRange": {
        "start": 312,
        "end": 314
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-login-button-shadow-colour",
        "value": "nhsuk-shade($nhsuk-login-button-colour, 50%)",
        "scope": "default",
        "line": {
          "start": 316,
          "end": 316
        }
      },
      "type": "Colour",
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-applied.scss",
        "name": "_colours-applied.scss"
      }
    },
    {
      "description": "NHS colour palette\n\n",
      "commentRange": {
        "start": 7,
        "end": 12
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-colours",
        "value": "(\n  // Primary\n  \"blue\": #005eb8,\n  \"white\": #ffffff,\n  \"black\": #212b32,\n  \"green\": #007f3b,\n  \"purple\": #330072,\n  \"dark-pink\": #7c2855,\n  \"red\": #d5281b,\n  \"yellow\": #ffeb3b,\n\n  // Secondary\n  \"dark-blue\": #003087,\n  \"pale-yellow\": #fff9c4,\n  \"warm-yellow\": #ffb81c,\n  \"orange\": #ed8b00,\n  \"aqua-green\": #00a499,\n  \"pink\": #ae2573,\n\n  // Greyscale\n  \"grey-1\": #4c6272,\n  \"grey-2\": #768692,\n  \"grey-3\": #aeb7bd,\n  \"grey-4\": #d8dde0,\n  \"grey-5\": #f0f4f5\n)",
        "scope": "default",
        "line": {
          "start": 14,
          "end": 39
        }
      },
      "type": "Map",
      "property": [
        {
          "type": "Map",
          "name": "$colour",
          "description": "Representation for the given $colour, where $colour is the\n  friendly name for the colour (e.g. \"red\": #ff0000);"
        }
      ],
      "group": [
        "settings/colours"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_colours-palette.scss",
        "name": "_colours-palette.scss"
      },
      "usedBy": [
        {
          "description": "\nGet colour\n\n",
          "context": {
            "type": "function",
            "name": "nhsuk-colour",
            "code": "\n  @if meta.type-of($colour) == \"color\" {\n    $colour: string.quote(\"#{$colour}\");\n  }\n\n  @if not map.has-key($nhsuk-colours, $colour) {\n    @error \"Unknown colour `#{$colour}`\";\n  }\n\n  @return map.get($nhsuk-colours, $colour);\n",
            "line": {
              "start": 21,
              "end": 31
            }
          }
        },
        {
          "description": "\nGet colour\n\n",
          "context": {
            "type": "function",
            "name": "nhsuk-colour",
            "code": "\n  @if meta.type-of($colour) == \"color\" {\n    $colour: string.quote(\"#{$colour}\");\n  }\n\n  @if not map.has-key($nhsuk-colours, $colour) {\n    @error \"Unknown colour `#{$colour}`\";\n  }\n\n  @return map.get($nhsuk-colours, $colour);\n",
            "line": {
              "start": 21,
              "end": 31
            }
          }
        }
      ]
    },
    {
      "description": "Fonts\n\n1. Fallback fonts if Frutiger fails to load\n",
      "commentRange": {
        "start": 9,
        "end": 11
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-font",
        "value": "\"Frutiger W01\"",
        "scope": "default",
        "line": {
          "start": 13,
          "end": 13
        }
      },
      "group": [
        "settings/globals"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_globals.scss",
        "name": "_globals.scss"
      }
    },
    {
      "description": "Font sizing and spacing\n",
      "commentRange": {
        "start": 21,
        "end": 21
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-base-font-size",
        "value": "16px",
        "scope": "default",
        "line": {
          "start": 23,
          "end": 23
        }
      },
      "group": [
        "settings/globals"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_globals.scss",
        "name": "_globals.scss"
      },
      "usedBy": [
        {
          "description": "Convert pixels to rem\n\nA quick way to convert px into rem\n\n",
          "context": {
            "type": "function",
            "name": "nhsuk-px-to-rem",
            "code": "\n  @if math.is-unitless($value) {\n    $value: $value * 1px;\n  }\n\n  @return math.div($value, $nhsuk-base-font-size) * 1rem;\n",
            "line": {
              "start": 39,
              "end": 45
            }
          }
        },
        {
          "description": "Chevron mixin\n\nGenerate chevron by using a box with borders on two sides, then rotating it.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-shape-chevron",
            "code": "\n  $outline-width: nhsuk-em($nhsuk-chevron-border, $font-size);\n  $box-size: nhsuk-em(math.div($font-size, 2), $font-size);\n  $size: nhsuk-em(nhsuk-chevron-size($font-size), $nhsuk-base-font-size);\n  display: $display;\n\n  width: $box-size;\n  height: $box-size;\n\n  clip-path: polygon(100% 100%, 100% 0, 0 0);\n\n  border-radius: 2px;\n\n  // Safari renders a hairline gap if we use borders, so use an inset outline\n  // instead. Because outlines are added to all sides of a box, we hide the\n  // outline on the two other two sides using clip-path.\n  outline: $outline-width solid currentcolor;\n  outline-offset: -$outline-width;\n\n  color: $colour;\n\n  @if $direction == \"up\" {\n    transform: translateY($outline-width) rotate(-45deg);\n  } @else if $direction == \"right\" {\n    transform: translateX(-$size + $outline-width) rotate(45deg);\n  } @else if $direction == \"down\" {\n    transform: translateY(-$size + $outline-width) rotate(135deg);\n  } @else if $direction == \"left\" {\n    transform: translateX($outline-width) rotate(225deg);\n  } @else {\n    @error \"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\";\n  }\n\n  @supports (border-width: string.unquote(\"max(0px)\")) {\n    $outline-width-eval: \"max(#{$nhsuk-chevron-border}, #{$outline-width})\";\n\n    // Ensure that the chevron outline never gets smaller than 2px\n    outline-width: string.unquote($outline-width-eval) string.unquote($outline-width-eval) 0 0;\n\n    // Ensure that the chevron never gets smaller than 16px\n    font-size: string.unquote(\"max(#{$font-size * 1px}, 1em)\");\n  }\n",
            "line": {
              "start": 21,
              "end": 63
            }
          }
        }
      ]
    },
    {
      "description": "Icon default sizing\n",
      "commentRange": {
        "start": 26,
        "end": 26
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-icon-size",
        "value": "24px",
        "scope": "default",
        "line": {
          "start": 28,
          "end": 28
        }
      },
      "group": [
        "settings/globals"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_globals.scss",
        "name": "_globals.scss"
      }
    },
    {
      "description": "Grid spacing\n",
      "commentRange": {
        "start": 31,
        "end": 31
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-page-width",
        "value": "960px",
        "scope": "default",
        "line": {
          "start": 33,
          "end": 33
        }
      },
      "group": [
        "settings/globals"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_globals.scss",
        "name": "_globals.scss"
      }
    },
    {
      "description": "Map of grid column widths\n",
      "commentRange": {
        "start": 37,
        "end": 37
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-grid-widths",
        "value": "(\n  one-quarter: math.percentage(math.div(1, 4)),\n  one-third: math.percentage(math.div(1, 3)),\n  one-half: math.percentage(math.div(1, 2)),\n  two-thirds: math.percentage(math.div(2, 3)),\n  three-quarters: math.percentage(math.div(3, 4)),\n  full: 100%\n)",
        "scope": "default",
        "line": {
          "start": 39,
          "end": 46
        }
      },
      "group": [
        "settings/globals"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_globals.scss",
        "name": "_globals.scss"
      },
      "usedBy": [
        {
          "description": "Grid width percentage\n\n",
          "context": {
            "type": "function",
            "name": "nhsuk-grid-width",
            "code": "\n  @if map.has-key($nhsuk-grid-widths, $key) {\n    @return map.get($nhsuk-grid-widths, $key);\n  }\n\n  @error \"Unknown grid width `#{$key}`\";\n",
            "line": {
              "start": 20,
              "end": 26
            }
          }
        },
        {
          "description": "Grid width percentage\n\n",
          "context": {
            "type": "function",
            "name": "nhsuk-grid-width",
            "code": "\n  @if map.has-key($nhsuk-grid-widths, $key) {\n    @return map.get($nhsuk-grid-widths, $key);\n  }\n\n  @error \"Unknown grid width `#{$key}`\";\n",
            "line": {
              "start": 20,
              "end": 26
            }
          }
        }
      ]
    },
    {
      "description": "Standard border width\n\n",
      "commentRange": {
        "start": 59,
        "end": 61
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-border-width",
        "value": "4px",
        "scope": "default",
        "line": {
          "start": 63,
          "end": 63
        }
      },
      "type": "Number",
      "group": [
        "settings/globals"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_globals.scss",
        "name": "_globals.scss"
      }
    },
    {
      "description": "Form control border width\n\n",
      "commentRange": {
        "start": 65,
        "end": 67
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-border-width-form-element",
        "value": "2px",
        "scope": "default",
        "line": {
          "start": 69,
          "end": 69
        }
      },
      "type": "Number",
      "group": [
        "settings/globals"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_globals.scss",
        "name": "_globals.scss"
      },
      "usedBy": [
        {
          "description": "Focused input (form elements)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used for interactive input-based elements such\nas text inputs.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-input",
            "code": "\n  border: $nhsuk-border-width-form-element solid $nhsuk-focus-text-colour;\n  outline: $nhsuk-focus-width solid $nhsuk-focus-colour;\n  outline-offset: 0;\n  box-shadow: inset 0 0 0 $nhsuk-border-width-form-element $nhsuk-focus-text-colour;\n",
            "line": {
              "start": 42,
              "end": 47
            }
          }
        },
        {
          "description": "Focused input (form elements)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used for interactive input-based elements such\nas text inputs.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-input",
            "code": "\n  border: $nhsuk-border-width-form-element solid $nhsuk-focus-text-colour;\n  outline: $nhsuk-focus-width solid $nhsuk-focus-colour;\n  outline-offset: 0;\n  box-shadow: inset 0 0 0 $nhsuk-border-width-form-element $nhsuk-focus-text-colour;\n",
            "line": {
              "start": 42,
              "end": 47
            }
          }
        }
      ]
    },
    {
      "description": "Form group border width when in error state\n\n",
      "commentRange": {
        "start": 71,
        "end": 74
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-border-width-form-group-error",
        "value": "$nhsuk-border-width",
        "scope": "default",
        "line": {
          "start": 76,
          "end": 76
        }
      },
      "type": "Number",
      "access": "public",
      "group": [
        "settings/globals"
      ],
      "file": {
        "path": "core/settings/_globals.scss",
        "name": "_globals.scss"
      }
    },
    {
      "description": "Border width of focus outline\n\n",
      "commentRange": {
        "start": 78,
        "end": 80
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-focus-width",
        "value": "4px",
        "scope": "default",
        "line": {
          "start": 82,
          "end": 82
        }
      },
      "type": "Number",
      "group": [
        "settings/globals"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_globals.scss",
        "name": "_globals.scss"
      },
      "usedBy": [
        {
          "description": "Header link styling\n\n",
          "context": {
            "type": "mixin",
            "name": "_header-link-style",
            "code": "\n  & {\n    color: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n\n  &:focus,\n  &:focus:visited {\n    color: $nhsuk-focus-text-colour;\n    box-shadow: inset 0 ($nhsuk-focus-width * -1) $nhsuk-focus-text-colour;\n  }\n\n  @include nhsuk-print-colour($print-colour: inherit) {\n    &::after {\n      content: \"\";\n    }\n  }\n",
            "line": {
              "start": 43,
              "end": 68
            }
          }
        },
        {
          "description": "Focused text\n\nProvides an outline to clearly indicate when the target element is focused.\nUsed for interactive text-based elements.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-text",
            "code": "\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\n  // transparent outline which will be set to a visible colour.\n  outline: $nhsuk-focus-width solid transparent;\n  background-color: $nhsuk-focus-colour;\n  box-shadow:\n    0 -2px $nhsuk-focus-colour,\n    0 $nhsuk-focus-width $nhsuk-focus-text-colour;\n\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the \"underline\"\n  text-decoration: none;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 15,
              "end": 34
            }
          }
        },
        {
          "description": "Focused text\n\nProvides an outline to clearly indicate when the target element is focused.\nUsed for interactive text-based elements.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-text",
            "code": "\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\n  // transparent outline which will be set to a visible colour.\n  outline: $nhsuk-focus-width solid transparent;\n  background-color: $nhsuk-focus-colour;\n  box-shadow:\n    0 -2px $nhsuk-focus-colour,\n    0 $nhsuk-focus-width $nhsuk-focus-text-colour;\n\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the \"underline\"\n  text-decoration: none;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 15,
              "end": 34
            }
          }
        },
        {
          "description": "Focused input (form elements)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used for interactive input-based elements such\nas text inputs.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-input",
            "code": "\n  border: $nhsuk-border-width-form-element solid $nhsuk-focus-text-colour;\n  outline: $nhsuk-focus-width solid $nhsuk-focus-colour;\n  outline-offset: 0;\n  box-shadow: inset 0 0 0 $nhsuk-border-width-form-element $nhsuk-focus-text-colour;\n",
            "line": {
              "start": 42,
              "end": 47
            }
          }
        },
        {
          "description": "Focused radio input (form element)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used by radios.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-radio",
            "code": "\n  border: $nhsuk-focus-width solid $nhsuk-focus-text-colour;\n  box-shadow: 0 0 0 $nhsuk-focus-width $nhsuk-focus-colour;\n",
            "line": {
              "start": 54,
              "end": 57
            }
          }
        },
        {
          "description": "Focused radio input (form element)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used by radios.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-radio",
            "code": "\n  border: $nhsuk-focus-width solid $nhsuk-focus-text-colour;\n  box-shadow: 0 0 0 $nhsuk-focus-width $nhsuk-focus-colour;\n",
            "line": {
              "start": 54,
              "end": 57
            }
          }
        },
        {
          "description": "Focused checkbox input (form element)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used by checkbox.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-checkbox",
            "code": "\n  border: $nhsuk-focus-width solid $nhsuk-focus-text-colour;\n  box-shadow: 0 0 0 $nhsuk-focus-width $nhsuk-focus-colour;\n",
            "line": {
              "start": 64,
              "end": 67
            }
          }
        },
        {
          "description": "Focused checkbox input (form element)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used by checkbox.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-checkbox",
            "code": "\n  border: $nhsuk-focus-width solid $nhsuk-focus-text-colour;\n  box-shadow: 0 0 0 $nhsuk-focus-width $nhsuk-focus-colour;\n",
            "line": {
              "start": 64,
              "end": 67
            }
          }
        },
        {
          "description": "Focused button\n\nProvides an additional outline and background to clearly indicate when\nthe target element has focus. Used for buttons.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-button",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  outline-offset: $nhsuk-focus-width;\n  color: $nhsuk-focus-text-colour;\n  background-color: $nhsuk-focus-colour;\n  box-shadow: 0 $nhsuk-focus-width 0 0 $nhsuk-focus-text-colour;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 74,
              "end": 86
            }
          }
        },
        {
          "description": "Focused button\n\nProvides an additional outline and background to clearly indicate when\nthe target element has focus. Used for buttons.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-button",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  outline-offset: $nhsuk-focus-width;\n  color: $nhsuk-focus-text-colour;\n  background-color: $nhsuk-focus-colour;\n  box-shadow: 0 $nhsuk-focus-width 0 0 $nhsuk-focus-text-colour;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 74,
              "end": 86
            }
          }
        },
        {
          "description": "Focused button\n\nProvides an additional outline and background to clearly indicate when\nthe target element has focus. Used for buttons.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-button",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  outline-offset: $nhsuk-focus-width;\n  color: $nhsuk-focus-text-colour;\n  background-color: $nhsuk-focus-colour;\n  box-shadow: 0 $nhsuk-focus-width 0 0 $nhsuk-focus-text-colour;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
            "line": {
              "start": 74,
              "end": 86
            }
          }
        },
        {
          "description": "Focused box\n\nProvides an outline to clearly indicate when the target element is focused.\nUnlike nhsuk-focused-text, which only draws an underline below the element,\nnhsuk-focused-box draws an outline around all sides of the element.\nBest used for non-text content contained within links.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-focused-box",
            "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  box-shadow:\n    0 0 0 4px $nhsuk-focus-colour,\n    0 0 0 8px $nhsuk-focus-text-colour;\n",
            "line": {
              "start": 95,
              "end": 100
            }
          }
        }
      ]
    },
    {
      "description": "Breakpoint definitions\n",
      "commentRange": {
        "start": 5,
        "end": 5
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-breakpoints",
        "value": "(\n  mobile: 320px,\n  tablet: 641px,\n  desktop: 769px,\n  large-desktop: 990px\n)",
        "scope": "default",
        "line": {
          "start": 7,
          "end": 12
        }
      },
      "group": [
        "settings/layout"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_breakpoints.scss",
        "name": "_breakpoints.scss"
      }
    },
    {
      "description": "Show active breakpoint in top-right corner.\n\nOnly use this during local development.\n",
      "commentRange": {
        "start": 14,
        "end": 16
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-show-breakpoints",
        "value": "false",
        "scope": "default",
        "line": {
          "start": 18,
          "end": 18
        }
      },
      "group": [
        "settings/layout"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_breakpoints.scss",
        "name": "_breakpoints.scss"
      }
    },
    {
      "description": "Single point spacing variables\n\n",
      "commentRange": {
        "start": 5,
        "end": 7
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-spacing-points",
        "value": "(\n  0: 0,\n  1: 4px,\n  2: 8px,\n  3: 16px,\n  4: 24px,\n  5: 32px,\n  6: 40px,\n  7: 48px,\n  8: 56px,\n  9: 64px\n)",
        "scope": "default",
        "line": {
          "start": 9,
          "end": 20
        }
      },
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "settings/spacing"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_spacing.scss",
        "name": "_spacing.scss"
      },
      "usedBy": [
        {
          "description": "Single point spacing\n\nReturns measurement corresponding to the spacing point requested.\n\n",
          "context": {
            "type": "function",
            "name": "nhsuk-spacing",
            "code": "\n  $actual-input-type: meta.type-of($spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \"\n      + \"#{$actual-input-type}.\";\n  }\n\n  $is-negative: false;\n  @if $spacing-point < 0 {\n    $is-negative: true;\n    $spacing-point: math.abs($spacing-point);\n  }\n\n  @if not map.has-key($nhsuk-spacing-points, $spacing-point) {\n    @error \"Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  $value: map.get($nhsuk-spacing-points, $spacing-point);\n  @return if($is-negative, $value * -1, $value);\n",
            "line": {
              "start": 39,
              "end": 58
            }
          }
        },
        {
          "description": "Single point spacing\n\nReturns measurement corresponding to the spacing point requested.\n\n",
          "context": {
            "type": "function",
            "name": "nhsuk-spacing",
            "code": "\n  $actual-input-type: meta.type-of($spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \"\n      + \"#{$actual-input-type}.\";\n  }\n\n  $is-negative: false;\n  @if $spacing-point < 0 {\n    $is-negative: true;\n    $spacing-point: math.abs($spacing-point);\n  }\n\n  @if not map.has-key($nhsuk-spacing-points, $spacing-point) {\n    @error \"Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  $value: map.get($nhsuk-spacing-points, $spacing-point);\n  @return if($is-negative, $value * -1, $value);\n",
            "line": {
              "start": 39,
              "end": 58
            }
          }
        },
        {
          "description": "Generate static spacing override classes\n\nGenerate spacing override classes for the given property (e.g. margin)\nfor each point in the non-responsive spacing scale.\n\n",
          "context": {
            "type": "mixin",
            "name": "_nhsuk-generate-static-spacing-overrides",
            "code": "\n  @each $spacing-point in map.keys($nhsuk-spacing-points) {\n    .nhsuk-u-static-#{$property}-#{$spacing-point} {\n      #{$property}: nhsuk-spacing($spacing-point) !important;\n    }\n\n    @each $direction in $_spacing-directions {\n      .nhsuk-u-static-#{$property}-#{$direction}-#{$spacing-point} {\n        #{$property}-#{$direction}: nhsuk-spacing($spacing-point) !important;\n      }\n    }\n  }\n",
            "line": {
              "start": 72,
              "end": 84
            }
          }
        }
      ]
    },
    {
      "description": "Responsive spacing map\n\nThese definitions are used to generate responsive spacing that adapts\naccording to the breakpoints (see 'tools/spacing'). These maps should be\nused wherever possible to standardise responsive spacing.\n\nYou can define different behaviour on tablet and desktop. The 'null'\nbreakpoint is for mobile.\n\nAccess responsive spacing with `nhsuk-responsive-margin` or\n`nhsuk-responsive-padding` mixins.\n\n",
      "commentRange": {
        "start": 22,
        "end": 34
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-spacing-responsive-scale",
        "value": "(\n  0: (\n    null: 0,\n    tablet: 0\n  ),\n  1: (\n    null: 4px,\n    tablet: 4px\n  ),\n  2: (\n    null: 8px,\n    tablet: 8px\n  ),\n  3: (\n    null: 8px,\n    tablet: 16px\n  ),\n  4: (\n    null: 16px,\n    tablet: 24px\n  ),\n  5: (\n    null: 24px,\n    tablet: 32px\n  ),\n  6: (\n    null: 32px,\n    tablet: 40px\n  ),\n  7: (\n    null: 40px,\n    tablet: 48px\n  ),\n  8: (\n    null: 48px,\n    tablet: 56px\n  ),\n  9: (\n    null: 56px,\n    tablet: 64px\n  )\n)",
        "scope": "default",
        "line": {
          "start": 36,
          "end": 77
        }
      },
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "settings/spacing"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_spacing.scss",
        "name": "_spacing.scss"
      },
      "usedBy": [
        {
          "description": "Responsive spacing\n\nAdds responsive spacing (either padding or margin, depending on `$property`)\nby fetching a 'spacing map' from the responsive spacing scale, which defines\ndifferent spacing values at different breakpoints.\n\nTo generate responsive spacing, use 'nhsuk-responsive-margin' or\n'nhsuk-responsive-padding' mixins\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-responsive-spacing",
            "code": "\n  $actual-input-type: meta.type-of($responsive-spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \" + \"#{$actual-input-type}.\";\n  }\n\n  @if not map.has-key($nhsuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error \"Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the \"\n      + \"responsive spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  $scale-map: map.get($nhsuk-spacing-responsive-scale, $responsive-spacing-point); // [1]\n  $actual-map-type: meta.type-of($scale-map);\n  @if $actual-map-type != \"map\" {\n    @error \"Expected a number (integer), but got a \"\n      + \"#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)\";\n  }\n\n  @each $breakpoint, $breakpoint-value in $scale-map {\n    // [2]\n\n    @if $adjustment {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    & {\n      @if not $breakpoint {\n        // [3]\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          @if $direction == all {\n            #{$property}: $breakpoint-value if($important, !important, null);\n          } @else {\n            #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n          }\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 89,
              "end": 139
            }
          }
        },
        {
          "description": "Responsive spacing\n\nAdds responsive spacing (either padding or margin, depending on `$property`)\nby fetching a 'spacing map' from the responsive spacing scale, which defines\ndifferent spacing values at different breakpoints.\n\nTo generate responsive spacing, use 'nhsuk-responsive-margin' or\n'nhsuk-responsive-padding' mixins\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-responsive-spacing",
            "code": "\n  $actual-input-type: meta.type-of($responsive-spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \" + \"#{$actual-input-type}.\";\n  }\n\n  @if not map.has-key($nhsuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error \"Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the \"\n      + \"responsive spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  $scale-map: map.get($nhsuk-spacing-responsive-scale, $responsive-spacing-point); // [1]\n  $actual-map-type: meta.type-of($scale-map);\n  @if $actual-map-type != \"map\" {\n    @error \"Expected a number (integer), but got a \"\n      + \"#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)\";\n  }\n\n  @each $breakpoint, $breakpoint-value in $scale-map {\n    // [2]\n\n    @if $adjustment {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    & {\n      @if not $breakpoint {\n        // [3]\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          @if $direction == all {\n            #{$property}: $breakpoint-value if($important, !important, null);\n          } @else {\n            #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n          }\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 89,
              "end": 139
            }
          }
        },
        {
          "description": "Generate responsive spacing override classes\n\nGenerate spacing override classes for the given property (e.g. margin)\nfor each point in the responsive spacing scale.\n\n",
          "context": {
            "type": "mixin",
            "name": "_nhsuk-generate-responsive-spacing-overrides",
            "code": "\n  // For each point in the spacing scale (defined in settings), create an\n  // override that affects all directions...\n  @each $scale-point, $scale-map in $nhsuk-spacing-responsive-scale {\n    .nhsuk-u-#{$property}-#{$scale-point} {\n      @include nhsuk-responsive-spacing($scale-point, $property, \"all\", true);\n    }\n\n    // ... and then an override for each individual direction\n    @each $direction in $_spacing-directions {\n      .nhsuk-u-#{$property}-#{$direction}-#{$scale-point} {\n        @include nhsuk-responsive-spacing($scale-point, $property, $direction, true);\n      }\n    }\n  }\n",
            "line": {
              "start": 41,
              "end": 56
            }
          }
        }
      ]
    },
    {
      "description": "Responsive typography font map\n\nThis is used to generate responsive typography that adapts according to the\nbreakpoints.\n\nFont size and font weight can be defined for each breakpoint. You can define\ndifferent behaviour on tablet and desktop. The 'null' breakpoint is for\nmobile.\n\nLine-heights will automatically be converted from pixel measurements into\nrelative values. For example, with a font-size of 16px and a line-height of\n24px, the line-height will be converted to 1.5 before output.\n\nYou can also specify a separate font size and line height for print media.\n\n",
      "commentRange": {
        "start": 9,
        "end": 29
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-typography-scale",
        "value": "(\n  64: (\n    null: (\n      font-size: 48px,\n      line-height: 54px\n    ),\n    tablet: (\n      font-size: 64px,\n      line-height: 70px\n    ),\n    print: (\n      font-size: 34pt,\n      line-height: 1.1\n    )\n  ),\n  48: (\n    null: (\n      font-size: 32px,\n      line-height: 38px\n    ),\n    tablet: (\n      font-size: 48px,\n      line-height: 54px\n    ),\n    print: (\n      font-size: 26pt,\n      line-height: 1.15\n    )\n  ),\n  36: (\n    null: (\n      font-size: 27px,\n      line-height: 33px\n    ),\n    tablet: (\n      font-size: 36px,\n      line-height: 42px\n    ),\n    print: (\n      font-size: 20pt,\n      line-height: 1.2\n    )\n  ),\n  26: (\n    null: (\n      font-size: 22px,\n      line-height: 29px\n    ),\n    tablet: (\n      font-size: 26px,\n      line-height: 32px\n    ),\n    print: (\n      font-size: 17pt,\n      line-height: 1.25\n    )\n  ),\n  22: (\n    null: (\n      font-size: 19px,\n      line-height: 27px\n    ),\n    tablet: (\n      font-size: 22px,\n      line-height: 30px\n    ),\n    print: (\n      font-size: 15pt,\n      line-height: 1.25\n    )\n  ),\n  19: (\n    null: (\n      font-size: 16px,\n      line-height: 24px\n    ),\n    tablet: (\n      font-size: 19px,\n      line-height: 28px\n    ),\n    print: (\n      font-size: 13pt,\n      line-height: 1.25\n    )\n  ),\n  16: (\n    null: (\n      font-size: 14px,\n      line-height: 24px\n    ),\n    tablet: (\n      font-size: 16px,\n      line-height: 24px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.3\n    )\n  ),\n  14: (\n    null: (\n      font-size: 12px,\n      line-height: 20px\n    ),\n    tablet: (\n      font-size: 14px,\n      line-height: 24px\n    ),\n    print: (\n      font-size: 12pt,\n      line-height: 1.3\n    )\n  )\n)",
        "scope": "default",
        "line": {
          "start": 31,
          "end": 144
        }
      },
      "property": [
        {
          "type": "Number",
          "name": "$point.$breakpoint.font-size",
          "description": "Font size for `$point` at `$breakpoint`"
        },
        {
          "type": "Number",
          "name": "$point.$breakpoint.line-height",
          "description": "Line height for `$point` at `$breakpoint`"
        },
        {
          "type": "Number",
          "name": "$point.print.font-size",
          "description": "Font size for `$point` when printing"
        },
        {
          "type": "Number",
          "name": "$point.print.line-height",
          "description": "Line height for `$point` when printing"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "settings/typography"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_typography.scss",
        "name": "_typography.scss"
      },
      "usedBy": [
        {
          "description": "Font size and line height helper\n\nTakes a point from the responsive 'font map' as an argument (the size as it\nwould appear on tablet and above), and uses it to create font-size and\nline-height declarations for different breakpoints, and print.\n\nExample font map:\n\n```scss\n19: (\n  null: (\n    font-size: 16px,\n    line-height: 20px\n  ),\n  tablet: (\n    font-size: 19px,\n    line-height: 25px\n  ),\n  print: (\n    font-size: 14pt,\n    line-height: 1.15\n  )\n);\n```\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font-size",
            "code": "\n  // Flag font sizes that start with underscores so we can suppress warnings on\n  // deprecated sizes used internally, for example `nhsuk-font($size: \"_24\")`\n  $size-internal-use-only: string.slice(#{$size}, 1, 1) == \"_\";\n\n  // Remove underscore from font sizes flagged for internal use\n  @if $size-internal-use-only {\n    $size: string.slice(#{$size}, 2);\n  }\n\n  // Check for a font map exactly matching the given size\n  $font-map: map.get($nhsuk-typography-scale, $size);\n\n  // No match? Try with string type (e.g. $size: \"16\" not 16)\n  @if not $font-map {\n    @each $font-size in map.keys($nhsuk-typography-scale) {\n      @if not $font-map and \"#{$font-size}\" == \"#{$size}\" {\n        $font-map: map.get($nhsuk-typography-scale, $font-size);\n      }\n    }\n  }\n\n  // Still no match? Throw error\n  @if not $font-map {\n    @error \"Unknown font size `#{$size}` - expected a point from the typography scale.\";\n  }\n\n  // Check for a deprecation within the typography scale\n  $deprecation: map.get($font-map, \"deprecation\");\n\n  @if $deprecation {\n    // Warn on deprecated font sizes unless flagged for internal use\n    @if not $size-internal-use-only {\n      @include nhsuk-warning(map.get($deprecation, \"key\"), map.get($deprecation, \"message\"));\n    }\n\n    // remove the deprecation map keys so they do not break the breakpoint loop\n    $font-map: map.remove($font-map, \"deprecation\");\n  }\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map.get($breakpoint-map, \"font-size\");\n    $font-size-rem: nhsuk-px-to-rem($font-size);\n\n    // $calculated-line-height is a separate variable from $line-height,\n    // as otherwise the value would get redefined with each loop and\n    // eventually break nhsuk-line-height.\n    //\n    // We continue to call the param $line-height to stay consistent with the\n    // naming with nhsuk-font.\n    $calculated-line-height: nhsuk-line-height(\n      $line-height: if($line-height, $line-height, map.get($breakpoint-map, \"line-height\")),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $calculated-line-height: $calculated-line-height if($important, !important, null);\n\n    & {\n      @if not $breakpoint {\n        font-size: $font-size;\n        font-size: $font-size-rem;\n        line-height: $calculated-line-height;\n      } @else if $breakpoint == \"print\" {\n        @include nhsuk-media-query($media-type: print) {\n          font-size: $font-size;\n          line-height: $calculated-line-height;\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          font-size: $font-size;\n          font-size: $font-size-rem;\n          line-height: $calculated-line-height;\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 134,
              "end": 215
            }
          }
        },
        {
          "description": "Font size and line height helper\n\nTakes a point from the responsive 'font map' as an argument (the size as it\nwould appear on tablet and above), and uses it to create font-size and\nline-height declarations for different breakpoints, and print.\n\nExample font map:\n\n```scss\n19: (\n  null: (\n    font-size: 16px,\n    line-height: 20px\n  ),\n  tablet: (\n    font-size: 19px,\n    line-height: 25px\n  ),\n  print: (\n    font-size: 14pt,\n    line-height: 1.15\n  )\n);\n```\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font-size",
            "code": "\n  // Flag font sizes that start with underscores so we can suppress warnings on\n  // deprecated sizes used internally, for example `nhsuk-font($size: \"_24\")`\n  $size-internal-use-only: string.slice(#{$size}, 1, 1) == \"_\";\n\n  // Remove underscore from font sizes flagged for internal use\n  @if $size-internal-use-only {\n    $size: string.slice(#{$size}, 2);\n  }\n\n  // Check for a font map exactly matching the given size\n  $font-map: map.get($nhsuk-typography-scale, $size);\n\n  // No match? Try with string type (e.g. $size: \"16\" not 16)\n  @if not $font-map {\n    @each $font-size in map.keys($nhsuk-typography-scale) {\n      @if not $font-map and \"#{$font-size}\" == \"#{$size}\" {\n        $font-map: map.get($nhsuk-typography-scale, $font-size);\n      }\n    }\n  }\n\n  // Still no match? Throw error\n  @if not $font-map {\n    @error \"Unknown font size `#{$size}` - expected a point from the typography scale.\";\n  }\n\n  // Check for a deprecation within the typography scale\n  $deprecation: map.get($font-map, \"deprecation\");\n\n  @if $deprecation {\n    // Warn on deprecated font sizes unless flagged for internal use\n    @if not $size-internal-use-only {\n      @include nhsuk-warning(map.get($deprecation, \"key\"), map.get($deprecation, \"message\"));\n    }\n\n    // remove the deprecation map keys so they do not break the breakpoint loop\n    $font-map: map.remove($font-map, \"deprecation\");\n  }\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map.get($breakpoint-map, \"font-size\");\n    $font-size-rem: nhsuk-px-to-rem($font-size);\n\n    // $calculated-line-height is a separate variable from $line-height,\n    // as otherwise the value would get redefined with each loop and\n    // eventually break nhsuk-line-height.\n    //\n    // We continue to call the param $line-height to stay consistent with the\n    // naming with nhsuk-font.\n    $calculated-line-height: nhsuk-line-height(\n      $line-height: if($line-height, $line-height, map.get($breakpoint-map, \"line-height\")),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $calculated-line-height: $calculated-line-height if($important, !important, null);\n\n    & {\n      @if not $breakpoint {\n        font-size: $font-size;\n        font-size: $font-size-rem;\n        line-height: $calculated-line-height;\n      } @else if $breakpoint == \"print\" {\n        @include nhsuk-media-query($media-type: print) {\n          font-size: $font-size;\n          line-height: $calculated-line-height;\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          font-size: $font-size;\n          font-size: $font-size-rem;\n          line-height: $calculated-line-height;\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 134,
              "end": 215
            }
          }
        },
        {
          "description": "Font size and line height helper\n\nTakes a point from the responsive 'font map' as an argument (the size as it\nwould appear on tablet and above), and uses it to create font-size and\nline-height declarations for different breakpoints, and print.\n\nExample font map:\n\n```scss\n19: (\n  null: (\n    font-size: 16px,\n    line-height: 20px\n  ),\n  tablet: (\n    font-size: 19px,\n    line-height: 25px\n  ),\n  print: (\n    font-size: 14pt,\n    line-height: 1.15\n  )\n);\n```\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font-size",
            "code": "\n  // Flag font sizes that start with underscores so we can suppress warnings on\n  // deprecated sizes used internally, for example `nhsuk-font($size: \"_24\")`\n  $size-internal-use-only: string.slice(#{$size}, 1, 1) == \"_\";\n\n  // Remove underscore from font sizes flagged for internal use\n  @if $size-internal-use-only {\n    $size: string.slice(#{$size}, 2);\n  }\n\n  // Check for a font map exactly matching the given size\n  $font-map: map.get($nhsuk-typography-scale, $size);\n\n  // No match? Try with string type (e.g. $size: \"16\" not 16)\n  @if not $font-map {\n    @each $font-size in map.keys($nhsuk-typography-scale) {\n      @if not $font-map and \"#{$font-size}\" == \"#{$size}\" {\n        $font-map: map.get($nhsuk-typography-scale, $font-size);\n      }\n    }\n  }\n\n  // Still no match? Throw error\n  @if not $font-map {\n    @error \"Unknown font size `#{$size}` - expected a point from the typography scale.\";\n  }\n\n  // Check for a deprecation within the typography scale\n  $deprecation: map.get($font-map, \"deprecation\");\n\n  @if $deprecation {\n    // Warn on deprecated font sizes unless flagged for internal use\n    @if not $size-internal-use-only {\n      @include nhsuk-warning(map.get($deprecation, \"key\"), map.get($deprecation, \"message\"));\n    }\n\n    // remove the deprecation map keys so they do not break the breakpoint loop\n    $font-map: map.remove($font-map, \"deprecation\");\n  }\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map.get($breakpoint-map, \"font-size\");\n    $font-size-rem: nhsuk-px-to-rem($font-size);\n\n    // $calculated-line-height is a separate variable from $line-height,\n    // as otherwise the value would get redefined with each loop and\n    // eventually break nhsuk-line-height.\n    //\n    // We continue to call the param $line-height to stay consistent with the\n    // naming with nhsuk-font.\n    $calculated-line-height: nhsuk-line-height(\n      $line-height: if($line-height, $line-height, map.get($breakpoint-map, \"line-height\")),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $calculated-line-height: $calculated-line-height if($important, !important, null);\n\n    & {\n      @if not $breakpoint {\n        font-size: $font-size;\n        font-size: $font-size-rem;\n        line-height: $calculated-line-height;\n      } @else if $breakpoint == \"print\" {\n        @include nhsuk-media-query($media-type: print) {\n          font-size: $font-size;\n          line-height: $calculated-line-height;\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          font-size: $font-size;\n          font-size: $font-size-rem;\n          line-height: $calculated-line-height;\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 134,
              "end": 215
            }
          }
        }
      ]
    },
    {
      "description": "Suppressed warnings map\n\nThis map is used to determine which deprecation warnings to **not** show\nto users when compiling sass. This is in place for codebases that do not\nhave the necessary capacity to upgrade and remove the deprecation,\nparticularly if the deprecation is significant. For example, the removal of\nmixins and functions that were previously available to users of frontend.\n\nYou can add to this map and define which warnings to suppress by appending to\nit using the warning key, found in the warning message. For example:\n\n",
      "commentRange": {
        "start": 9,
        "end": 28
      },
      "context": {
        "type": "variable",
        "name": "nhsuk-suppressed-warnings",
        "value": "()",
        "scope": "default",
        "line": {
          "start": 30,
          "end": 30
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "// warning message:\n//  $foobar is no longer supported. To silence this warning, update\n//  $nhsuk-suppressed-warnings with key: \"foobar\"\n$nhsuk-suppressed-warnings: (\n  foobar\n);"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "settings/warnings"
      ],
      "access": "public",
      "file": {
        "path": "core/settings/_warnings.scss",
        "name": "_warnings.scss"
      },
      "usedBy": [
        {
          "description": "Warnings\n\nActs as a wrapper for the built in `@warn` sass function\n\nWe use this instead of using `@warn` for 3 reasons:\n\n- To check if a warning is being suppressed through `$nhsuk-suppressed-warnings`,\nin which case we don't call `@warn` and printing the warning to the user\n- To format the passed warning `$message` with the warning key at the end\n- To prevent duplicate warnings by adding the passed `$key` to\n`$nhsuk-suppressed-warnings` after `@warn` is called to ensure it only runs\nonce per sass compilation\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-warning",
            "code": "\n  @if _should-warn($key) {\n    @warn _warning-text($key, $message);\n\n    @if $silence-further-warnings {\n      $nhsuk-suppressed-warnings: list.append($nhsuk-suppressed-warnings, $key) !global;\n    }\n  }\n",
            "line": {
              "start": 53,
              "end": 61
            }
          }
        },
        {
          "description": "Warnings\n\nActs as a wrapper for the built in `@warn` sass function\n\nWe use this instead of using `@warn` for 3 reasons:\n\n- To check if a warning is being suppressed through `$nhsuk-suppressed-warnings`,\nin which case we don't call `@warn` and printing the warning to the user\n- To format the passed warning `$message` with the warning key at the end\n- To prevent duplicate warnings by adding the passed `$key` to\n`$nhsuk-suppressed-warnings` after `@warn` is called to ensure it only runs\nonce per sass compilation\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-warning",
            "code": "\n  @if _should-warn($key) {\n    @warn _warning-text($key, $message);\n\n    @if $silence-further-warnings {\n      $nhsuk-suppressed-warnings: list.append($nhsuk-suppressed-warnings, $key) !global;\n    }\n  }\n",
            "line": {
              "start": 53,
              "end": 61
            }
          }
        },
        {
          "description": "Check whether a key is present in the suppressed warnings list.\n\n",
          "context": {
            "type": "function",
            "name": "_should-warn",
            "code": "\n  @return list.index($nhsuk-suppressed-warnings, $key) == null;\n",
            "line": {
              "start": 71,
              "end": 73
            }
          }
        },
        {
          "description": "Format a warning by appending information on how to suppress it.\n\n",
          "context": {
            "type": "function",
            "name": "_warning-text",
            "code": "\n  @return $message + \" To silence this warning, update $nhsuk-suppressed-warnings \" + 'with key: \"#{$key}\"';\n",
            "line": {
              "start": 84,
              "end": 86
            }
          }
        }
      ]
    },
    {
      "description": "Warnings\n\nActs as a wrapper for the built in `@warn` sass function\n\nWe use this instead of using `@warn` for 3 reasons:\n\n- To check if a warning is being suppressed through `$nhsuk-suppressed-warnings`,\nin which case we don't call `@warn` and printing the warning to the user\n- To format the passed warning `$message` with the warning key at the end\n- To prevent duplicate warnings by adding the passed `$key` to\n`$nhsuk-suppressed-warnings` after `@warn` is called to ensure it only runs\nonce per sass compilation\n\n",
      "commentRange": {
        "start": 32,
        "end": 51
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-warning",
        "code": "\n  @if _should-warn($key) {\n    @warn _warning-text($key, $message);\n\n    @if $silence-further-warnings {\n      $nhsuk-suppressed-warnings: list.append($nhsuk-suppressed-warnings, $key) !global;\n    }\n  }\n",
        "line": {
          "start": 53,
          "end": 61
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "key",
          "description": "The key to be checked against `$nhsuk-suppressed-warnings`\nand then passed to it to prevent multiple of the same warning."
        },
        {
          "type": "String",
          "name": "message",
          "description": "The message to use when calling `@warn`"
        },
        {
          "type": "Boolean",
          "name": "silence-further-warnings",
          "description": "Whether to silence future\nwarnings that use the same $key\n"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "settings/warnings"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "_should-warn"
        },
        {
          "type": "function",
          "name": "_warning-text"
        },
        {
          "type": "variable",
          "name": "nhsuk-suppressed-warnings"
        },
        {
          "type": "variable",
          "name": "nhsuk-suppressed-warnings"
        }
      ],
      "file": {
        "path": "core/settings/_warnings.scss",
        "name": "_warnings.scss"
      },
      "usedBy": [
        {
          "description": "Clearfix mixin (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "clearfix",
            "code": "\n  @include nhsuk-warning(\"clearfix\", \"clearfix is deprecated. Use nhsuk-clearfix instead.\");\n  @include nhsuk-clearfix;\n",
            "line": {
              "start": 32,
              "end": 35
            }
          }
        },
        {
          "description": "Reading width mixin, add a maximum width\nto large pieces of content (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "reading-width",
            "code": "\n  @include nhsuk-warning(\"reading-width\", \"reading-width is deprecated. Use nhsuk-reading-width instead.\");\n  @include nhsuk-reading-width;\n",
            "line": {
              "start": 54,
              "end": 57
            }
          }
        },
        {
          "description": "Hide an element visually, but have it available for screen readers whilst\nallowing the element to be focused when navigated to via the keyboard (e.g.\nfor the skip link) (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "visually-hidden-focusable",
            "code": "\n  @include nhsuk-warning(\n    \"visually-hidden-focusable\",\n    \"visually-hidden-focusable is deprecated. Use nhsuk-visually-hidden-focusable instead.\"\n  );\n  @include nhsuk-visually-hidden-focusable($args...);\n",
            "line": {
              "start": 157,
              "end": 163
            }
          }
        },
        {
          "description": "Show an element visually that has previously been hidden by visually-hidden\n\nFor differences between mobile and desktop views, use $display to set the CSS display property\n\n",
          "context": {
            "type": "mixin",
            "name": "visually-shown",
            "code": "\n  @include nhsuk-warning(\n    \"visually-shown\",\n    \"visually-shown is deprecated. Use @media queries to apply `visually-hidden` instead.\"\n  );\n\n  position: static if($important, !important, null);\n\n  width: auto if($important, !important, null);\n  height: auto if($important, !important, null);\n  margin: 0 if($important, !important, null);\n  padding: 0 if($important, !important, null);\n\n  overflow: visible if($important, !important, null);\n\n  clip: auto if($important, !important, null);\n  clip-path: none if($important, !important, null);\n\n  border: none if($important, !important, null);\n\n  white-space: normal if($important, !important, null);\n  user-select: auto if($important, !important, null);\n\n  @if $display {\n    display: $display;\n  }\n",
            "line": {
              "start": 174,
              "end": 200
            }
          }
        },
        {
          "description": "Top and bottom margin mixin, remove\nthe top and bottom margin spacing (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "top-and-bottom",
            "code": "\n  @include nhsuk-warning(\"top-and-bottom\", \"top-and-bottom is deprecated and will be removed in a future release.\");\n  @include nhsuk-top-and-bottom;\n",
            "line": {
              "start": 225,
              "end": 228
            }
          }
        },
        {
          "description": "Panel mixin (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "panel",
            "code": "\n  @include nhsuk-warning(\"panel\", \"panel is deprecated. Use nhsuk-panel instead.\");\n  @include nhsuk-panel($args...);\n",
            "line": {
              "start": 263,
              "end": 266
            }
          }
        },
        {
          "description": "Panel with label mixin, inherits panel styling\nand removes padding top for the label positioning (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "panel-with-label",
            "code": "\n  @include nhsuk-warning(\"panel-with-label\", \"panel-with-label is deprecated. Use nhsuk-panel-with-label instead.\");\n  @include nhsuk-panel-with-label($args...);\n",
            "line": {
              "start": 295,
              "end": 298
            }
          }
        },
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "heading-label",
            "code": "\n  @include nhsuk-warning(\"heading-label\", \"heading-label is deprecated. Use nhsuk-heading-label instead.\");\n  @include nhsuk-heading-label($args...);\n",
            "line": {
              "start": 354,
              "end": 357
            }
          }
        },
        {
          "description": "Care card mixin, used for creating\ndifferent coloured care cards (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "care-card",
            "code": "\n  @include nhsuk-warning(\"care-card\", \"care-card is deprecated. Use nhsuk-care-card instead.\");\n  @include nhsuk-care-card($args...);\n",
            "line": {
              "start": 388,
              "end": 391
            }
          }
        },
        {
          "description": "Print colour mixin, sets the text print colour\nwarning callout, do and don't lists and panels (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-print-color",
            "code": "\n  @include nhsuk-warning(\"color-to-colour\", \"nhsuk-print-color is deprecated. Use nhsuk-print-colour instead.\");\n  @include nhsuk-print-colour($args...);\n",
            "line": {
              "start": 415,
              "end": 418
            }
          }
        },
        {
          "description": "Print colour mixin, sets the text print colour\nwarning callout, do and don't lists and panels (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "print-color",
            "code": "\n  @include nhsuk-warning(\"print-color\", \"print-color is deprecated. Use nhsuk-print-colour instead.\");\n  @include nhsuk-print-colour($args...);\n",
            "line": {
              "start": 426,
              "end": 429
            }
          }
        },
        {
          "description": "Print hide mixin, hides the element from print (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "print-hide",
            "code": "\n  @include nhsuk-warning(\"print-hide\", \"print-hide is deprecated. Use nhsuk-print-hide instead.\");\n  @include nhsuk-print-hide;\n",
            "line": {
              "start": 448,
              "end": 451
            }
          }
        },
        {
          "description": "\n",
          "context": {
            "type": "mixin",
            "name": "flex",
            "code": "\n  @include nhsuk-warning(\"flex\", \"flex is deprecated. Use nhsuk-flex instead.\");\n  @include nhsuk-flex;\n",
            "line": {
              "start": 469,
              "end": 472
            }
          }
        },
        {
          "description": "\n",
          "context": {
            "type": "mixin",
            "name": "flex-item",
            "code": "\n  @include nhsuk-warning(\"flex-item\", \"flex-item is deprecated. Use nhsuk-flex-item instead.\");\n  @include nhsuk-flex-item;\n",
            "line": {
              "start": 493,
              "end": 496
            }
          }
        },
        {
          "description": "Remove margin mobile mixin (deprecated)\n\nRemoves left and right margin at tablet breakpoint\n\n",
          "context": {
            "type": "mixin",
            "name": "remove-margin-mobile",
            "code": "\n  @include nhsuk-warning(\n    \"remove-margin-mobile\",\n    \"remove-margin-mobile is deprecated. Use nhsuk-remove-margin-mobile instead.\"\n  );\n\n  @include nhsuk-remove-margin-mobile;\n",
            "line": {
              "start": 516,
              "end": 523
            }
          }
        },
        {
          "description": "Media query (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "govuk-media-query",
            "code": "\n  @include nhsuk-warning(\"govuk-media-query\", \"govuk-media-query is deprecated. Use nhsuk-media-query instead.\");\n  @include nhsuk-media-query($args...) {\n    @content;\n  }\n",
            "line": {
              "start": 74,
              "end": 79
            }
          }
        },
        {
          "description": "Text colour (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-text-color",
            "code": "\n  @include nhsuk-warning(\"color-to-colour\", \"nhsuk-text-color is deprecated. Use nhsuk-text-colour instead.\");\n  @include nhsuk-text-colour;\n",
            "line": {
              "start": 36,
              "end": 39
            }
          }
        },
        {
          "description": "Font size and line height helper\n\nTakes a point from the responsive 'font map' as an argument (the size as it\nwould appear on tablet and above), and uses it to create font-size and\nline-height declarations for different breakpoints, and print.\n\nExample font map:\n\n```scss\n19: (\n  null: (\n    font-size: 16px,\n    line-height: 20px\n  ),\n  tablet: (\n    font-size: 19px,\n    line-height: 25px\n  ),\n  print: (\n    font-size: 14pt,\n    line-height: 1.15\n  )\n);\n```\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font-size",
            "code": "\n  // Flag font sizes that start with underscores so we can suppress warnings on\n  // deprecated sizes used internally, for example `nhsuk-font($size: \"_24\")`\n  $size-internal-use-only: string.slice(#{$size}, 1, 1) == \"_\";\n\n  // Remove underscore from font sizes flagged for internal use\n  @if $size-internal-use-only {\n    $size: string.slice(#{$size}, 2);\n  }\n\n  // Check for a font map exactly matching the given size\n  $font-map: map.get($nhsuk-typography-scale, $size);\n\n  // No match? Try with string type (e.g. $size: \"16\" not 16)\n  @if not $font-map {\n    @each $font-size in map.keys($nhsuk-typography-scale) {\n      @if not $font-map and \"#{$font-size}\" == \"#{$size}\" {\n        $font-map: map.get($nhsuk-typography-scale, $font-size);\n      }\n    }\n  }\n\n  // Still no match? Throw error\n  @if not $font-map {\n    @error \"Unknown font size `#{$size}` - expected a point from the typography scale.\";\n  }\n\n  // Check for a deprecation within the typography scale\n  $deprecation: map.get($font-map, \"deprecation\");\n\n  @if $deprecation {\n    // Warn on deprecated font sizes unless flagged for internal use\n    @if not $size-internal-use-only {\n      @include nhsuk-warning(map.get($deprecation, \"key\"), map.get($deprecation, \"message\"));\n    }\n\n    // remove the deprecation map keys so they do not break the breakpoint loop\n    $font-map: map.remove($font-map, \"deprecation\");\n  }\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map.get($breakpoint-map, \"font-size\");\n    $font-size-rem: nhsuk-px-to-rem($font-size);\n\n    // $calculated-line-height is a separate variable from $line-height,\n    // as otherwise the value would get redefined with each loop and\n    // eventually break nhsuk-line-height.\n    //\n    // We continue to call the param $line-height to stay consistent with the\n    // naming with nhsuk-font.\n    $calculated-line-height: nhsuk-line-height(\n      $line-height: if($line-height, $line-height, map.get($breakpoint-map, \"line-height\")),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $calculated-line-height: $calculated-line-height if($important, !important, null);\n\n    & {\n      @if not $breakpoint {\n        font-size: $font-size;\n        font-size: $font-size-rem;\n        line-height: $calculated-line-height;\n      } @else if $breakpoint == \"print\" {\n        @include nhsuk-media-query($media-type: print) {\n          font-size: $font-size;\n          line-height: $calculated-line-height;\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          font-size: $font-size;\n          font-size: $font-size-rem;\n          line-height: $calculated-line-height;\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 134,
              "end": 215
            }
          }
        },
        {
          "description": "Font size and line height helper (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-typography-responsive",
            "code": "\n  @include nhsuk-warning(\n    \"nhsuk-typography-responsive\",\n    \"nhsuk-typography-responsive is deprecated. Use nhsuk-font-size instead.\"\n  );\n  @include nhsuk-font-size($size, $override-line-height, $important);\n",
            "line": {
              "start": 232,
              "end": 238
            }
          }
        },
        {
          "description": "Media Query mixin\n\n",
          "context": {
            "type": "mixin",
            "name": "mq",
            "code": "\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: \"\";\n\n  @if not $silence-warning {\n    @include nhsuk-warning(\"mq\", \"mq is deprecated. Use nhsuk-media-query instead.\");\n  }\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if meta.type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if meta.type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: \"#{$media-query} and (min-width: #{$min-width})\";\n  }\n  @if $max-width != 0 {\n    $media-query: \"#{$media-query} and (max-width: #{$max-width})\";\n  }\n  @if $and {\n    $media-query: \"#{$media-query} and #{$and}\";\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == \"all\" and $media-query != \"\") {\n    $media-type: \"\";\n    $media-query: string.slice(string.unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n",
            "line": {
              "start": 142,
              "end": 195
            }
          }
        }
      ]
    },
    {
      "description": "Check whether a key is present in the suppressed warnings list.\n\n",
      "commentRange": {
        "start": 63,
        "end": 69
      },
      "context": {
        "type": "function",
        "name": "_should-warn",
        "code": "\n  @return list.index($nhsuk-suppressed-warnings, $key) == null;\n",
        "line": {
          "start": 71,
          "end": 73
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "key",
          "description": "The key to be checked against `$nhsuk-suppressed-warnings`.\n"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "access": "private",
      "group": [
        "settings/warnings"
      ],
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-suppressed-warnings"
        }
      ],
      "file": {
        "path": "core/settings/_warnings.scss",
        "name": "_warnings.scss"
      },
      "usedBy": [
        {
          "description": "Warnings\n\nActs as a wrapper for the built in `@warn` sass function\n\nWe use this instead of using `@warn` for 3 reasons:\n\n- To check if a warning is being suppressed through `$nhsuk-suppressed-warnings`,\nin which case we don't call `@warn` and printing the warning to the user\n- To format the passed warning `$message` with the warning key at the end\n- To prevent duplicate warnings by adding the passed `$key` to\n`$nhsuk-suppressed-warnings` after `@warn` is called to ensure it only runs\nonce per sass compilation\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-warning",
            "code": "\n  @if _should-warn($key) {\n    @warn _warning-text($key, $message);\n\n    @if $silence-further-warnings {\n      $nhsuk-suppressed-warnings: list.append($nhsuk-suppressed-warnings, $key) !global;\n    }\n  }\n",
            "line": {
              "start": 53,
              "end": 61
            }
          }
        }
      ]
    },
    {
      "description": "Format a warning by appending information on how to suppress it.\n\n",
      "commentRange": {
        "start": 75,
        "end": 82
      },
      "context": {
        "type": "function",
        "name": "_warning-text",
        "code": "\n  @return $message + \" To silence this warning, update $nhsuk-suppressed-warnings \" + 'with key: \"#{$key}\"';\n",
        "line": {
          "start": 84,
          "end": 86
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "key",
          "description": "The key needed to suppress the warning."
        },
        {
          "type": "String",
          "name": "message",
          "description": "The warning text.\n"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "access": "private",
      "group": [
        "settings/warnings"
      ],
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-suppressed-warnings"
        }
      ],
      "file": {
        "path": "core/settings/_warnings.scss",
        "name": "_warnings.scss"
      },
      "usedBy": [
        {
          "description": "Warnings\n\nActs as a wrapper for the built in `@warn` sass function\n\nWe use this instead of using `@warn` for 3 reasons:\n\n- To check if a warning is being suppressed through `$nhsuk-suppressed-warnings`,\nin which case we don't call `@warn` and printing the warning to the user\n- To format the passed warning `$message` with the warning key at the end\n- To prevent duplicate warnings by adding the passed `$key` to\n`$nhsuk-suppressed-warnings` after `@warn` is called to ensure it only runs\nonce per sass compilation\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-warning",
            "code": "\n  @if _should-warn($key) {\n    @warn _warning-text($key, $message);\n\n    @if $silence-further-warnings {\n      $nhsuk-suppressed-warnings: list.append($nhsuk-suppressed-warnings, $key) !global;\n    }\n  }\n",
            "line": {
              "start": 53,
              "end": 61
            }
          }
        }
      ]
    },
    {
      "description": "Icon size adjustments\n\n",
      "commentRange": {
        "start": 24,
        "end": 26
      },
      "context": {
        "type": "variable",
        "name": "_icon-sizes",
        "value": "(25%, 50%, 75%, 100%)",
        "scope": "private",
        "line": {
          "start": 28,
          "end": 28
        }
      },
      "access": "private",
      "group": [
        "styles"
      ],
      "file": {
        "path": "core/styles/_icons.scss",
        "name": "_icons.scss"
      }
    },
    {
      "description": "List of modules which have already been exported\n",
      "commentRange": {
        "start": 9,
        "end": 9
      },
      "context": {
        "type": "variable",
        "name": "imported-modules",
        "value": "()",
        "scope": "default",
        "line": {
          "start": 11,
          "end": 11
        }
      },
      "group": [
        "tools"
      ],
      "access": "public",
      "file": {
        "path": "core/tools/_exports.scss",
        "name": "_exports.scss"
      },
      "usedBy": [
        {
          "description": "Export module\n\nEnsure that the modules of CSS that we define throughout frontend are only\nincluded in the generated CSS once, no matter how many times they are\nimported across the individual components.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-exports",
            "code": "\n  // If the mixin is not in the list of modules already exported...\n  @if not list.index($imported-modules, $name) {\n    // ... then add it to the list\n    $imported-modules: list.append($imported-modules, $name) !global;\n    // ... and output the CSS for that module\n    @content;\n  }\n  // The next time exports is called for the module of the same name, it will be\n  // found in the list and so nothing will be outputted.\n",
            "line": {
              "start": 25,
              "end": 35
            }
          }
        },
        {
          "description": "Export module\n\nEnsure that the modules of CSS that we define throughout frontend are only\nincluded in the generated CSS once, no matter how many times they are\nimported across the individual components.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-exports",
            "code": "\n  // If the mixin is not in the list of modules already exported...\n  @if not list.index($imported-modules, $name) {\n    // ... then add it to the list\n    $imported-modules: list.append($imported-modules, $name) !global;\n    // ... and output the CSS for that module\n    @content;\n  }\n  // The next time exports is called for the module of the same name, it will be\n  // found in the list and so nothing will be outputted.\n",
            "line": {
              "start": 25,
              "end": 35
            }
          }
        },
        {
          "description": "Export module\n\nEnsure that the modules of CSS that we define throughout frontend are only\nincluded in the generated CSS once, no matter how many times they are\nimported across the individual components.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-exports",
            "code": "\n  // If the mixin is not in the list of modules already exported...\n  @if not list.index($imported-modules, $name) {\n    // ... then add it to the list\n    $imported-modules: list.append($imported-modules, $name) !global;\n    // ... and output the CSS for that module\n    @content;\n  }\n  // The next time exports is called for the module of the same name, it will be\n  // found in the list and so nothing will be outputted.\n",
            "line": {
              "start": 25,
              "end": 35
            }
          }
        }
      ]
    },
    {
      "description": "Export module\n\nEnsure that the modules of CSS that we define throughout frontend are only\nincluded in the generated CSS once, no matter how many times they are\nimported across the individual components.\n\n",
      "commentRange": {
        "start": 13,
        "end": 23
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-exports",
        "code": "\n  // If the mixin is not in the list of modules already exported...\n  @if not list.index($imported-modules, $name) {\n    // ... then add it to the list\n    $imported-modules: list.append($imported-modules, $name) !global;\n    // ... and output the CSS for that module\n    @content;\n  }\n  // The next time exports is called for the module of the same name, it will be\n  // found in the list and so nothing will be outputted.\n",
        "line": {
          "start": 25,
          "end": 35
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "name",
          "description": "Name of module - must be unique within the codebase"
        }
      ],
      "content": "The passed content will only be outputted if a module of the same\n  $name has not already been outputted",
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "imported-modules"
        },
        {
          "type": "variable",
          "name": "imported-modules"
        },
        {
          "type": "variable",
          "name": "imported-modules"
        }
      ],
      "file": {
        "path": "core/tools/_exports.scss",
        "name": "_exports.scss"
      }
    },
    {
      "description": "Focused text\n\nProvides an outline to clearly indicate when the target element is focused.\nUsed for interactive text-based elements.\n",
      "commentRange": {
        "start": 10,
        "end": 13
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-focused-text",
        "code": "\n  // When colours are overridden, for example when users have a dark mode,\n  // backgrounds and box-shadows disappear, so we need to ensure there's a\n  // transparent outline which will be set to a visible colour.\n  outline: $nhsuk-focus-width solid transparent;\n  background-color: $nhsuk-focus-colour;\n  box-shadow:\n    0 -2px $nhsuk-focus-colour,\n    0 $nhsuk-focus-width $nhsuk-focus-text-colour;\n\n  // When link is focussed, hide the default underline since the\n  // box shadow adds the \"underline\"\n  text-decoration: none;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
        "line": {
          "start": 15,
          "end": 34
        }
      },
      "group": [
        "tools"
      ],
      "link": [
        {
          "url": "https://accessibility.blog.gov.uk/2017/03/27/how-users-change-colours-on-websites/",
          "caption": ""
        }
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        }
      ],
      "file": {
        "path": "core/tools/_focused.scss",
        "name": "_focused.scss"
      },
      "usedBy": [
        {
          "description": "Default link focus only styling\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-focus",
            "code": "\n  &:focus,\n  &:focus:visited {\n    @include nhsuk-focused-text;\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n",
            "line": {
              "start": 105,
              "end": 114
            }
          }
        }
      ]
    },
    {
      "description": "Focused input (form elements)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used for interactive input-based elements such\nas text inputs.\n",
      "commentRange": {
        "start": 36,
        "end": 40
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-focused-input",
        "code": "\n  border: $nhsuk-border-width-form-element solid $nhsuk-focus-text-colour;\n  outline: $nhsuk-focus-width solid $nhsuk-focus-colour;\n  outline-offset: 0;\n  box-shadow: inset 0 0 0 $nhsuk-border-width-form-element $nhsuk-focus-text-colour;\n",
        "line": {
          "start": 42,
          "end": 47
        }
      },
      "group": [
        "tools"
      ],
      "link": [
        {
          "url": "https://accessibility.blog.gov.uk/2017/03/27/how-users-change-colours-on-websites/",
          "caption": ""
        }
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-border-width-form-element"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-border-width-form-element"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        }
      ],
      "file": {
        "path": "core/tools/_focused.scss",
        "name": "_focused.scss"
      }
    },
    {
      "description": "Focused radio input (form element)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used by radios.\n",
      "commentRange": {
        "start": 49,
        "end": 52
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-focused-radio",
        "code": "\n  border: $nhsuk-focus-width solid $nhsuk-focus-text-colour;\n  box-shadow: 0 0 0 $nhsuk-focus-width $nhsuk-focus-colour;\n",
        "line": {
          "start": 54,
          "end": 57
        }
      },
      "group": [
        "tools"
      ],
      "link": [
        {
          "url": "https://accessibility.blog.gov.uk/2017/03/27/how-users-change-colours-on-websites/",
          "caption": ""
        }
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-colour"
        }
      ],
      "file": {
        "path": "core/tools/_focused.scss",
        "name": "_focused.scss"
      }
    },
    {
      "description": "Focused checkbox input (form element)\n\nProvides an additional outline and border to clearly indicate when\nthe target element has focus. Used by checkbox.\n",
      "commentRange": {
        "start": 59,
        "end": 62
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-focused-checkbox",
        "code": "\n  border: $nhsuk-focus-width solid $nhsuk-focus-text-colour;\n  box-shadow: 0 0 0 $nhsuk-focus-width $nhsuk-focus-colour;\n",
        "line": {
          "start": 64,
          "end": 67
        }
      },
      "group": [
        "tools"
      ],
      "link": [
        {
          "url": "https://accessibility.blog.gov.uk/2017/03/27/how-users-change-colours-on-websites/",
          "caption": ""
        }
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-colour"
        }
      ],
      "file": {
        "path": "core/tools/_focused.scss",
        "name": "_focused.scss"
      }
    },
    {
      "description": "Focused button\n\nProvides an additional outline and background to clearly indicate when\nthe target element has focus. Used for buttons.\n",
      "commentRange": {
        "start": 69,
        "end": 72
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-focused-button",
        "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  outline-offset: $nhsuk-focus-width;\n  color: $nhsuk-focus-text-colour;\n  background-color: $nhsuk-focus-colour;\n  box-shadow: 0 $nhsuk-focus-width 0 0 $nhsuk-focus-text-colour;\n\n  &,\n  .nhsuk-icon {\n    color: $nhsuk-focus-text-colour;\n    fill: $nhsuk-focus-text-colour;\n  }\n",
        "line": {
          "start": 74,
          "end": 86
        }
      },
      "group": [
        "tools"
      ],
      "link": [
        {
          "url": "https://accessibility.blog.gov.uk/2017/03/27/how-users-change-colours-on-websites/",
          "caption": ""
        }
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        }
      ],
      "file": {
        "path": "core/tools/_focused.scss",
        "name": "_focused.scss"
      }
    },
    {
      "description": "Focused box\n\nProvides an outline to clearly indicate when the target element is focused.\nUnlike nhsuk-focused-text, which only draws an underline below the element,\nnhsuk-focused-box draws an outline around all sides of the element.\nBest used for non-text content contained within links.\n",
      "commentRange": {
        "start": 88,
        "end": 93
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-focused-box",
        "code": "\n  outline: $nhsuk-focus-width solid transparent;\n  box-shadow:\n    0 0 0 4px $nhsuk-focus-colour,\n    0 0 0 8px $nhsuk-focus-text-colour;\n",
        "line": {
          "start": 95,
          "end": 100
        }
      },
      "group": [
        "tools"
      ],
      "link": [
        {
          "url": "https://accessibility.blog.gov.uk/2017/03/27/how-users-change-colours-on-websites/",
          "caption": ""
        }
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-focus-width"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-focus-text-colour"
        }
      ],
      "file": {
        "path": "core/tools/_focused.scss",
        "name": "_focused.scss"
      },
      "usedBy": [
        {
          "description": "Image link styles\n\nPrepares and provides the focus state for links that only contain images\nwith no accompanying text.\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-image",
            "code": "\n  // Needed to draw the focus around the entire image\n  display: inline-block;\n\n  // Remove extra space at the bottom of the image that's added by line-height\n  line-height: 0;\n\n  // Don't render an underline\n  text-decoration: none;\n\n  &:focus {\n    @include nhsuk-focused-box;\n  }\n",
            "line": {
              "start": 215,
              "end": 228
            }
          }
        }
      ]
    },
    {
      "description": "Convert pixels to em\n\nA quick way to convert px into em\n\n",
      "commentRange": {
        "start": 10,
        "end": 17
      },
      "context": {
        "type": "function",
        "name": "nhsuk-em",
        "code": "\n  @if math.is-unitless($value) {\n    $value: $value * 1px;\n  }\n  @if math.is-unitless($context-font-size) {\n    $context-font-size: $context-font-size * 1px;\n  }\n  @return math.div($value, $context-font-size) * 1em;\n",
        "line": {
          "start": 19,
          "end": 27
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "nhsuk-em(20px, $nhsuk-base-font-size);"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "core/tools/_functions.scss",
        "name": "_functions.scss"
      },
      "usedBy": [
        {
          "description": "Chevron mixin\n\nGenerate chevron by using a box with borders on two sides, then rotating it.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-shape-chevron",
            "code": "\n  $outline-width: nhsuk-em($nhsuk-chevron-border, $font-size);\n  $box-size: nhsuk-em(math.div($font-size, 2), $font-size);\n  $size: nhsuk-em(nhsuk-chevron-size($font-size), $nhsuk-base-font-size);\n  display: $display;\n\n  width: $box-size;\n  height: $box-size;\n\n  clip-path: polygon(100% 100%, 100% 0, 0 0);\n\n  border-radius: 2px;\n\n  // Safari renders a hairline gap if we use borders, so use an inset outline\n  // instead. Because outlines are added to all sides of a box, we hide the\n  // outline on the two other two sides using clip-path.\n  outline: $outline-width solid currentcolor;\n  outline-offset: -$outline-width;\n\n  color: $colour;\n\n  @if $direction == \"up\" {\n    transform: translateY($outline-width) rotate(-45deg);\n  } @else if $direction == \"right\" {\n    transform: translateX(-$size + $outline-width) rotate(45deg);\n  } @else if $direction == \"down\" {\n    transform: translateY(-$size + $outline-width) rotate(135deg);\n  } @else if $direction == \"left\" {\n    transform: translateX($outline-width) rotate(225deg);\n  } @else {\n    @error \"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\";\n  }\n\n  @supports (border-width: string.unquote(\"max(0px)\")) {\n    $outline-width-eval: \"max(#{$nhsuk-chevron-border}, #{$outline-width})\";\n\n    // Ensure that the chevron outline never gets smaller than 2px\n    outline-width: string.unquote($outline-width-eval) string.unquote($outline-width-eval) 0 0;\n\n    // Ensure that the chevron never gets smaller than 16px\n    font-size: string.unquote(\"max(#{$font-size * 1px}, 1em)\");\n  }\n",
            "line": {
              "start": 21,
              "end": 63
            }
          }
        },
        {
          "description": "Chevron mixin\n\nGenerate chevron by using a box with borders on two sides, then rotating it.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-shape-chevron",
            "code": "\n  $outline-width: nhsuk-em($nhsuk-chevron-border, $font-size);\n  $box-size: nhsuk-em(math.div($font-size, 2), $font-size);\n  $size: nhsuk-em(nhsuk-chevron-size($font-size), $nhsuk-base-font-size);\n  display: $display;\n\n  width: $box-size;\n  height: $box-size;\n\n  clip-path: polygon(100% 100%, 100% 0, 0 0);\n\n  border-radius: 2px;\n\n  // Safari renders a hairline gap if we use borders, so use an inset outline\n  // instead. Because outlines are added to all sides of a box, we hide the\n  // outline on the two other two sides using clip-path.\n  outline: $outline-width solid currentcolor;\n  outline-offset: -$outline-width;\n\n  color: $colour;\n\n  @if $direction == \"up\" {\n    transform: translateY($outline-width) rotate(-45deg);\n  } @else if $direction == \"right\" {\n    transform: translateX(-$size + $outline-width) rotate(45deg);\n  } @else if $direction == \"down\" {\n    transform: translateY(-$size + $outline-width) rotate(135deg);\n  } @else if $direction == \"left\" {\n    transform: translateX($outline-width) rotate(225deg);\n  } @else {\n    @error \"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\";\n  }\n\n  @supports (border-width: string.unquote(\"max(0px)\")) {\n    $outline-width-eval: \"max(#{$nhsuk-chevron-border}, #{$outline-width})\";\n\n    // Ensure that the chevron outline never gets smaller than 2px\n    outline-width: string.unquote($outline-width-eval) string.unquote($outline-width-eval) 0 0;\n\n    // Ensure that the chevron never gets smaller than 16px\n    font-size: string.unquote(\"max(#{$font-size * 1px}, 1em)\");\n  }\n",
            "line": {
              "start": 21,
              "end": 63
            }
          }
        },
        {
          "description": "Chevron mixin\n\nGenerate chevron by using a box with borders on two sides, then rotating it.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-shape-chevron",
            "code": "\n  $outline-width: nhsuk-em($nhsuk-chevron-border, $font-size);\n  $box-size: nhsuk-em(math.div($font-size, 2), $font-size);\n  $size: nhsuk-em(nhsuk-chevron-size($font-size), $nhsuk-base-font-size);\n  display: $display;\n\n  width: $box-size;\n  height: $box-size;\n\n  clip-path: polygon(100% 100%, 100% 0, 0 0);\n\n  border-radius: 2px;\n\n  // Safari renders a hairline gap if we use borders, so use an inset outline\n  // instead. Because outlines are added to all sides of a box, we hide the\n  // outline on the two other two sides using clip-path.\n  outline: $outline-width solid currentcolor;\n  outline-offset: -$outline-width;\n\n  color: $colour;\n\n  @if $direction == \"up\" {\n    transform: translateY($outline-width) rotate(-45deg);\n  } @else if $direction == \"right\" {\n    transform: translateX(-$size + $outline-width) rotate(45deg);\n  } @else if $direction == \"down\" {\n    transform: translateY(-$size + $outline-width) rotate(135deg);\n  } @else if $direction == \"left\" {\n    transform: translateX($outline-width) rotate(225deg);\n  } @else {\n    @error \"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\";\n  }\n\n  @supports (border-width: string.unquote(\"max(0px)\")) {\n    $outline-width-eval: \"max(#{$nhsuk-chevron-border}, #{$outline-width})\";\n\n    // Ensure that the chevron outline never gets smaller than 2px\n    outline-width: string.unquote($outline-width-eval) string.unquote($outline-width-eval) 0 0;\n\n    // Ensure that the chevron never gets smaller than 16px\n    font-size: string.unquote(\"max(#{$font-size * 1px}, 1em)\");\n  }\n",
            "line": {
              "start": 21,
              "end": 63
            }
          }
        }
      ]
    },
    {
      "description": "Convert pixels to rem\n\nA quick way to convert px into rem\n\n",
      "commentRange": {
        "start": 29,
        "end": 37
      },
      "context": {
        "type": "function",
        "name": "nhsuk-px-to-rem",
        "code": "\n  @if math.is-unitless($value) {\n    $value: $value * 1px;\n  }\n\n  @return math.div($value, $nhsuk-base-font-size) * 1rem;\n",
        "line": {
          "start": 39,
          "end": 45
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "  nhsuk-px-to-rem(20px);\n\nThe $nhsuk-base-font-size (defined in settings/_globals.scss)\nmust be configured to match the font-size of your root (html) element"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-base-font-size"
        }
      ],
      "file": {
        "path": "core/tools/_functions.scss",
        "name": "_functions.scss"
      },
      "usedBy": [
        {
          "description": "Font size and line height helper\n\nTakes a point from the responsive 'font map' as an argument (the size as it\nwould appear on tablet and above), and uses it to create font-size and\nline-height declarations for different breakpoints, and print.\n\nExample font map:\n\n```scss\n19: (\n  null: (\n    font-size: 16px,\n    line-height: 20px\n  ),\n  tablet: (\n    font-size: 19px,\n    line-height: 25px\n  ),\n  print: (\n    font-size: 14pt,\n    line-height: 1.15\n  )\n);\n```\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font-size",
            "code": "\n  // Flag font sizes that start with underscores so we can suppress warnings on\n  // deprecated sizes used internally, for example `nhsuk-font($size: \"_24\")`\n  $size-internal-use-only: string.slice(#{$size}, 1, 1) == \"_\";\n\n  // Remove underscore from font sizes flagged for internal use\n  @if $size-internal-use-only {\n    $size: string.slice(#{$size}, 2);\n  }\n\n  // Check for a font map exactly matching the given size\n  $font-map: map.get($nhsuk-typography-scale, $size);\n\n  // No match? Try with string type (e.g. $size: \"16\" not 16)\n  @if not $font-map {\n    @each $font-size in map.keys($nhsuk-typography-scale) {\n      @if not $font-map and \"#{$font-size}\" == \"#{$size}\" {\n        $font-map: map.get($nhsuk-typography-scale, $font-size);\n      }\n    }\n  }\n\n  // Still no match? Throw error\n  @if not $font-map {\n    @error \"Unknown font size `#{$size}` - expected a point from the typography scale.\";\n  }\n\n  // Check for a deprecation within the typography scale\n  $deprecation: map.get($font-map, \"deprecation\");\n\n  @if $deprecation {\n    // Warn on deprecated font sizes unless flagged for internal use\n    @if not $size-internal-use-only {\n      @include nhsuk-warning(map.get($deprecation, \"key\"), map.get($deprecation, \"message\"));\n    }\n\n    // remove the deprecation map keys so they do not break the breakpoint loop\n    $font-map: map.remove($font-map, \"deprecation\");\n  }\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map.get($breakpoint-map, \"font-size\");\n    $font-size-rem: nhsuk-px-to-rem($font-size);\n\n    // $calculated-line-height is a separate variable from $line-height,\n    // as otherwise the value would get redefined with each loop and\n    // eventually break nhsuk-line-height.\n    //\n    // We continue to call the param $line-height to stay consistent with the\n    // naming with nhsuk-font.\n    $calculated-line-height: nhsuk-line-height(\n      $line-height: if($line-height, $line-height, map.get($breakpoint-map, \"line-height\")),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $calculated-line-height: $calculated-line-height if($important, !important, null);\n\n    & {\n      @if not $breakpoint {\n        font-size: $font-size;\n        font-size: $font-size-rem;\n        line-height: $calculated-line-height;\n      } @else if $breakpoint == \"print\" {\n        @include nhsuk-media-query($media-type: print) {\n          font-size: $font-size;\n          line-height: $calculated-line-height;\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          font-size: $font-size;\n          font-size: $font-size-rem;\n          line-height: $calculated-line-height;\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 134,
              "end": 215
            }
          }
        }
      ]
    },
    {
      "description": "Get the size (△↕) of chevron, from base to tip, given a certain font size\n\n",
      "commentRange": {
        "start": 47,
        "end": 50
      },
      "context": {
        "type": "function",
        "name": "nhsuk-chevron-size",
        "code": "\n  // Get unitless chevron border width\n  $border: math.div($nhsuk-chevron-border, 1px);\n\n  // Get unitless length of one side of the chevron, minus the border\n  $box-size: math.div($font-size, 2) - $border;\n\n  // Calculate width (△↕) of the chevron, from base to tip\n  @return math.sqrt(math.pow($box-size, 2) + math.pow($box-size, 2)) * 0.5;\n",
        "line": {
          "start": 52,
          "end": 61
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "font-size",
          "default": "14",
          "description": "Font size to base chevron size on"
        }
      ],
      "return": {
        "type": "String",
        "description": "Height of chevron as em-based value"
      },
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "core/tools/_functions.scss",
        "name": "_functions.scss"
      },
      "usedBy": [
        {
          "description": "Chevron mixin\n\nGenerate chevron by using a box with borders on two sides, then rotating it.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-shape-chevron",
            "code": "\n  $outline-width: nhsuk-em($nhsuk-chevron-border, $font-size);\n  $box-size: nhsuk-em(math.div($font-size, 2), $font-size);\n  $size: nhsuk-em(nhsuk-chevron-size($font-size), $nhsuk-base-font-size);\n  display: $display;\n\n  width: $box-size;\n  height: $box-size;\n\n  clip-path: polygon(100% 100%, 100% 0, 0 0);\n\n  border-radius: 2px;\n\n  // Safari renders a hairline gap if we use borders, so use an inset outline\n  // instead. Because outlines are added to all sides of a box, we hide the\n  // outline on the two other two sides using clip-path.\n  outline: $outline-width solid currentcolor;\n  outline-offset: -$outline-width;\n\n  color: $colour;\n\n  @if $direction == \"up\" {\n    transform: translateY($outline-width) rotate(-45deg);\n  } @else if $direction == \"right\" {\n    transform: translateX(-$size + $outline-width) rotate(45deg);\n  } @else if $direction == \"down\" {\n    transform: translateY(-$size + $outline-width) rotate(135deg);\n  } @else if $direction == \"left\" {\n    transform: translateX($outline-width) rotate(225deg);\n  } @else {\n    @error \"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\";\n  }\n\n  @supports (border-width: string.unquote(\"max(0px)\")) {\n    $outline-width-eval: \"max(#{$nhsuk-chevron-border}, #{$outline-width})\";\n\n    // Ensure that the chevron outline never gets smaller than 2px\n    outline-width: string.unquote($outline-width-eval) string.unquote($outline-width-eval) 0 0;\n\n    // Ensure that the chevron never gets smaller than 16px\n    font-size: string.unquote(\"max(#{$font-size * 1px}, 1em)\");\n  }\n",
            "line": {
              "start": 21,
              "end": 63
            }
          }
        }
      ]
    },
    {
      "description": "Grid width percentage\n\n",
      "commentRange": {
        "start": 14,
        "end": 18
      },
      "context": {
        "type": "function",
        "name": "nhsuk-grid-width",
        "code": "\n  @if map.has-key($nhsuk-grid-widths, $key) {\n    @return map.get($nhsuk-grid-widths, $key);\n  }\n\n  @error \"Unknown grid width `#{$key}`\";\n",
        "line": {
          "start": 20,
          "end": 26
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "key",
          "description": "Name of grid width (e.g. two-thirds)"
        }
      ],
      "return": {
        "type": "Number",
        "description": "Percentage width"
      },
      "throw": [
        "Unknown grid width `#{$key}`"
      ],
      "group": [
        "tools"
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-grid-widths"
        },
        {
          "type": "variable",
          "name": "nhsuk-grid-widths"
        }
      ],
      "file": {
        "path": "core/tools/_grid.scss",
        "name": "_grid.scss"
      },
      "usedBy": [
        {
          "description": "Generate grid column styles\n\nCreates a grid column with standard gutter between the columns.\n\nGrid widths are defined in the `$nhsuk-grid-widths` map.\n\nBy default the column width changes from 100% to specified width at the\n'desktop' breakpoint, but other breakpoints can be specified using the `$at`\nparameter.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-grid-column",
            "code": "\n  box-sizing: border-box;\n  @if $at != tablet {\n    width: 100%;\n  }\n  padding: 0 $nhsuk-gutter-half;\n  @include nhsuk-media-query($from: $at) {\n    width: nhsuk-grid-width($width);\n    float: $float;\n  }\n",
            "line": {
              "start": 59,
              "end": 69
            }
          }
        }
      ]
    },
    {
      "description": "Generate grid column styles\n\nCreates a grid column with standard gutter between the columns.\n\nGrid widths are defined in the `$nhsuk-grid-widths` map.\n\nBy default the column width changes from 100% to specified width at the\n'desktop' breakpoint, but other breakpoints can be specified using the `$at`\nparameter.\n\n",
      "commentRange": {
        "start": 28,
        "end": 57
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-grid-column",
        "code": "\n  box-sizing: border-box;\n  @if $at != tablet {\n    width: 100%;\n  }\n  padding: 0 $nhsuk-gutter-half;\n  @include nhsuk-media-query($from: $at) {\n    width: nhsuk-grid-width($width);\n    float: $float;\n  }\n",
        "line": {
          "start": 59,
          "end": 69
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "width",
          "default": "full",
          "description": "name of a grid width from $nhsuk-grid-widths"
        },
        {
          "type": "String",
          "name": "float",
          "default": "left",
          "description": "left | right"
        },
        {
          "type": "String",
          "name": "at",
          "default": "desktop",
          "description": "mobile | tablet | desktop | any custom breakpoint\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": ".nhsuk-grid-column-two-thirds {\n  @include nhsuk-grid-column(two-thirds)\n}",
          "description": "Default"
        },
        {
          "type": "scss",
          "code": ".nhsuk-grid-column-one-half-at-tablet {\n  @include nhsuk-grid-column(one-half, $at: tablet);\n}",
          "description": "Customising the breakpoint where width percentage is applied"
        },
        {
          "type": "scss",
          "code": ".nhsuk-grid-column-one-half-right {\n  @include nhsuk-grid-column(two-thirds, $float: right);\n}",
          "description": "Customising the float direction"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        },
        {
          "type": "function",
          "name": "nhsuk-grid-width"
        }
      ],
      "file": {
        "path": "core/tools/_grid.scss",
        "name": "_grid.scss"
      }
    },
    {
      "description": "Link styling with colour overrides\n\n",
      "commentRange": {
        "start": 10,
        "end": 16
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-style",
        "code": "\n  & {\n    color: $link-colour;\n    text-decoration: underline;\n  }\n\n  .nhsuk-icon {\n    fill: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-visited-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n",
        "line": {
          "start": 18,
          "end": 37
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "link-colour",
          "default": "$nhsuk-link-colour",
          "description": "Link colour"
        },
        {
          "type": "Colour",
          "name": "link-hover-colour",
          "default": "$nhsuk-link-hover-colour",
          "description": "Link hover colour"
        },
        {
          "type": "Colour",
          "name": "link-visited-colour",
          "default": "$nhsuk-link-visited-colour",
          "description": "Link visited colour"
        },
        {
          "type": "Colour",
          "name": "link-active-colour",
          "default": "$nhsuk-link-active-colour",
          "description": "Link active colour\n"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-link-style-visited"
        },
        {
          "type": "mixin",
          "name": "nhsuk-link-style-hover"
        },
        {
          "type": "mixin",
          "name": "nhsuk-link-style-active"
        },
        {
          "type": "mixin",
          "name": "nhsuk-link-style-focus"
        }
      ],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      },
      "usedBy": [
        {
          "description": "Default link styling\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-default",
            "code": "\n  @include nhsuk-link-style;\n",
            "line": {
              "start": 45,
              "end": 47
            }
          }
        },
        {
          "description": "Success link styles\n\nMakes links use the success colour. The link will darken if it's active or a\nuser hovers their cursor over it.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-success",
            "code": "\n  @include nhsuk-link-style(\n    $link-colour: $nhsuk-success-colour,\n    $link-visited-colour: $nhsuk-success-colour,\n    $link-hover-colour: nhsuk-shade($nhsuk-success-colour, 20%),\n    $link-active-colour: nhsuk-shade($nhsuk-success-colour, 50%)\n  );\n",
            "line": {
              "start": 150,
              "end": 157
            }
          }
        },
        {
          "description": "Text link styles\n\nMakes links use the primary text colour, in all states. Use this mixin for\nnavigation components, such as breadcrumbs or the back link.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-text",
            "code": "\n  @include nhsuk-link-style(\n    $link-colour: $override-colour,\n    $link-visited-colour: $override-colour,\n    $link-hover-colour: $override-colour,\n    $link-active-colour: $override-colour\n  );\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:not(:focus):hover {\n    color: rgba($override-colour, 0.99);\n  }\n",
            "line": {
              "start": 195,
              "end": 208
            }
          }
        }
      ]
    },
    {
      "description": "Default link styling\n\n",
      "commentRange": {
        "start": 39,
        "end": 43
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-style-default",
        "code": "\n  @include nhsuk-link-style;\n",
        "line": {
          "start": 45,
          "end": 47
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-link-style-default;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-link-style"
        }
      ],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      }
    },
    {
      "description": "White link styling, used in hero\ncomponent, and in the `.nhsuk-link--reverse`\nmodifier class.\n\n",
      "commentRange": {
        "start": 49,
        "end": 55
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-style-white",
        "code": "\n  @include nhsuk-link-style-text($override-colour: $nhsuk-reverse-text-colour);\n",
        "line": {
          "start": 57,
          "end": 59
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-link-style-white;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-link-style-text"
        },
        {
          "type": "variable",
          "name": "nhsuk-reverse-text-colour"
        }
      ],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      }
    },
    {
      "description": "Default link visited only styling\n\n",
      "commentRange": {
        "start": 61,
        "end": 67
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-style-visited",
        "code": "\n  &:visited {\n    color: $link-visited-colour;\n\n    .nhsuk-icon {\n      fill: $link-visited-colour;\n    }\n  }\n",
        "line": {
          "start": 69,
          "end": 77
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "link-visited-colour",
          "default": "$nhsuk-link-visited-colour",
          "description": "Link visited colour\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-link-style-visited;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      },
      "usedBy": [
        {
          "description": "Header link styling\n\n",
          "context": {
            "type": "mixin",
            "name": "_header-link-style",
            "code": "\n  & {\n    color: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n\n  &:focus,\n  &:focus:visited {\n    color: $nhsuk-focus-text-colour;\n    box-shadow: inset 0 ($nhsuk-focus-width * -1) $nhsuk-focus-text-colour;\n  }\n\n  @include nhsuk-print-colour($print-colour: inherit) {\n    &::after {\n      content: \"\";\n    }\n  }\n",
            "line": {
              "start": 43,
              "end": 68
            }
          }
        },
        {
          "description": "Link styling with colour overrides\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style",
            "code": "\n  & {\n    color: $link-colour;\n    text-decoration: underline;\n  }\n\n  .nhsuk-icon {\n    fill: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-visited-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n",
            "line": {
              "start": 18,
              "end": 37
            }
          }
        },
        {
          "description": "No visited state link mixin\n\nUsed in cases where it is not helpful to distinguish between visited and\nnon-visited links.\n\nFor example, navigation links to pages with dynamic content like admin\ndashboards. The content on the page is changing all the time, so the fact\nthat you’ve visited it before is not important.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-no-visited-state",
            "code": "\n  @include nhsuk-link-style-visited($link-visited-colour: $nhsuk-link-colour);\n",
            "line": {
              "start": 178,
              "end": 180
            }
          }
        }
      ]
    },
    {
      "description": "Default link hover only styling\n\n",
      "commentRange": {
        "start": 79,
        "end": 85
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-style-hover",
        "code": "\n  &:hover,\n  &:hover:visited {\n    color: $link-hover-colour;\n    text-decoration: none;\n\n    .nhsuk-icon {\n      fill: $link-hover-colour;\n    }\n  }\n",
        "line": {
          "start": 87,
          "end": 97
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "link-hover-colour",
          "default": "$nhsuk-link-hover-colour",
          "description": "Link hover colour\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-link-style-hover;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      },
      "usedBy": [
        {
          "description": "Header link styling\n\n",
          "context": {
            "type": "mixin",
            "name": "_header-link-style",
            "code": "\n  & {\n    color: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n\n  &:focus,\n  &:focus:visited {\n    color: $nhsuk-focus-text-colour;\n    box-shadow: inset 0 ($nhsuk-focus-width * -1) $nhsuk-focus-text-colour;\n  }\n\n  @include nhsuk-print-colour($print-colour: inherit) {\n    &::after {\n      content: \"\";\n    }\n  }\n",
            "line": {
              "start": 43,
              "end": 68
            }
          }
        },
        {
          "description": "Link styling with colour overrides\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style",
            "code": "\n  & {\n    color: $link-colour;\n    text-decoration: underline;\n  }\n\n  .nhsuk-icon {\n    fill: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-visited-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n",
            "line": {
              "start": 18,
              "end": 37
            }
          }
        }
      ]
    },
    {
      "description": "Default link focus only styling\n\n",
      "commentRange": {
        "start": 99,
        "end": 103
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-style-focus",
        "code": "\n  &:focus,\n  &:focus:visited {\n    @include nhsuk-focused-text;\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n",
        "line": {
          "start": 105,
          "end": 114
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-link-style-focus;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-focused-text"
        }
      ],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      },
      "usedBy": [
        {
          "description": "Header link styling\n\n",
          "context": {
            "type": "mixin",
            "name": "_header-link-style",
            "code": "\n  & {\n    color: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n\n  &:focus,\n  &:focus:visited {\n    color: $nhsuk-focus-text-colour;\n    box-shadow: inset 0 ($nhsuk-focus-width * -1) $nhsuk-focus-text-colour;\n  }\n\n  @include nhsuk-print-colour($print-colour: inherit) {\n    &::after {\n      content: \"\";\n    }\n  }\n",
            "line": {
              "start": 43,
              "end": 68
            }
          }
        },
        {
          "description": "Link styling with colour overrides\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style",
            "code": "\n  & {\n    color: $link-colour;\n    text-decoration: underline;\n  }\n\n  .nhsuk-icon {\n    fill: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-visited-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n",
            "line": {
              "start": 18,
              "end": 37
            }
          }
        }
      ]
    },
    {
      "description": "Default link active only styling\n\n",
      "commentRange": {
        "start": 116,
        "end": 122
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-style-active",
        "code": "\n  &:active,\n  &:active:visited {\n    color: $link-active-colour;\n\n    .nhsuk-icon {\n      fill: $link-active-colour;\n    }\n  }\n",
        "line": {
          "start": 124,
          "end": 133
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "link-active-colour",
          "default": "$nhsuk-link-active-colour",
          "description": "Link active colour\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-link-style-active;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      },
      "usedBy": [
        {
          "description": "Header link styling\n\n",
          "context": {
            "type": "mixin",
            "name": "_header-link-style",
            "code": "\n  & {\n    color: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n\n  &:focus,\n  &:focus:visited {\n    color: $nhsuk-focus-text-colour;\n    box-shadow: inset 0 ($nhsuk-focus-width * -1) $nhsuk-focus-text-colour;\n  }\n\n  @include nhsuk-print-colour($print-colour: inherit) {\n    &::after {\n      content: \"\";\n    }\n  }\n",
            "line": {
              "start": 43,
              "end": 68
            }
          }
        },
        {
          "description": "Link styling with colour overrides\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style",
            "code": "\n  & {\n    color: $link-colour;\n    text-decoration: underline;\n  }\n\n  .nhsuk-icon {\n    fill: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-visited-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n",
            "line": {
              "start": 18,
              "end": 37
            }
          }
        }
      ]
    },
    {
      "description": "Success link styles\n\nMakes links use the success colour. The link will darken if it's active or a\nuser hovers their cursor over it.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
      "commentRange": {
        "start": 135,
        "end": 148
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-style-success",
        "code": "\n  @include nhsuk-link-style(\n    $link-colour: $nhsuk-success-colour,\n    $link-visited-colour: $nhsuk-success-colour,\n    $link-hover-colour: nhsuk-shade($nhsuk-success-colour, 20%),\n    $link-active-colour: nhsuk-shade($nhsuk-success-colour, 50%)\n  );\n",
        "line": {
          "start": 150,
          "end": 157
        }
      },
      "example": [
        {
          "type": "scss",
          "code": ".nhsuk-component__link {\n  @include nhsuk-link-style-default;\n  @include nhsuk-link-style-success;\n}"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-link-style"
        },
        {
          "type": "function",
          "name": "nhsuk-shade"
        },
        {
          "type": "function",
          "name": "nhsuk-shade"
        },
        {
          "type": "variable",
          "name": "nhsuk-success-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-success-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-success-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-success-colour"
        }
      ],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      }
    },
    {
      "description": "No visited state link mixin\n\nUsed in cases where it is not helpful to distinguish between visited and\nnon-visited links.\n\nFor example, navigation links to pages with dynamic content like admin\ndashboards. The content on the page is changing all the time, so the fact\nthat you’ve visited it before is not important.\n\nIf you use this mixin in a component you must also include the\nnhsuk-link-style-default mixin in order to get the focus state.\n\n",
      "commentRange": {
        "start": 159,
        "end": 176
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-style-no-visited-state",
        "code": "\n  @include nhsuk-link-style-visited($link-visited-colour: $nhsuk-link-colour);\n",
        "line": {
          "start": 178,
          "end": 180
        }
      },
      "example": [
        {
          "type": "scss",
          "code": ".nhsuk-component__link {\n  @include nhsuk-link-style-default;\n  @include nhsuk-link-style-no-visited-state;\n}"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-link-style-visited"
        },
        {
          "type": "variable",
          "name": "nhsuk-link-colour"
        }
      ],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      }
    },
    {
      "description": "Text link styles\n\nMakes links use the primary text colour, in all states. Use this mixin for\nnavigation components, such as breadcrumbs or the back link.\n\n",
      "commentRange": {
        "start": 182,
        "end": 193
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-style-text",
        "code": "\n  @include nhsuk-link-style(\n    $link-colour: $override-colour,\n    $link-visited-colour: $override-colour,\n    $link-hover-colour: $override-colour,\n    $link-active-colour: $override-colour\n  );\n\n  // Force a colour change on hover to work around a bug in Safari\n  // https://bugs.webkit.org/show_bug.cgi?id=224483\n  &:not(:focus):hover {\n    color: rgba($override-colour, 0.99);\n  }\n",
        "line": {
          "start": 195,
          "end": 208
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "override-colour",
          "default": "$nhsuk-text-colour",
          "description": "Link colour for all states\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": ".nhsuk-component__link {\n  @include nhsuk-link-style-text;\n}"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-link-style"
        }
      ],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      },
      "usedBy": [
        {
          "description": "White link styling, used in hero\ncomponent, and in the `.nhsuk-link--reverse`\nmodifier class.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-link-style-white",
            "code": "\n  @include nhsuk-link-style-text($override-colour: $nhsuk-reverse-text-colour);\n",
            "line": {
              "start": 57,
              "end": 59
            }
          }
        }
      ]
    },
    {
      "description": "Image link styles\n\nPrepares and provides the focus state for links that only contain images\nwith no accompanying text.\n",
      "commentRange": {
        "start": 210,
        "end": 213
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-link-image",
        "code": "\n  // Needed to draw the focus around the entire image\n  display: inline-block;\n\n  // Remove extra space at the bottom of the image that's added by line-height\n  line-height: 0;\n\n  // Don't render an underline\n  text-decoration: none;\n\n  &:focus {\n    @include nhsuk-focused-box;\n  }\n",
        "line": {
          "start": 215,
          "end": 228
        }
      },
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-focused-box"
        }
      ],
      "file": {
        "path": "core/tools/_links.scss",
        "name": "_links.scss"
      }
    },
    {
      "description": "Clearfix mixin\n\n",
      "commentRange": {
        "start": 13,
        "end": 17
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-clearfix",
        "code": "\n  &::after {\n    content: \"\";\n    display: block;\n    clear: both;\n  }\n",
        "line": {
          "start": 19,
          "end": 25
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-clearfix;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "clearfix"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "clearfix"
        }
      ],
      "usedBy": [
        {
          "description": "Clearfix mixin (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "clearfix",
            "code": "\n  @include nhsuk-warning(\"clearfix\", \"clearfix is deprecated. Use nhsuk-clearfix instead.\");\n  @include nhsuk-clearfix;\n",
            "line": {
              "start": 32,
              "end": 35
            }
          }
        }
      ]
    },
    {
      "description": "Clearfix mixin (deprecated)\n\n",
      "commentRange": {
        "start": 27,
        "end": 30
      },
      "context": {
        "type": "mixin",
        "name": "clearfix",
        "code": "\n  @include nhsuk-warning(\"clearfix\", \"clearfix is deprecated. Use nhsuk-clearfix instead.\");\n  @include nhsuk-clearfix;\n",
        "line": {
          "start": 32,
          "end": 35
        }
      },
      "alias": "nhsuk-clearfix",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-clearfix",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-clearfix"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Reading width mixin, add a maximum width\nto large pieces of content\n\n",
      "commentRange": {
        "start": 37,
        "end": 42
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-reading-width",
        "code": "\n  max-width: 44em;\n",
        "line": {
          "start": 44,
          "end": 46
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-reading-width;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "reading-width"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "reading-width"
        }
      ],
      "usedBy": [
        {
          "description": "Reading width mixin, add a maximum width\nto large pieces of content (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "reading-width",
            "code": "\n  @include nhsuk-warning(\"reading-width\", \"reading-width is deprecated. Use nhsuk-reading-width instead.\");\n  @include nhsuk-reading-width;\n",
            "line": {
              "start": 54,
              "end": 57
            }
          }
        }
      ]
    },
    {
      "description": "Reading width mixin, add a maximum width\nto large pieces of content (deprecated)\n\n",
      "commentRange": {
        "start": 48,
        "end": 52
      },
      "context": {
        "type": "mixin",
        "name": "reading-width",
        "code": "\n  @include nhsuk-warning(\"reading-width\", \"reading-width is deprecated. Use nhsuk-reading-width instead.\");\n  @include nhsuk-reading-width;\n",
        "line": {
          "start": 54,
          "end": 57
        }
      },
      "alias": "nhsuk-reading-width",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-reading-width",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-reading-width"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Helper function containing the common code for the following two mixins\n\n",
      "commentRange": {
        "start": 59,
        "end": 70
      },
      "context": {
        "type": "mixin",
        "name": "_nhsuk-visually-hide-content",
        "code": "\n  position: absolute if($important, !important, null);\n\n  width: 1px if($important, !important, null);\n  height: 1px if($important, !important, null);\n  // If margin is set to a negative value it can cause text to be announced in\n  // the wrong order in VoiceOver for OSX\n  margin: 0 if($important, !important, null);\n  padding: 0 if($important, !important, null);\n\n  overflow: hidden if($important, !important, null);\n\n  // `clip` is needed for IE11 support\n  clip: rect(0 0 0 0) if($important, !important, null);\n  clip-path: inset(50%) if($important, !important, null);\n\n  border: 0 if($important, !important, null);\n\n  // For long content, line feeds are not interpreted as spaces and small width\n  // causes content to wrap 1 word per line:\n  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n  white-space: nowrap if($important, !important, null);\n\n  // Prevent users from selecting or copying visually-hidden text. This prevents\n  // a user unintentionally copying more text than they intended and needing to\n  // manually trim it down again.\n  user-select: none;\n",
        "line": {
          "start": 72,
          "end": 99
        }
      },
      "link": [
        {
          "url": "https://snook.ca/archives/html_and_css/hiding-content-for-accessibility",
          "caption": "- Hiding Content for Accessibility, Jonathan Snook, February 2011"
        },
        {
          "url": "https://github.com/h5bp/html5-boilerplate/blob/9f13695d21ff92c55c78dfa9f16bb02a1b6e911f/src/css/main.css#L121-L158",
          "caption": "- h5bp/html5-boilerplate - Thanks!"
        },
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "parameter": [
        {
          "type": "Boolean",
          "name": "important",
          "default": "true",
          "description": "Whether to mark as `!important`\n"
        }
      ],
      "access": "private",
      "group": [
        "tools"
      ],
      "require": [],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "usedBy": [
        {
          "description": "Hide an element visually, but have it available for screen readers\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-visually-hidden",
            "code": "\n  @include _nhsuk-visually-hide-content($important: $important);\n\n  // Absolute positioning has the unintended consequence of removing any\n  // whitespace surrounding visually hidden text from the accessibility tree.\n  // Insert a space character before and after visually hidden text to separate\n  // it from any visible text surrounding it.\n  &::before {\n    content: \"\\00a0\";\n  }\n\n  &::after {\n    content: \"\\00a0\";\n  }\n",
            "line": {
              "start": 109,
              "end": 123
            }
          }
        },
        {
          "description": "Hide an element visually, but have it available for screen readers whilst\nallowing the element to be focused when navigated to via the keyboard (e.g.\nfor the skip link)\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-visually-hidden-focusable",
            "code": "\n  // IE 11 doesn't support the combined `:not(:active, :focus)` syntax.\n  &:not(:active):not(:focus) {\n    @include _nhsuk-visually-hide-content($important: $important);\n  }\n",
            "line": {
              "start": 143,
              "end": 148
            }
          }
        }
      ]
    },
    {
      "description": "Hide an element visually, but have it available for screen readers\n\n",
      "commentRange": {
        "start": 101,
        "end": 107
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-visually-hidden",
        "code": "\n  @include _nhsuk-visually-hide-content($important: $important);\n\n  // Absolute positioning has the unintended consequence of removing any\n  // whitespace surrounding visually hidden text from the accessibility tree.\n  // Insert a space character before and after visually hidden text to separate\n  // it from any visible text surrounding it.\n  &::before {\n    content: \"\\00a0\";\n  }\n\n  &::after {\n    content: \"\\00a0\";\n  }\n",
        "line": {
          "start": 109,
          "end": 123
        }
      },
      "parameter": [
        {
          "type": "Boolean",
          "name": "important",
          "default": "true",
          "description": "Whether to mark as `!important`\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-visually-hidden;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "_nhsuk-visually-hide-content"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "visually-hidden"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "visually-hidden"
        }
      ],
      "usedBy": [
        {
          "description": "Hide an element visually, but have it available for screen readers\n(deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "visually-hidden",
            "code": "\n  @include nhsuk-visually-hidden;\n",
            "line": {
              "start": 131,
              "end": 133
            }
          }
        }
      ]
    },
    {
      "description": "Hide an element visually, but have it available for screen readers\n(deprecated)\n\n",
      "commentRange": {
        "start": 125,
        "end": 129
      },
      "context": {
        "type": "mixin",
        "name": "visually-hidden",
        "code": "\n  @include nhsuk-visually-hidden;\n",
        "line": {
          "start": 131,
          "end": 133
        }
      },
      "alias": "nhsuk-visually-hidden",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-visually-hidden",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-visually-hidden"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Hide an element visually, but have it available for screen readers whilst\nallowing the element to be focused when navigated to via the keyboard (e.g.\nfor the skip link)\n\n",
      "commentRange": {
        "start": 135,
        "end": 141
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-visually-hidden-focusable",
        "code": "\n  // IE 11 doesn't support the combined `:not(:active, :focus)` syntax.\n  &:not(:active):not(:focus) {\n    @include _nhsuk-visually-hide-content($important: $important);\n  }\n",
        "line": {
          "start": 143,
          "end": 148
        }
      },
      "parameter": [
        {
          "type": "Boolean",
          "name": "important",
          "default": "true",
          "description": "Whether to mark as `!important`\n"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "_nhsuk-visually-hide-content"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "visually-hidden-focusable"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "visually-hidden-focusable"
        }
      ],
      "usedBy": [
        {
          "description": "Hide an element visually, but have it available for screen readers whilst\nallowing the element to be focused when navigated to via the keyboard (e.g.\nfor the skip link) (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "visually-hidden-focusable",
            "code": "\n  @include nhsuk-warning(\n    \"visually-hidden-focusable\",\n    \"visually-hidden-focusable is deprecated. Use nhsuk-visually-hidden-focusable instead.\"\n  );\n  @include nhsuk-visually-hidden-focusable($args...);\n",
            "line": {
              "start": 157,
              "end": 163
            }
          }
        }
      ]
    },
    {
      "description": "Hide an element visually, but have it available for screen readers whilst\nallowing the element to be focused when navigated to via the keyboard (e.g.\nfor the skip link) (deprecated)\n\n",
      "commentRange": {
        "start": 150,
        "end": 155
      },
      "context": {
        "type": "mixin",
        "name": "visually-hidden-focusable",
        "code": "\n  @include nhsuk-warning(\n    \"visually-hidden-focusable\",\n    \"visually-hidden-focusable is deprecated. Use nhsuk-visually-hidden-focusable instead.\"\n  );\n  @include nhsuk-visually-hidden-focusable($args...);\n",
        "line": {
          "start": 157,
          "end": 163
        }
      },
      "alias": "nhsuk-visually-hidden-focusable",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-visually-hidden-focusable",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-visually-hidden-focusable"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Show an element visually that has previously been hidden by visually-hidden\n\nFor differences between mobile and desktop views, use $display to set the CSS display property\n\n",
      "commentRange": {
        "start": 165,
        "end": 172
      },
      "context": {
        "type": "mixin",
        "name": "visually-shown",
        "code": "\n  @include nhsuk-warning(\n    \"visually-shown\",\n    \"visually-shown is deprecated. Use @media queries to apply `visually-hidden` instead.\"\n  );\n\n  position: static if($important, !important, null);\n\n  width: auto if($important, !important, null);\n  height: auto if($important, !important, null);\n  margin: 0 if($important, !important, null);\n  padding: 0 if($important, !important, null);\n\n  overflow: visible if($important, !important, null);\n\n  clip: auto if($important, !important, null);\n  clip-path: none if($important, !important, null);\n\n  border: none if($important, !important, null);\n\n  white-space: normal if($important, !important, null);\n  user-select: auto if($important, !important, null);\n\n  @if $display {\n    display: $display;\n  }\n",
        "line": {
          "start": 174,
          "end": 200
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "display",
          "default": "null",
          "description": "CSS display property (optional)"
        },
        {
          "type": "Boolean",
          "name": "important",
          "default": "true",
          "description": "Whether to mark as `!important`\n"
        }
      ],
      "deprecated": "To be removed in v11.0, use @media queries to apply `visually-hidden` instead",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Top and bottom margin mixin, remove\nthe top and bottom margin spacing\n\n",
      "commentRange": {
        "start": 202,
        "end": 207
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-top-and-bottom",
        "code": "\n  & > *:first-child {\n    margin-top: 0;\n  }\n\n  & > *:last-child {\n    margin-bottom: 0;\n  }\n",
        "line": {
          "start": 209,
          "end": 217
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-top-and-bottom;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "top-and-bottom"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "top-and-bottom"
        }
      ],
      "usedBy": [
        {
          "description": "Top and bottom margin mixin, remove\nthe top and bottom margin spacing (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "top-and-bottom",
            "code": "\n  @include nhsuk-warning(\"top-and-bottom\", \"top-and-bottom is deprecated and will be removed in a future release.\");\n  @include nhsuk-top-and-bottom;\n",
            "line": {
              "start": 225,
              "end": 228
            }
          }
        },
        {
          "description": "Panel mixin\n\nSee components/_panel\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-panel",
            "code": "\n  @if $panel-border-colour {\n    border: 1px solid $panel-border-colour;\n  }\n  color: $panel-text-colour;\n  background-color: $panel-background-colour;\n\n  @include nhsuk-top-and-bottom;\n  @include nhsuk-responsive-margin(7, \"bottom\");\n\n  @include nhsuk-media-query($media-type: print) {\n    border: 1px solid $nhsuk-print-text-colour;\n    page-break-inside: avoid;\n  }\n",
            "line": {
              "start": 242,
              "end": 256
            }
          }
        }
      ]
    },
    {
      "description": "Top and bottom margin mixin, remove\nthe top and bottom margin spacing (deprecated)\n\n",
      "commentRange": {
        "start": 219,
        "end": 223
      },
      "context": {
        "type": "mixin",
        "name": "top-and-bottom",
        "code": "\n  @include nhsuk-warning(\"top-and-bottom\", \"top-and-bottom is deprecated and will be removed in a future release.\");\n  @include nhsuk-top-and-bottom;\n",
        "line": {
          "start": 225,
          "end": 228
        }
      },
      "alias": "nhsuk-top-and-bottom",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-top-and-bottom",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-top-and-bottom"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Panel mixin\n\nSee components/_panel\n\n",
      "commentRange": {
        "start": 230,
        "end": 240
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-panel",
        "code": "\n  @if $panel-border-colour {\n    border: 1px solid $panel-border-colour;\n  }\n  color: $panel-text-colour;\n  background-color: $panel-background-colour;\n\n  @include nhsuk-top-and-bottom;\n  @include nhsuk-responsive-margin(7, \"bottom\");\n\n  @include nhsuk-media-query($media-type: print) {\n    border: 1px solid $nhsuk-print-text-colour;\n    page-break-inside: avoid;\n  }\n",
        "line": {
          "start": 242,
          "end": 256
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "panel-background-colour",
          "description": "Panel background colour"
        },
        {
          "type": "Colour",
          "name": "panel-text-colour",
          "description": "Panel text colour"
        },
        {
          "type": "Colour",
          "name": "panel-border-colour",
          "default": "null",
          "description": "Optional panel border colour\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-panel($nhsuk-brand-colour, $nhsuk-reverse-text-colour, $nhsuk-secondary-border-colour);"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-top-and-bottom"
        },
        {
          "type": "mixin",
          "name": "nhsuk-responsive-margin"
        },
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        },
        {
          "type": "variable",
          "name": "nhsuk-print-text-colour"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "panel"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "panel"
        }
      ],
      "usedBy": [
        {
          "description": "Panel mixin (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "panel",
            "code": "\n  @include nhsuk-warning(\"panel\", \"panel is deprecated. Use nhsuk-panel instead.\");\n  @include nhsuk-panel($args...);\n",
            "line": {
              "start": 263,
              "end": 266
            }
          }
        },
        {
          "description": "Panel with label mixin, inherits panel styling\nand removes padding top for the label positioning\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-panel-with-label",
            "code": "\n  // stylelint-disable-next-line declaration-no-important\n  padding-top: 0 !important;\n  border: 1px solid $panel-border-colour;\n\n  @include nhsuk-panel($panel-background-colour, $panel-text-colour, $panel-border-colour);\n  @include nhsuk-responsive-margin(7, \"top\");\n  @include nhsuk-responsive-padding(5);\n",
            "line": {
              "start": 279,
              "end": 287
            }
          }
        }
      ]
    },
    {
      "description": "Panel mixin (deprecated)\n\n",
      "commentRange": {
        "start": 258,
        "end": 261
      },
      "context": {
        "type": "mixin",
        "name": "panel",
        "code": "\n  @include nhsuk-warning(\"panel\", \"panel is deprecated. Use nhsuk-panel instead.\");\n  @include nhsuk-panel($args...);\n",
        "line": {
          "start": 263,
          "end": 266
        }
      },
      "alias": "nhsuk-panel",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-panel",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-panel"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Panel with label mixin, inherits panel styling\nand removes padding top for the label positioning\n\n",
      "commentRange": {
        "start": 268,
        "end": 277
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-panel-with-label",
        "code": "\n  // stylelint-disable-next-line declaration-no-important\n  padding-top: 0 !important;\n  border: 1px solid $panel-border-colour;\n\n  @include nhsuk-panel($panel-background-colour, $panel-text-colour, $panel-border-colour);\n  @include nhsuk-responsive-margin(7, \"top\");\n  @include nhsuk-responsive-padding(5);\n",
        "line": {
          "start": 279,
          "end": 287
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "panel-background-colour",
          "description": "Panel background colour"
        },
        {
          "type": "Colour",
          "name": "panel-text-colour",
          "description": "Panel text colour"
        },
        {
          "type": "Colour",
          "name": "panel-border-colour",
          "description": "Panel border colour\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-panel-with-label($nhsuk-brand-colour, $nhsuk-reverse-text-colour, $nhsuk-secondary-border-colour);"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-panel"
        },
        {
          "type": "mixin",
          "name": "nhsuk-responsive-margin"
        },
        {
          "type": "mixin",
          "name": "nhsuk-responsive-padding"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "panel-with-label"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "panel-with-label"
        }
      ],
      "usedBy": [
        {
          "description": "Panel with label mixin, inherits panel styling\nand removes padding top for the label positioning (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "panel-with-label",
            "code": "\n  @include nhsuk-warning(\"panel-with-label\", \"panel-with-label is deprecated. Use nhsuk-panel-with-label instead.\");\n  @include nhsuk-panel-with-label($args...);\n",
            "line": {
              "start": 295,
              "end": 298
            }
          }
        }
      ]
    },
    {
      "description": "Panel with label mixin, inherits panel styling\nand removes padding top for the label positioning (deprecated)\n\n",
      "commentRange": {
        "start": 289,
        "end": 293
      },
      "context": {
        "type": "mixin",
        "name": "panel-with-label",
        "code": "\n  @include nhsuk-warning(\"panel-with-label\", \"panel-with-label is deprecated. Use nhsuk-panel-with-label instead.\");\n  @include nhsuk-panel-with-label($args...);\n",
        "line": {
          "start": 295,
          "end": 298
        }
      },
      "alias": "nhsuk-panel-with-label",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-panel-with-label",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-panel-with-label"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
      "commentRange": {
        "start": 300,
        "end": 315
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-heading-label",
        "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
        "line": {
          "start": 317,
          "end": 346
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "heading-background-colour",
          "description": "Heading background colour"
        },
        {
          "type": "Colour",
          "name": "heading-text-colour",
          "description": "Heading text colour\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-heading-label($nhsuk-brand-colour, $nhsuk-reverse-text-colour);"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-font-size"
        },
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        },
        {
          "type": "function",
          "name": "nhsuk-spacing"
        },
        {
          "type": "function",
          "name": "nhsuk-spacing"
        },
        {
          "type": "function",
          "name": "nhsuk-spacing"
        },
        {
          "type": "function",
          "name": "nhsuk-spacing"
        },
        {
          "type": "function",
          "name": "nhsuk-spacing"
        },
        {
          "type": "function",
          "name": "nhsuk-spacing"
        },
        {
          "type": "function",
          "name": "nhsuk-spacing"
        },
        {
          "type": "function",
          "name": "nhsuk-spacing"
        },
        {
          "type": "function",
          "name": "nhsuk-spacing"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "heading-label"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "heading-label"
        }
      ],
      "usedBy": [
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "heading-label",
            "code": "\n  @include nhsuk-warning(\"heading-label\", \"heading-label is deprecated. Use nhsuk-heading-label instead.\");\n  @include nhsuk-heading-label($args...);\n",
            "line": {
              "start": 354,
              "end": 357
            }
          }
        }
      ]
    },
    {
      "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel (deprecated)\n\n",
      "commentRange": {
        "start": 348,
        "end": 352
      },
      "context": {
        "type": "mixin",
        "name": "heading-label",
        "code": "\n  @include nhsuk-warning(\"heading-label\", \"heading-label is deprecated. Use nhsuk-heading-label instead.\");\n  @include nhsuk-heading-label($args...);\n",
        "line": {
          "start": 354,
          "end": 357
        }
      },
      "alias": "nhsuk-heading-label",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-heading-label",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-heading-label"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Care card mixin, used for creating\ndifferent coloured care cards\n\n",
      "commentRange": {
        "start": 359,
        "end": 368
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-care-card",
        "code": "\n  .nhsuk-card--care__heading-container {\n    color: $heading-text-colour;\n    background-color: $heading-background-colour;\n  }\n\n  @include nhsuk-print-colour {\n    border: $print-border-size solid $nhsuk-print-text-colour;\n    page-break-inside: avoid;\n  }\n",
        "line": {
          "start": 370,
          "end": 380
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "heading-background-colour",
          "description": "Heading background colour"
        },
        {
          "type": "Colour",
          "name": "heading-text-colour",
          "description": "Heading text colour"
        },
        {
          "type": "Number",
          "name": "print-border-size",
          "description": "Print border size\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-care-card($nhsuk-brand-colour, $nhsuk-reverse-text-colour, 4px);"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-print-text-colour"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "care-card"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "care-card"
        }
      ],
      "usedBy": [
        {
          "description": "Care card mixin, used for creating\ndifferent coloured care cards (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "care-card",
            "code": "\n  @include nhsuk-warning(\"care-card\", \"care-card is deprecated. Use nhsuk-care-card instead.\");\n  @include nhsuk-care-card($args...);\n",
            "line": {
              "start": 388,
              "end": 391
            }
          }
        }
      ]
    },
    {
      "description": "Care card mixin, used for creating\ndifferent coloured care cards (deprecated)\n\n",
      "commentRange": {
        "start": 382,
        "end": 386
      },
      "context": {
        "type": "mixin",
        "name": "care-card",
        "code": "\n  @include nhsuk-warning(\"care-card\", \"care-card is deprecated. Use nhsuk-care-card instead.\");\n  @include nhsuk-care-card($args...);\n",
        "line": {
          "start": 388,
          "end": 391
        }
      },
      "alias": "nhsuk-care-card",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-care-card",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-care-card"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Print colour mixin, sets the text print colour\nwarning callout, do and don't lists and panels\n\n",
      "commentRange": {
        "start": 393,
        "end": 400
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-print-colour",
        "code": "\n  @include nhsuk-media-query($media-type: print) {\n    color: $print-colour;\n    @content;\n  }\n",
        "line": {
          "start": 402,
          "end": 407
        }
      },
      "parameter": [
        {
          "type": "Colour",
          "name": "print-colour",
          "default": "$nhsuk-print-text-colour",
          "description": "Print colour\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-print-colour($print-colour: inherit);"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "content": "",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "nhsuk-print-color",
        "print-color"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "nhsuk-print-color"
        },
        {
          "group": [
            "tools"
          ],
          "name": "print-color"
        }
      ],
      "usedBy": [
        {
          "description": "Header link styling\n\n",
          "context": {
            "type": "mixin",
            "name": "_header-link-style",
            "code": "\n  & {\n    color: $link-colour;\n  }\n\n  @include nhsuk-link-style-visited($link-colour);\n  @include nhsuk-link-style-hover($link-hover-colour);\n  @include nhsuk-link-style-active($link-active-colour);\n  @include nhsuk-link-style-focus;\n\n  &:focus,\n  &:focus:visited {\n    color: $nhsuk-focus-text-colour;\n    box-shadow: inset 0 ($nhsuk-focus-width * -1) $nhsuk-focus-text-colour;\n  }\n\n  @include nhsuk-print-colour($print-colour: inherit) {\n    &::after {\n      content: \"\";\n    }\n  }\n",
            "line": {
              "start": 43,
              "end": 68
            }
          }
        },
        {
          "description": "Print colour mixin, sets the text print colour\nwarning callout, do and don't lists and panels (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-print-color",
            "code": "\n  @include nhsuk-warning(\"color-to-colour\", \"nhsuk-print-color is deprecated. Use nhsuk-print-colour instead.\");\n  @include nhsuk-print-colour($args...);\n",
            "line": {
              "start": 415,
              "end": 418
            }
          }
        },
        {
          "description": "Print colour mixin, sets the text print colour\nwarning callout, do and don't lists and panels (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "print-color",
            "code": "\n  @include nhsuk-warning(\"print-color\", \"print-color is deprecated. Use nhsuk-print-colour instead.\");\n  @include nhsuk-print-colour($args...);\n",
            "line": {
              "start": 426,
              "end": 429
            }
          }
        }
      ]
    },
    {
      "description": "Print colour mixin, sets the text print colour\nwarning callout, do and don't lists and panels (deprecated)\n\n",
      "commentRange": {
        "start": 409,
        "end": 413
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-print-color",
        "code": "\n  @include nhsuk-warning(\"color-to-colour\", \"nhsuk-print-color is deprecated. Use nhsuk-print-colour instead.\");\n  @include nhsuk-print-colour($args...);\n",
        "line": {
          "start": 415,
          "end": 418
        }
      },
      "alias": "nhsuk-print-colour",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-print-colour",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-print-colour"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Print colour mixin, sets the text print colour\nwarning callout, do and don't lists and panels (deprecated)\n\n",
      "commentRange": {
        "start": 420,
        "end": 424
      },
      "context": {
        "type": "mixin",
        "name": "print-color",
        "code": "\n  @include nhsuk-warning(\"print-color\", \"print-color is deprecated. Use nhsuk-print-colour instead.\");\n  @include nhsuk-print-colour($args...);\n",
        "line": {
          "start": 426,
          "end": 429
        }
      },
      "alias": "nhsuk-print-colour",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-print-colour",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-print-colour"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Print hide mixin, hides the element from print\n\n",
      "commentRange": {
        "start": 431,
        "end": 435
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-print-hide",
        "code": "\n  @include nhsuk-media-query($media-type: print) {\n    display: none;\n  }\n",
        "line": {
          "start": 437,
          "end": 441
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-print-hide;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "print-hide"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "print-hide"
        }
      ],
      "usedBy": [
        {
          "description": "Print hide mixin, hides the element from print (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "print-hide",
            "code": "\n  @include nhsuk-warning(\"print-hide\", \"print-hide is deprecated. Use nhsuk-print-hide instead.\");\n  @include nhsuk-print-hide;\n",
            "line": {
              "start": 448,
              "end": 451
            }
          }
        }
      ]
    },
    {
      "description": "Print hide mixin, hides the element from print (deprecated)\n\n",
      "commentRange": {
        "start": 443,
        "end": 446
      },
      "context": {
        "type": "mixin",
        "name": "print-hide",
        "code": "\n  @include nhsuk-warning(\"print-hide\", \"print-hide is deprecated. Use nhsuk-print-hide instead.\");\n  @include nhsuk-print-hide;\n",
        "line": {
          "start": 448,
          "end": 451
        }
      },
      "alias": "nhsuk-print-hide",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-print-hide",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-print-hide"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Flex mixin\n\n",
      "commentRange": {
        "start": 453,
        "end": 457
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-flex",
        "code": "\n  display: flex;\n  flex-wrap: wrap;\n",
        "line": {
          "start": 459,
          "end": 462
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-flex;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "flex"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "flex"
        }
      ],
      "usedBy": [
        {
          "description": "\n",
          "context": {
            "type": "mixin",
            "name": "flex",
            "code": "\n  @include nhsuk-warning(\"flex\", \"flex is deprecated. Use nhsuk-flex instead.\");\n  @include nhsuk-flex;\n",
            "line": {
              "start": 469,
              "end": 472
            }
          }
        }
      ]
    },
    {
      "description": "\n",
      "commentRange": {
        "start": 465,
        "end": 467
      },
      "context": {
        "type": "mixin",
        "name": "flex",
        "code": "\n  @include nhsuk-warning(\"flex\", \"flex is deprecated. Use nhsuk-flex instead.\");\n  @include nhsuk-flex;\n",
        "line": {
          "start": 469,
          "end": 472
        }
      },
      "alias": "nhsuk-flex",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-flex",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-flex"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Flex item mixin\n\n",
      "commentRange": {
        "start": 474,
        "end": 478
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-flex-item",
        "code": "\n  display: flex;\n\n  @include nhsuk-media-query($until: desktop) {\n    flex: 0 0 100%;\n  }\n",
        "line": {
          "start": 480,
          "end": 486
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@include nhsuk-flex-item;"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "flex-item"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "flex-item"
        }
      ],
      "usedBy": [
        {
          "description": "\n",
          "context": {
            "type": "mixin",
            "name": "flex-item",
            "code": "\n  @include nhsuk-warning(\"flex-item\", \"flex-item is deprecated. Use nhsuk-flex-item instead.\");\n  @include nhsuk-flex-item;\n",
            "line": {
              "start": 493,
              "end": 496
            }
          }
        }
      ]
    },
    {
      "description": "\n",
      "commentRange": {
        "start": 489,
        "end": 491
      },
      "context": {
        "type": "mixin",
        "name": "flex-item",
        "code": "\n  @include nhsuk-warning(\"flex-item\", \"flex-item is deprecated. Use nhsuk-flex-item instead.\");\n  @include nhsuk-flex-item;\n",
        "line": {
          "start": 493,
          "end": 496
        }
      },
      "alias": "nhsuk-flex-item",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-flex-item",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-flex-item"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Remove margin mobile mixin\n\nRemoves left and right margin at tablet breakpoint\n",
      "commentRange": {
        "start": 498,
        "end": 500
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-remove-margin-mobile",
        "code": "\n  @include nhsuk-media-query($until: tablet) {\n    margin-right: -$nhsuk-gutter-half;\n    margin-left: -$nhsuk-gutter-half;\n  }\n",
        "line": {
          "start": 502,
          "end": 507
        }
      },
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      },
      "aliased": [
        "remove-margin-mobile"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "remove-margin-mobile"
        }
      ],
      "usedBy": [
        {
          "description": "Remove margin mobile mixin (deprecated)\n\nRemoves left and right margin at tablet breakpoint\n\n",
          "context": {
            "type": "mixin",
            "name": "remove-margin-mobile",
            "code": "\n  @include nhsuk-warning(\n    \"remove-margin-mobile\",\n    \"remove-margin-mobile is deprecated. Use nhsuk-remove-margin-mobile instead.\"\n  );\n\n  @include nhsuk-remove-margin-mobile;\n",
            "line": {
              "start": 516,
              "end": 523
            }
          }
        }
      ]
    },
    {
      "description": "Remove margin mobile mixin (deprecated)\n\nRemoves left and right margin at tablet breakpoint\n\n",
      "commentRange": {
        "start": 509,
        "end": 514
      },
      "context": {
        "type": "mixin",
        "name": "remove-margin-mobile",
        "code": "\n  @include nhsuk-warning(\n    \"remove-margin-mobile\",\n    \"remove-margin-mobile is deprecated. Use nhsuk-remove-margin-mobile instead.\"\n  );\n\n  @include nhsuk-remove-margin-mobile;\n",
        "line": {
          "start": 516,
          "end": 523
        }
      },
      "alias": "nhsuk-remove-margin-mobile",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-remove-margin-mobile",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-remove-margin-mobile"
        }
      ],
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "NHS logo size helper\n\nSaves duplicating the code for when using the logo as a link.\nUsed in the header and footer.\n",
      "commentRange": {
        "start": 525,
        "end": 528
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-logo-size",
        "code": "\n  width: 100px;\n  height: 40px;\n",
        "line": {
          "start": 530,
          "end": 533
        }
      },
      "group": [
        "tools"
      ],
      "access": "public",
      "file": {
        "path": "core/tools/_mixins.scss",
        "name": "_mixins.scss"
      }
    },
    {
      "description": "Media query\n\nThis is a currently a wrapper for sass-mq - abstracted so that we can\nreplace it in the future if we so choose.\n\nDue to Sass deprecated 'misplaced-rest' named argument warnings, all\narguments must be passed to maintain `nhsuk-media-query(950px)` support.\n\n",
      "commentRange": {
        "start": 21,
        "end": 61
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-media-query",
        "code": "\n  @include mq($from, $until, $and, $media-type, $silence-warning: true) {\n    @content;\n  }\n",
        "line": {
          "start": 63,
          "end": 67
        }
      },
      "parameter": [
        {
          "type": "String | Boolean",
          "name": "from",
          "default": "false",
          "description": "One of $nhsuk-breakpoints"
        },
        {
          "type": "String | Boolean",
          "name": "until",
          "default": "false",
          "description": "One of $nhsuk-breakpoints"
        },
        {
          "type": "String | Boolean",
          "name": "and",
          "default": "false",
          "description": "Additional media query parameters"
        },
        {
          "type": "String",
          "name": "media-type",
          "default": "all",
          "description": "Media type: screen, print…\n"
        }
      ],
      "ignore": [],
      "content": "styling rules, wrapped into a @media query when $responsive is true",
      "example": [
        {
          "type": "scss",
          "code": ".element {\n  @include nhsuk-media-query($from: mobile) {\n    color: red;\n  }\n  @include nhsuk-media-query($until: tablet) {\n    color: blue;\n  }\n  @include nhsuk-media-query(mobile, tablet) {\n    color: green;\n  }\n  @include nhsuk-media-query($from: tablet, $and: '(orientation: landscape)') {\n    color: teal;\n  }\n  @include nhsuk-media-query(950px) {\n    color: hotpink;\n  }\n  @include nhsuk-media-query(tablet, $media-type: screen) {\n    color: hotpink;\n  }\n}"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "mq"
        }
      ],
      "file": {
        "path": "core/tools/_sass-mq.scss",
        "name": "_sass-mq.scss"
      },
      "aliased": [
        "govuk-media-query"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "govuk-media-query"
        }
      ],
      "usedBy": [
        {
          "description": "Width container mixin\n\nUsed to create page width and custom width container classes.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-width-container",
            "code": "\n  // By default, limit the width of the container to the page width\n  max-width: $width;\n\n  // On mobile, add half width gutters\n  margin-right: $nhsuk-gutter-half;\n  margin-left: $nhsuk-gutter-half;\n\n  // Respect 'display cutout' safe area (avoids notches and rounded corners)\n  @supports (margin: string.unquote(\"max(calc(0px))\")) {\n    $gutter-safe-area-right: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-right));\n    $gutter-safe-area-left: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-left));\n\n    // Use max() to pick largest margin, default or with safe area\n    // Escaped due to Sass max() vs. CSS native max()\n    margin-right: string.unquote(\"max(#{$nhsuk-gutter-half}, #{$gutter-safe-area-right})\");\n    margin-left: string.unquote(\"max(#{$nhsuk-gutter-half}, #{$gutter-safe-area-left})\");\n  }\n\n  // On desktop, add full width gutters\n  @include nhsuk-media-query($from: desktop) {\n    margin-right: $nhsuk-gutter;\n    margin-left: $nhsuk-gutter;\n\n    // Respect 'display cutout' safe area (avoids notches and rounded corners)\n    @supports (margin: string.unquote(\"max(calc(0px))\")) {\n      $gutter-safe-area-right: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-right));\n      $gutter-safe-area-left: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-left));\n\n      // Use max() to pick largest margin, default or with safe area\n      // Escaped due to Sass max() vs. CSS native max()\n      margin-right: string.unquote(\"max(#{$nhsuk-gutter}, #{$gutter-safe-area-right})\");\n      margin-left: string.unquote(\"max(#{$nhsuk-gutter}, #{$gutter-safe-area-left})\");\n    }\n  }\n\n  // As soon as the viewport is greater than the width of the page plus the\n  // gutters, just centre the content instead of adding gutters.\n  @include nhsuk-media-query($and: \"(min-width: #{($width + $nhsuk-gutter * 2)})\") {\n    margin-right: auto;\n    margin-left: auto;\n\n    // Since a safe area may have previously been set above,\n    // we need to duplicate this margin that centers the page.\n    @supports (margin: string.unquote(\"max(calc(0px))\")) {\n      margin-right: auto;\n      margin-left: auto;\n    }\n  }\n",
            "line": {
              "start": 22,
              "end": 71
            }
          }
        },
        {
          "description": "Width container mixin\n\nUsed to create page width and custom width container classes.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-width-container",
            "code": "\n  // By default, limit the width of the container to the page width\n  max-width: $width;\n\n  // On mobile, add half width gutters\n  margin-right: $nhsuk-gutter-half;\n  margin-left: $nhsuk-gutter-half;\n\n  // Respect 'display cutout' safe area (avoids notches and rounded corners)\n  @supports (margin: string.unquote(\"max(calc(0px))\")) {\n    $gutter-safe-area-right: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-right));\n    $gutter-safe-area-left: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-left));\n\n    // Use max() to pick largest margin, default or with safe area\n    // Escaped due to Sass max() vs. CSS native max()\n    margin-right: string.unquote(\"max(#{$nhsuk-gutter-half}, #{$gutter-safe-area-right})\");\n    margin-left: string.unquote(\"max(#{$nhsuk-gutter-half}, #{$gutter-safe-area-left})\");\n  }\n\n  // On desktop, add full width gutters\n  @include nhsuk-media-query($from: desktop) {\n    margin-right: $nhsuk-gutter;\n    margin-left: $nhsuk-gutter;\n\n    // Respect 'display cutout' safe area (avoids notches and rounded corners)\n    @supports (margin: string.unquote(\"max(calc(0px))\")) {\n      $gutter-safe-area-right: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-right));\n      $gutter-safe-area-left: calc(#{$nhsuk-gutter-half} + env(safe-area-inset-left));\n\n      // Use max() to pick largest margin, default or with safe area\n      // Escaped due to Sass max() vs. CSS native max()\n      margin-right: string.unquote(\"max(#{$nhsuk-gutter}, #{$gutter-safe-area-right})\");\n      margin-left: string.unquote(\"max(#{$nhsuk-gutter}, #{$gutter-safe-area-left})\");\n    }\n  }\n\n  // As soon as the viewport is greater than the width of the page plus the\n  // gutters, just centre the content instead of adding gutters.\n  @include nhsuk-media-query($and: \"(min-width: #{($width + $nhsuk-gutter * 2)})\") {\n    margin-right: auto;\n    margin-left: auto;\n\n    // Since a safe area may have previously been set above,\n    // we need to duplicate this margin that centers the page.\n    @supports (margin: string.unquote(\"max(calc(0px))\")) {\n      margin-right: auto;\n      margin-left: auto;\n    }\n  }\n",
            "line": {
              "start": 22,
              "end": 71
            }
          }
        },
        {
          "description": "Generate grid column styles\n\nCreates a grid column with standard gutter between the columns.\n\nGrid widths are defined in the `$nhsuk-grid-widths` map.\n\nBy default the column width changes from 100% to specified width at the\n'desktop' breakpoint, but other breakpoints can be specified using the `$at`\nparameter.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-grid-column",
            "code": "\n  box-sizing: border-box;\n  @if $at != tablet {\n    width: 100%;\n  }\n  padding: 0 $nhsuk-gutter-half;\n  @include nhsuk-media-query($from: $at) {\n    width: nhsuk-grid-width($width);\n    float: $float;\n  }\n",
            "line": {
              "start": 59,
              "end": 69
            }
          }
        },
        {
          "description": "Panel mixin\n\nSee components/_panel\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-panel",
            "code": "\n  @if $panel-border-colour {\n    border: 1px solid $panel-border-colour;\n  }\n  color: $panel-text-colour;\n  background-color: $panel-background-colour;\n\n  @include nhsuk-top-and-bottom;\n  @include nhsuk-responsive-margin(7, \"bottom\");\n\n  @include nhsuk-media-query($media-type: print) {\n    border: 1px solid $nhsuk-print-text-colour;\n    page-break-inside: avoid;\n  }\n",
            "line": {
              "start": 242,
              "end": 256
            }
          }
        },
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Print colour mixin, sets the text print colour\nwarning callout, do and don't lists and panels\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-print-colour",
            "code": "\n  @include nhsuk-media-query($media-type: print) {\n    color: $print-colour;\n    @content;\n  }\n",
            "line": {
              "start": 402,
              "end": 407
            }
          }
        },
        {
          "description": "Print hide mixin, hides the element from print\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-print-hide",
            "code": "\n  @include nhsuk-media-query($media-type: print) {\n    display: none;\n  }\n",
            "line": {
              "start": 437,
              "end": 441
            }
          }
        },
        {
          "description": "Flex item mixin\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-flex-item",
            "code": "\n  display: flex;\n\n  @include nhsuk-media-query($until: desktop) {\n    flex: 0 0 100%;\n  }\n",
            "line": {
              "start": 480,
              "end": 486
            }
          }
        },
        {
          "description": "Remove margin mobile mixin\n\nRemoves left and right margin at tablet breakpoint\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-remove-margin-mobile",
            "code": "\n  @include nhsuk-media-query($until: tablet) {\n    margin-right: -$nhsuk-gutter-half;\n    margin-left: -$nhsuk-gutter-half;\n  }\n",
            "line": {
              "start": 502,
              "end": 507
            }
          }
        },
        {
          "description": "Media query (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "govuk-media-query",
            "code": "\n  @include nhsuk-warning(\"govuk-media-query\", \"govuk-media-query is deprecated. Use nhsuk-media-query instead.\");\n  @include nhsuk-media-query($args...) {\n    @content;\n  }\n",
            "line": {
              "start": 74,
              "end": 79
            }
          }
        },
        {
          "description": "Responsive spacing\n\nAdds responsive spacing (either padding or margin, depending on `$property`)\nby fetching a 'spacing map' from the responsive spacing scale, which defines\ndifferent spacing values at different breakpoints.\n\nTo generate responsive spacing, use 'nhsuk-responsive-margin' or\n'nhsuk-responsive-padding' mixins\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-responsive-spacing",
            "code": "\n  $actual-input-type: meta.type-of($responsive-spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \" + \"#{$actual-input-type}.\";\n  }\n\n  @if not map.has-key($nhsuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error \"Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the \"\n      + \"responsive spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  $scale-map: map.get($nhsuk-spacing-responsive-scale, $responsive-spacing-point); // [1]\n  $actual-map-type: meta.type-of($scale-map);\n  @if $actual-map-type != \"map\" {\n    @error \"Expected a number (integer), but got a \"\n      + \"#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)\";\n  }\n\n  @each $breakpoint, $breakpoint-value in $scale-map {\n    // [2]\n\n    @if $adjustment {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    & {\n      @if not $breakpoint {\n        // [3]\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          @if $direction == all {\n            #{$property}: $breakpoint-value if($important, !important, null);\n          } @else {\n            #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n          }\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 89,
              "end": 139
            }
          }
        },
        {
          "description": "Text colour\n\nSets the text colour, including a suitable override for print.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-text-colour",
            "code": "\n  color: $nhsuk-text-colour;\n\n  @include nhsuk-media-query($media-type: print) {\n    color: $nhsuk-print-text-colour;\n  }\n",
            "line": {
              "start": 23,
              "end": 29
            }
          }
        },
        {
          "description": "Font size and line height helper\n\nTakes a point from the responsive 'font map' as an argument (the size as it\nwould appear on tablet and above), and uses it to create font-size and\nline-height declarations for different breakpoints, and print.\n\nExample font map:\n\n```scss\n19: (\n  null: (\n    font-size: 16px,\n    line-height: 20px\n  ),\n  tablet: (\n    font-size: 19px,\n    line-height: 25px\n  ),\n  print: (\n    font-size: 14pt,\n    line-height: 1.15\n  )\n);\n```\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font-size",
            "code": "\n  // Flag font sizes that start with underscores so we can suppress warnings on\n  // deprecated sizes used internally, for example `nhsuk-font($size: \"_24\")`\n  $size-internal-use-only: string.slice(#{$size}, 1, 1) == \"_\";\n\n  // Remove underscore from font sizes flagged for internal use\n  @if $size-internal-use-only {\n    $size: string.slice(#{$size}, 2);\n  }\n\n  // Check for a font map exactly matching the given size\n  $font-map: map.get($nhsuk-typography-scale, $size);\n\n  // No match? Try with string type (e.g. $size: \"16\" not 16)\n  @if not $font-map {\n    @each $font-size in map.keys($nhsuk-typography-scale) {\n      @if not $font-map and \"#{$font-size}\" == \"#{$size}\" {\n        $font-map: map.get($nhsuk-typography-scale, $font-size);\n      }\n    }\n  }\n\n  // Still no match? Throw error\n  @if not $font-map {\n    @error \"Unknown font size `#{$size}` - expected a point from the typography scale.\";\n  }\n\n  // Check for a deprecation within the typography scale\n  $deprecation: map.get($font-map, \"deprecation\");\n\n  @if $deprecation {\n    // Warn on deprecated font sizes unless flagged for internal use\n    @if not $size-internal-use-only {\n      @include nhsuk-warning(map.get($deprecation, \"key\"), map.get($deprecation, \"message\"));\n    }\n\n    // remove the deprecation map keys so they do not break the breakpoint loop\n    $font-map: map.remove($font-map, \"deprecation\");\n  }\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map.get($breakpoint-map, \"font-size\");\n    $font-size-rem: nhsuk-px-to-rem($font-size);\n\n    // $calculated-line-height is a separate variable from $line-height,\n    // as otherwise the value would get redefined with each loop and\n    // eventually break nhsuk-line-height.\n    //\n    // We continue to call the param $line-height to stay consistent with the\n    // naming with nhsuk-font.\n    $calculated-line-height: nhsuk-line-height(\n      $line-height: if($line-height, $line-height, map.get($breakpoint-map, \"line-height\")),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $calculated-line-height: $calculated-line-height if($important, !important, null);\n\n    & {\n      @if not $breakpoint {\n        font-size: $font-size;\n        font-size: $font-size-rem;\n        line-height: $calculated-line-height;\n      } @else if $breakpoint == \"print\" {\n        @include nhsuk-media-query($media-type: print) {\n          font-size: $font-size;\n          line-height: $calculated-line-height;\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          font-size: $font-size;\n          font-size: $font-size-rem;\n          line-height: $calculated-line-height;\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 134,
              "end": 215
            }
          }
        },
        {
          "description": "Font size and line height helper\n\nTakes a point from the responsive 'font map' as an argument (the size as it\nwould appear on tablet and above), and uses it to create font-size and\nline-height declarations for different breakpoints, and print.\n\nExample font map:\n\n```scss\n19: (\n  null: (\n    font-size: 16px,\n    line-height: 20px\n  ),\n  tablet: (\n    font-size: 19px,\n    line-height: 25px\n  ),\n  print: (\n    font-size: 14pt,\n    line-height: 1.15\n  )\n);\n```\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font-size",
            "code": "\n  // Flag font sizes that start with underscores so we can suppress warnings on\n  // deprecated sizes used internally, for example `nhsuk-font($size: \"_24\")`\n  $size-internal-use-only: string.slice(#{$size}, 1, 1) == \"_\";\n\n  // Remove underscore from font sizes flagged for internal use\n  @if $size-internal-use-only {\n    $size: string.slice(#{$size}, 2);\n  }\n\n  // Check for a font map exactly matching the given size\n  $font-map: map.get($nhsuk-typography-scale, $size);\n\n  // No match? Try with string type (e.g. $size: \"16\" not 16)\n  @if not $font-map {\n    @each $font-size in map.keys($nhsuk-typography-scale) {\n      @if not $font-map and \"#{$font-size}\" == \"#{$size}\" {\n        $font-map: map.get($nhsuk-typography-scale, $font-size);\n      }\n    }\n  }\n\n  // Still no match? Throw error\n  @if not $font-map {\n    @error \"Unknown font size `#{$size}` - expected a point from the typography scale.\";\n  }\n\n  // Check for a deprecation within the typography scale\n  $deprecation: map.get($font-map, \"deprecation\");\n\n  @if $deprecation {\n    // Warn on deprecated font sizes unless flagged for internal use\n    @if not $size-internal-use-only {\n      @include nhsuk-warning(map.get($deprecation, \"key\"), map.get($deprecation, \"message\"));\n    }\n\n    // remove the deprecation map keys so they do not break the breakpoint loop\n    $font-map: map.remove($font-map, \"deprecation\");\n  }\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map.get($breakpoint-map, \"font-size\");\n    $font-size-rem: nhsuk-px-to-rem($font-size);\n\n    // $calculated-line-height is a separate variable from $line-height,\n    // as otherwise the value would get redefined with each loop and\n    // eventually break nhsuk-line-height.\n    //\n    // We continue to call the param $line-height to stay consistent with the\n    // naming with nhsuk-font.\n    $calculated-line-height: nhsuk-line-height(\n      $line-height: if($line-height, $line-height, map.get($breakpoint-map, \"line-height\")),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $calculated-line-height: $calculated-line-height if($important, !important, null);\n\n    & {\n      @if not $breakpoint {\n        font-size: $font-size;\n        font-size: $font-size-rem;\n        line-height: $calculated-line-height;\n      } @else if $breakpoint == \"print\" {\n        @include nhsuk-media-query($media-type: print) {\n          font-size: $font-size;\n          line-height: $calculated-line-height;\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          font-size: $font-size;\n          font-size: $font-size-rem;\n          line-height: $calculated-line-height;\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 134,
              "end": 215
            }
          }
        }
      ]
    },
    {
      "description": "Media query (deprecated)\n\n",
      "commentRange": {
        "start": 69,
        "end": 72
      },
      "context": {
        "type": "mixin",
        "name": "govuk-media-query",
        "code": "\n  @include nhsuk-warning(\"govuk-media-query\", \"govuk-media-query is deprecated. Use nhsuk-media-query instead.\");\n  @include nhsuk-media-query($args...) {\n    @content;\n  }\n",
        "line": {
          "start": 74,
          "end": 79
        }
      },
      "alias": "nhsuk-media-query",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-media-query",
      "group": [
        "tools"
      ],
      "access": "public",
      "content": "",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        }
      ],
      "file": {
        "path": "core/tools/_sass-mq.scss",
        "name": "_sass-mq.scss"
      }
    },
    {
      "description": "Calculate the height of an equilateral triangle\nMultiplying half the length of the base of an equilateral triangle by the\nsquare root of three gives us its height. We use 1.732 as an approximation.\n\n",
      "commentRange": {
        "start": 10,
        "end": 19
      },
      "context": {
        "type": "function",
        "name": "_nhsuk-equilateral-height",
        "code": "\n  $square-root-of-three: 1.732;\n\n  @return math.div($base, 2) * $square-root-of-three;\n",
        "line": {
          "start": 21,
          "end": 25
        }
      },
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "parameter": [
        {
          "type": "Number",
          "name": "base",
          "description": "Length of the base of the triangle"
        }
      ],
      "return": {
        "type": "Number",
        "description": "Calculated height of the triangle\n"
      },
      "access": "private",
      "group": [
        "tools"
      ],
      "require": [],
      "file": {
        "path": "core/tools/_shape-arrow.scss",
        "name": "_shape-arrow.scss"
      },
      "usedBy": [
        {
          "description": "Arrow mixin\n\nGenerate Arrows (triangles) by using a mix of transparent (1) and coloured\nborders. The coloured borders inherit the text colour of the element (2).\n\nEnsure the arrow is rendered correctly if browser colours are overridden by\nproviding a clip path (3). Without this the transparent borders are\noverridden to become visible which results in a square.\n\nWe need both because older browsers do not support clip-path.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-shape-arrow",
            "code": "\n  display: $display;\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-color: transparent; // 1\n\n  $perpendicular: math.div($base, 2);\n\n  @if not $height {\n    $height: _nhsuk-equilateral-height($base);\n  }\n\n  @if $direction == \"up\" {\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%); // 3\n    border-width: 0 $perpendicular $height;\n    border-bottom-color: inherit; // 2\n  } @else if $direction == \"right\" {\n    clip-path: polygon(0% 0%, 100% 50%, 0% 100%); // 3\n    border-width: $perpendicular 0 $perpendicular $height;\n    border-left-color: inherit; // 2\n  } @else if $direction == \"down\" {\n    clip-path: polygon(0% 0%, 50% 100%, 100% 0%); // 3\n    border-width: $height $perpendicular 0 $perpendicular;\n    border-top-color: inherit; // 2\n  } @else if $direction == \"left\" {\n    clip-path: polygon(0% 50%, 100% 100%, 100% 0%); // 3\n    border-width: $perpendicular $height $perpendicular 0;\n    border-right-color: inherit; // 2\n  } @else {\n    @error \"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\";\n  }\n",
            "line": {
              "start": 45,
              "end": 77
            }
          }
        }
      ]
    },
    {
      "description": "Arrow mixin\n\nGenerate Arrows (triangles) by using a mix of transparent (1) and coloured\nborders. The coloured borders inherit the text colour of the element (2).\n\nEnsure the arrow is rendered correctly if browser colours are overridden by\nproviding a clip path (3). Without this the transparent borders are\noverridden to become visible which results in a square.\n\nWe need both because older browsers do not support clip-path.\n\n",
      "commentRange": {
        "start": 27,
        "end": 43
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-shape-arrow",
        "code": "\n  display: $display;\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-color: transparent; // 1\n\n  $perpendicular: math.div($base, 2);\n\n  @if not $height {\n    $height: _nhsuk-equilateral-height($base);\n  }\n\n  @if $direction == \"up\" {\n    clip-path: polygon(50% 0%, 0% 100%, 100% 100%); // 3\n    border-width: 0 $perpendicular $height;\n    border-bottom-color: inherit; // 2\n  } @else if $direction == \"right\" {\n    clip-path: polygon(0% 0%, 100% 50%, 0% 100%); // 3\n    border-width: $perpendicular 0 $perpendicular $height;\n    border-left-color: inherit; // 2\n  } @else if $direction == \"down\" {\n    clip-path: polygon(0% 0%, 50% 100%, 100% 0%); // 3\n    border-width: $height $perpendicular 0 $perpendicular;\n    border-top-color: inherit; // 2\n  } @else if $direction == \"left\" {\n    clip-path: polygon(0% 50%, 100% 100%, 100% 0%); // 3\n    border-width: $perpendicular $height $perpendicular 0;\n    border-right-color: inherit; // 2\n  } @else {\n    @error \"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\";\n  }\n",
        "line": {
          "start": 45,
          "end": 77
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "direction",
          "description": "Direction for arrow: up, right, down, left."
        },
        {
          "type": "Number",
          "name": "base",
          "description": "Length of the triangle 'base' side"
        },
        {
          "type": "Number",
          "name": "height",
          "default": "null",
          "description": "Height of triangle. Omit for equilateral."
        },
        {
          "type": "String",
          "name": "display",
          "default": "block",
          "description": "CSS display property of the arrow\n"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "_nhsuk-equilateral-height"
        }
      ],
      "throw": [
        "Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`"
      ],
      "file": {
        "path": "core/tools/_shape-arrow.scss",
        "name": "_shape-arrow.scss"
      }
    },
    {
      "description": "Chevron mixin\n\nGenerate chevron by using a box with borders on two sides, then rotating it.\n\n",
      "commentRange": {
        "start": 12,
        "end": 19
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-shape-chevron",
        "code": "\n  $outline-width: nhsuk-em($nhsuk-chevron-border, $font-size);\n  $box-size: nhsuk-em(math.div($font-size, 2), $font-size);\n  $size: nhsuk-em(nhsuk-chevron-size($font-size), $nhsuk-base-font-size);\n  display: $display;\n\n  width: $box-size;\n  height: $box-size;\n\n  clip-path: polygon(100% 100%, 100% 0, 0 0);\n\n  border-radius: 2px;\n\n  // Safari renders a hairline gap if we use borders, so use an inset outline\n  // instead. Because outlines are added to all sides of a box, we hide the\n  // outline on the two other two sides using clip-path.\n  outline: $outline-width solid currentcolor;\n  outline-offset: -$outline-width;\n\n  color: $colour;\n\n  @if $direction == \"up\" {\n    transform: translateY($outline-width) rotate(-45deg);\n  } @else if $direction == \"right\" {\n    transform: translateX(-$size + $outline-width) rotate(45deg);\n  } @else if $direction == \"down\" {\n    transform: translateY(-$size + $outline-width) rotate(135deg);\n  } @else if $direction == \"left\" {\n    transform: translateX($outline-width) rotate(225deg);\n  } @else {\n    @error \"Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`\";\n  }\n\n  @supports (border-width: string.unquote(\"max(0px)\")) {\n    $outline-width-eval: \"max(#{$nhsuk-chevron-border}, #{$outline-width})\";\n\n    // Ensure that the chevron outline never gets smaller than 2px\n    outline-width: string.unquote($outline-width-eval) string.unquote($outline-width-eval) 0 0;\n\n    // Ensure that the chevron never gets smaller than 16px\n    font-size: string.unquote(\"max(#{$font-size * 1px}, 1em)\");\n  }\n",
        "line": {
          "start": 21,
          "end": 63
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "direction",
          "description": "Direction for chevron: up, right, down, left"
        },
        {
          "type": "Colour",
          "name": "colour",
          "description": "Colour of chevron"
        },
        {
          "type": "Number",
          "name": "font-size",
          "default": "14",
          "description": "Font size to base chevron size on"
        },
        {
          "type": "String",
          "name": "display",
          "default": "block",
          "description": "CSS display property of the arrow"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "function",
          "name": "nhsuk-em"
        },
        {
          "type": "function",
          "name": "nhsuk-em"
        },
        {
          "type": "function",
          "name": "nhsuk-em"
        },
        {
          "type": "function",
          "name": "nhsuk-chevron-size"
        },
        {
          "type": "variable",
          "name": "nhsuk-base-font-size"
        }
      ],
      "throw": [
        "Invalid arrow direction: expected `up`, `right`, `down` or `left`, got `#{$direction}`"
      ],
      "file": {
        "path": "core/tools/_shape-chevron.scss",
        "name": "_shape-chevron.scss"
      }
    },
    {
      "description": "Single point spacing\n\nReturns measurement corresponding to the spacing point requested.\n\n",
      "commentRange": {
        "start": 13,
        "end": 37
      },
      "context": {
        "type": "function",
        "name": "nhsuk-spacing",
        "code": "\n  $actual-input-type: meta.type-of($spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \"\n      + \"#{$actual-input-type}.\";\n  }\n\n  $is-negative: false;\n  @if $spacing-point < 0 {\n    $is-negative: true;\n    $spacing-point: math.abs($spacing-point);\n  }\n\n  @if not map.has-key($nhsuk-spacing-points, $spacing-point) {\n    @error \"Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  $value: map.get($nhsuk-spacing-points, $spacing-point);\n  @return if($is-negative, $value * -1, $value);\n",
        "line": {
          "start": 39,
          "end": 58
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "spacing-point",
          "description": "Point on the spacing scale\n (set in `settings/_spacing.scss`)\n"
        }
      ],
      "return": {
        "type": "String",
        "description": "Spacing measurement eg. 8px\n"
      },
      "example": [
        {
          "type": "scss",
          "code": ".element {\n  padding: nhsuk-spacing(5);\n}"
        },
        {
          "type": "scss",
          "code": ".element {\n  margin-top: nhsuk-spacing(-1);\n}",
          "description": "Using negative spacing"
        },
        {
          "type": "scss",
          "code": ".element {\n  margin-top: nhsuk-spacing(1) !important;\n}",
          "description": "Marking spacing declarations as important"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "variable",
          "name": "nhsuk-spacing-points"
        },
        {
          "type": "variable",
          "name": "nhsuk-spacing-points"
        }
      ],
      "throw": [
        "Expected a number (integer), but got a ",
        "Unknown spacing variable `#{$spacing-point}`. Make sure you are using a point from the spacing scale in `_settings/spacing.scss`."
      ],
      "file": {
        "path": "core/tools/_spacing.scss",
        "name": "_spacing.scss"
      },
      "usedBy": [
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Generate static spacing override classes\n\nGenerate spacing override classes for the given property (e.g. margin)\nfor each point in the non-responsive spacing scale.\n\n",
          "context": {
            "type": "mixin",
            "name": "_nhsuk-generate-static-spacing-overrides",
            "code": "\n  @each $spacing-point in map.keys($nhsuk-spacing-points) {\n    .nhsuk-u-static-#{$property}-#{$spacing-point} {\n      #{$property}: nhsuk-spacing($spacing-point) !important;\n    }\n\n    @each $direction in $_spacing-directions {\n      .nhsuk-u-static-#{$property}-#{$direction}-#{$spacing-point} {\n        #{$property}-#{$direction}: nhsuk-spacing($spacing-point) !important;\n      }\n    }\n  }\n",
            "line": {
              "start": 72,
              "end": 84
            }
          }
        },
        {
          "description": "Generate static spacing override classes\n\nGenerate spacing override classes for the given property (e.g. margin)\nfor each point in the non-responsive spacing scale.\n\n",
          "context": {
            "type": "mixin",
            "name": "_nhsuk-generate-static-spacing-overrides",
            "code": "\n  @each $spacing-point in map.keys($nhsuk-spacing-points) {\n    .nhsuk-u-static-#{$property}-#{$spacing-point} {\n      #{$property}: nhsuk-spacing($spacing-point) !important;\n    }\n\n    @each $direction in $_spacing-directions {\n      .nhsuk-u-static-#{$property}-#{$direction}-#{$spacing-point} {\n        #{$property}-#{$direction}: nhsuk-spacing($spacing-point) !important;\n      }\n    }\n  }\n",
            "line": {
              "start": 72,
              "end": 84
            }
          }
        }
      ]
    },
    {
      "description": "Responsive spacing\n\nAdds responsive spacing (either padding or margin, depending on `$property`)\nby fetching a 'spacing map' from the responsive spacing scale, which defines\ndifferent spacing values at different breakpoints.\n\nTo generate responsive spacing, use 'nhsuk-responsive-margin' or\n'nhsuk-responsive-padding' mixins\n\n",
      "commentRange": {
        "start": 60,
        "end": 87
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-responsive-spacing",
        "code": "\n  $actual-input-type: meta.type-of($responsive-spacing-point);\n  @if $actual-input-type != \"number\" {\n    @error \"Expected a number (integer), but got a \" + \"#{$actual-input-type}.\";\n  }\n\n  @if not map.has-key($nhsuk-spacing-responsive-scale, $responsive-spacing-point) {\n    @error \"Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the \"\n      + \"responsive spacing scale in `_settings/spacing.scss`.\";\n  }\n\n  $scale-map: map.get($nhsuk-spacing-responsive-scale, $responsive-spacing-point); // [1]\n  $actual-map-type: meta.type-of($scale-map);\n  @if $actual-map-type != \"map\" {\n    @error \"Expected a number (integer), but got a \"\n      + \"#{$actual-map-type}. Make sure you are using a map to set the responsive spacing in `_settings/spacing.scss`)\";\n  }\n\n  @each $breakpoint, $breakpoint-value in $scale-map {\n    // [2]\n\n    @if $adjustment {\n      $breakpoint-value: $breakpoint-value + $adjustment;\n    }\n\n    & {\n      @if not $breakpoint {\n        // [3]\n        @if $direction == all {\n          #{$property}: $breakpoint-value if($important, !important, null);\n        } @else {\n          #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          @if $direction == all {\n            #{$property}: $breakpoint-value if($important, !important, null);\n          } @else {\n            #{$property}-#{$direction}: $breakpoint-value if($important, !important, null);\n          }\n        }\n      }\n    }\n  }\n",
        "line": {
          "start": 89,
          "end": 139
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "responsive-spacing-point",
          "description": "Point on the responsive spacing\n scale, corresponds to a map of breakpoints and spacing values"
        },
        {
          "type": "String",
          "name": "property",
          "description": "Property to add spacing to (e.g. 'margin')"
        },
        {
          "type": "String",
          "name": "direction",
          "default": "all",
          "description": "Direction to add spacing to\n (`top`, `right`, `bottom`, `left`, `all`)"
        },
        {
          "type": "Boolean",
          "name": "important",
          "default": "false",
          "description": "Whether to mark as `!important`"
        },
        {
          "type": "Number",
          "name": "adjustment",
          "default": "false",
          "description": "Offset to adjust spacing by\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "  .foo {\n    padding: nhsuk-spacing(5);\n    top: nhsuk-spacing(2) !important; // if `!important` is required\n  }\n\n1. Make sure that the return value from `_settings/spacing.scss` is a map.\n2. Loop through each breakpoint in the map\n3. The 'null' breakpoint is for mobile."
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        },
        {
          "type": "variable",
          "name": "nhsuk-spacing-responsive-scale"
        },
        {
          "type": "variable",
          "name": "nhsuk-spacing-responsive-scale"
        }
      ],
      "throw": [
        "Expected a number (integer), but got a ",
        "Unknown spacing point `#{$responsive-spacing-point}`. Make sure you are using a point from the "
      ],
      "file": {
        "path": "core/tools/_spacing.scss",
        "name": "_spacing.scss"
      },
      "usedBy": [
        {
          "description": "Responsive margin\n\nAdds responsive margin by fetching a 'spacing map' from the responsive\nspacing scale, which defines different spacing values at different\nbreakpoints. Wrapper for the `nhsuk-responsive-spacing` mixin.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-responsive-margin",
            "code": "\n  @include nhsuk-responsive-spacing($responsive-spacing-point, \"margin\", $direction, $important, $adjustment);\n",
            "line": {
              "start": 161,
              "end": 163
            }
          }
        },
        {
          "description": "Responsive padding\n\nAdds responsive padding by fetching a 'spacing map' from the responsive\nspacing scale, which defines different spacing values at different\nbreakpoints. Wrapper for the `nhsuk-responsive-spacing` mixin.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-responsive-padding",
            "code": "\n  @include nhsuk-responsive-spacing($responsive-spacing-point, \"padding\", $direction, $important, $adjustment);\n",
            "line": {
              "start": 185,
              "end": 187
            }
          }
        },
        {
          "description": "Generate responsive spacing override classes\n\nGenerate spacing override classes for the given property (e.g. margin)\nfor each point in the responsive spacing scale.\n\n",
          "context": {
            "type": "mixin",
            "name": "_nhsuk-generate-responsive-spacing-overrides",
            "code": "\n  // For each point in the spacing scale (defined in settings), create an\n  // override that affects all directions...\n  @each $scale-point, $scale-map in $nhsuk-spacing-responsive-scale {\n    .nhsuk-u-#{$property}-#{$scale-point} {\n      @include nhsuk-responsive-spacing($scale-point, $property, \"all\", true);\n    }\n\n    // ... and then an override for each individual direction\n    @each $direction in $_spacing-directions {\n      .nhsuk-u-#{$property}-#{$direction}-#{$scale-point} {\n        @include nhsuk-responsive-spacing($scale-point, $property, $direction, true);\n      }\n    }\n  }\n",
            "line": {
              "start": 41,
              "end": 56
            }
          }
        },
        {
          "description": "Generate responsive spacing override classes\n\nGenerate spacing override classes for the given property (e.g. margin)\nfor each point in the responsive spacing scale.\n\n",
          "context": {
            "type": "mixin",
            "name": "_nhsuk-generate-responsive-spacing-overrides",
            "code": "\n  // For each point in the spacing scale (defined in settings), create an\n  // override that affects all directions...\n  @each $scale-point, $scale-map in $nhsuk-spacing-responsive-scale {\n    .nhsuk-u-#{$property}-#{$scale-point} {\n      @include nhsuk-responsive-spacing($scale-point, $property, \"all\", true);\n    }\n\n    // ... and then an override for each individual direction\n    @each $direction in $_spacing-directions {\n      .nhsuk-u-#{$property}-#{$direction}-#{$scale-point} {\n        @include nhsuk-responsive-spacing($scale-point, $property, $direction, true);\n      }\n    }\n  }\n",
            "line": {
              "start": 41,
              "end": 56
            }
          }
        }
      ]
    },
    {
      "description": "Responsive margin\n\nAdds responsive margin by fetching a 'spacing map' from the responsive\nspacing scale, which defines different spacing values at different\nbreakpoints. Wrapper for the `nhsuk-responsive-spacing` mixin.\n\n",
      "commentRange": {
        "start": 141,
        "end": 159
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-responsive-margin",
        "code": "\n  @include nhsuk-responsive-spacing($responsive-spacing-point, \"margin\", $direction, $important, $adjustment);\n",
        "line": {
          "start": 161,
          "end": 163
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "responsive-spacing-point",
          "description": "Point on the responsive spacing\nscale, corresponds to a map of breakpoints and spacing values"
        },
        {
          "type": "String",
          "name": "direction",
          "default": "all",
          "description": "Direction to add spacing to\n  (`top`, `right`, `bottom`, `left`, `all`)"
        },
        {
          "type": "Boolean",
          "name": "important",
          "default": "false",
          "description": "Whether to mark as `!important`"
        },
        {
          "type": "Number",
          "name": "adjustment",
          "default": "false",
          "description": "Offset to adjust spacing by\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": ".foo {\n  @include nhsuk-responsive-margin(6, 'left', $adjustment: 1px);\n}"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-responsive-spacing"
        }
      ],
      "file": {
        "path": "core/tools/_spacing.scss",
        "name": "_spacing.scss"
      },
      "usedBy": [
        {
          "description": "Panel mixin\n\nSee components/_panel\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-panel",
            "code": "\n  @if $panel-border-colour {\n    border: 1px solid $panel-border-colour;\n  }\n  color: $panel-text-colour;\n  background-color: $panel-background-colour;\n\n  @include nhsuk-top-and-bottom;\n  @include nhsuk-responsive-margin(7, \"bottom\");\n\n  @include nhsuk-media-query($media-type: print) {\n    border: 1px solid $nhsuk-print-text-colour;\n    page-break-inside: avoid;\n  }\n",
            "line": {
              "start": 242,
              "end": 256
            }
          }
        },
        {
          "description": "Panel with label mixin, inherits panel styling\nand removes padding top for the label positioning\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-panel-with-label",
            "code": "\n  // stylelint-disable-next-line declaration-no-important\n  padding-top: 0 !important;\n  border: 1px solid $panel-border-colour;\n\n  @include nhsuk-panel($panel-background-colour, $panel-text-colour, $panel-border-colour);\n  @include nhsuk-responsive-margin(7, \"top\");\n  @include nhsuk-responsive-padding(5);\n",
            "line": {
              "start": 279,
              "end": 287
            }
          }
        }
      ]
    },
    {
      "description": "Responsive padding\n\nAdds responsive padding by fetching a 'spacing map' from the responsive\nspacing scale, which defines different spacing values at different\nbreakpoints. Wrapper for the `nhsuk-responsive-spacing` mixin.\n\n",
      "commentRange": {
        "start": 165,
        "end": 183
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-responsive-padding",
        "code": "\n  @include nhsuk-responsive-spacing($responsive-spacing-point, \"padding\", $direction, $important, $adjustment);\n",
        "line": {
          "start": 185,
          "end": 187
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "responsive-spacing-point",
          "description": "Point on the responsive spacing\n  scale, corresponds to a map of breakpoints and spacing values"
        },
        {
          "type": "String",
          "name": "direction",
          "default": "all",
          "description": "Direction to add spacing to\n  (`top`, `right`, `bottom`, `left`, `all`)"
        },
        {
          "type": "Boolean",
          "name": "important",
          "default": "false",
          "description": "Whether to mark as `!important`"
        },
        {
          "type": "Number",
          "name": "adjustment",
          "default": "false",
          "description": "Offset to adjust spacing\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": ".foo {\n  @include nhsuk-responsive-padding(6, 'left', $adjustment: 1px);\n}"
        }
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-responsive-spacing"
        }
      ],
      "file": {
        "path": "core/tools/_spacing.scss",
        "name": "_spacing.scss"
      },
      "usedBy": [
        {
          "description": "Panel with label mixin, inherits panel styling\nand removes padding top for the label positioning\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-panel-with-label",
            "code": "\n  // stylelint-disable-next-line declaration-no-important\n  padding-top: 0 !important;\n  border: 1px solid $panel-border-colour;\n\n  @include nhsuk-panel($panel-background-colour, $panel-text-colour, $panel-border-colour);\n  @include nhsuk-responsive-margin(7, \"top\");\n  @include nhsuk-responsive-padding(5);\n",
            "line": {
              "start": 279,
              "end": 287
            }
          }
        }
      ]
    },
    {
      "description": "Text colour\n\nSets the text colour, including a suitable override for print.\n\n",
      "commentRange": {
        "start": 17,
        "end": 21
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-text-colour",
        "code": "\n  color: $nhsuk-text-colour;\n\n  @include nhsuk-media-query($media-type: print) {\n    color: $nhsuk-print-text-colour;\n  }\n",
        "line": {
          "start": 23,
          "end": 29
        }
      },
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        },
        {
          "type": "variable",
          "name": "nhsuk-text-colour"
        },
        {
          "type": "variable",
          "name": "nhsuk-print-text-colour"
        }
      ],
      "file": {
        "path": "core/tools/_typography.scss",
        "name": "_typography.scss"
      },
      "usedBy": [
        {
          "description": "Text colour (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-text-color",
            "code": "\n  @include nhsuk-warning(\"color-to-colour\", \"nhsuk-text-color is deprecated. Use nhsuk-text-colour instead.\");\n  @include nhsuk-text-colour;\n",
            "line": {
              "start": 36,
              "end": 39
            }
          }
        }
      ]
    },
    {
      "description": "Text colour (deprecated)\n\n",
      "commentRange": {
        "start": 31,
        "end": 34
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-text-color",
        "code": "\n  @include nhsuk-warning(\"color-to-colour\", \"nhsuk-text-color is deprecated. Use nhsuk-text-colour instead.\");\n  @include nhsuk-text-colour;\n",
        "line": {
          "start": 36,
          "end": 39
        }
      },
      "alias": "nhsuk-text-colour",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-text-colour",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-text-colour"
        }
      ],
      "file": {
        "path": "core/tools/_typography.scss",
        "name": "_typography.scss"
      }
    },
    {
      "description": "Normal font weight\n\n",
      "commentRange": {
        "start": 41,
        "end": 44
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-typography-weight-normal",
        "code": "\n  font-weight: $nhsuk-font-normal if($important, !important, null);\n",
        "line": {
          "start": 46,
          "end": 48
        }
      },
      "parameter": [
        {
          "type": "Boolean",
          "name": "important",
          "default": "false",
          "description": "Whether to mark declarations as\n  `!important`. Generally Used to create override classes."
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "core/tools/_typography.scss",
        "name": "_typography.scss"
      },
      "usedBy": [
        {
          "description": "Font helper\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font",
            "code": "\n  & {\n    @if $weight == normal {\n      @include nhsuk-typography-weight-normal;\n    } @else if $weight == bold {\n      @include nhsuk-typography-weight-bold;\n    }\n  }\n\n  @if $size {\n    @include nhsuk-font-size($size, $line-height);\n  }\n",
            "line": {
              "start": 256,
              "end": 268
            }
          }
        }
      ]
    },
    {
      "description": "Bold font weight\n\n",
      "commentRange": {
        "start": 50,
        "end": 53
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-typography-weight-bold",
        "code": "\n  font-weight: $nhsuk-font-bold if($important, !important, null);\n",
        "line": {
          "start": 55,
          "end": 57
        }
      },
      "parameter": [
        {
          "type": "Boolean",
          "name": "important",
          "default": "false",
          "description": "Whether to mark declarations as\n  `!important`. Generally Used to create override classes."
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "core/tools/_typography.scss",
        "name": "_typography.scss"
      },
      "usedBy": [
        {
          "description": "Font helper\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font",
            "code": "\n  & {\n    @if $weight == normal {\n      @include nhsuk-typography-weight-normal;\n    } @else if $weight == bold {\n      @include nhsuk-typography-weight-bold;\n    }\n  }\n\n  @if $size {\n    @include nhsuk-font-size($size, $line-height);\n  }\n",
            "line": {
              "start": 256,
              "end": 268
            }
          }
        }
      ]
    },
    {
      "description": "Word break helper\n\nForcibly breaks long words that lack spaces, such as email addresses,\nacross multiple lines when they wouldn't otherwise fit.\n\n",
      "commentRange": {
        "start": 59,
        "end": 65
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-text-break-word",
        "code": "\n  // IE 11 and Edge 16–17 only support the non-standard `word-wrap` property\n  word-wrap: break-word if($important, !important, null);\n\n  // All other browsers support `overflow-wrap`\n  overflow-wrap: break-word if($important, !important, null);\n",
        "line": {
          "start": 67,
          "end": 73
        }
      },
      "parameter": [
        {
          "type": "Boolean",
          "name": "important",
          "default": "false",
          "description": "Whether to mark declarations as\n  `!important`. Generally used to create override classes."
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "core/tools/_typography.scss",
        "name": "_typography.scss"
      }
    },
    {
      "description": "Line height\n\n\nConvert line-heights specified in pixels into a relative value, unless\nthey are already unit-less (and thus already treated as relative values)\nor the units do not match the units used for the font size.\n\n",
      "commentRange": {
        "start": 75,
        "end": 84
      },
      "context": {
        "type": "function",
        "name": "nhsuk-line-height",
        "code": "\n  @if not math.is-unitless($line-height) and math.unit($line-height) == math.unit($font-size) {\n    // Explicitly rounding to 5 decimal places to match the node-sass/libsass default precision.\n    // This is expanded to 10 in dart-sass and results in significant line height differences\n    // Therefore by rounding it here we achieve consistent rendering across node-sass and dart-sass\n    $ten-to-the-power-five: 100000;\n    $line-height: math.div(round(math.div($line-height, $font-size) * $ten-to-the-power-five), $ten-to-the-power-five);\n  }\n\n  @return $line-height;\n",
        "line": {
          "start": 86,
          "end": 96
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "line-height",
          "description": "Line height"
        },
        {
          "type": "Number",
          "name": "font-size",
          "description": "Font size"
        }
      ],
      "return": {
        "type": "Number",
        "description": "The line height as either a relative value or unmodified"
      },
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [],
      "file": {
        "path": "core/tools/_typography.scss",
        "name": "_typography.scss"
      },
      "usedBy": [
        {
          "description": "Font size and line height helper\n\nTakes a point from the responsive 'font map' as an argument (the size as it\nwould appear on tablet and above), and uses it to create font-size and\nline-height declarations for different breakpoints, and print.\n\nExample font map:\n\n```scss\n19: (\n  null: (\n    font-size: 16px,\n    line-height: 20px\n  ),\n  tablet: (\n    font-size: 19px,\n    line-height: 25px\n  ),\n  print: (\n    font-size: 14pt,\n    line-height: 1.15\n  )\n);\n```\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font-size",
            "code": "\n  // Flag font sizes that start with underscores so we can suppress warnings on\n  // deprecated sizes used internally, for example `nhsuk-font($size: \"_24\")`\n  $size-internal-use-only: string.slice(#{$size}, 1, 1) == \"_\";\n\n  // Remove underscore from font sizes flagged for internal use\n  @if $size-internal-use-only {\n    $size: string.slice(#{$size}, 2);\n  }\n\n  // Check for a font map exactly matching the given size\n  $font-map: map.get($nhsuk-typography-scale, $size);\n\n  // No match? Try with string type (e.g. $size: \"16\" not 16)\n  @if not $font-map {\n    @each $font-size in map.keys($nhsuk-typography-scale) {\n      @if not $font-map and \"#{$font-size}\" == \"#{$size}\" {\n        $font-map: map.get($nhsuk-typography-scale, $font-size);\n      }\n    }\n  }\n\n  // Still no match? Throw error\n  @if not $font-map {\n    @error \"Unknown font size `#{$size}` - expected a point from the typography scale.\";\n  }\n\n  // Check for a deprecation within the typography scale\n  $deprecation: map.get($font-map, \"deprecation\");\n\n  @if $deprecation {\n    // Warn on deprecated font sizes unless flagged for internal use\n    @if not $size-internal-use-only {\n      @include nhsuk-warning(map.get($deprecation, \"key\"), map.get($deprecation, \"message\"));\n    }\n\n    // remove the deprecation map keys so they do not break the breakpoint loop\n    $font-map: map.remove($font-map, \"deprecation\");\n  }\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map.get($breakpoint-map, \"font-size\");\n    $font-size-rem: nhsuk-px-to-rem($font-size);\n\n    // $calculated-line-height is a separate variable from $line-height,\n    // as otherwise the value would get redefined with each loop and\n    // eventually break nhsuk-line-height.\n    //\n    // We continue to call the param $line-height to stay consistent with the\n    // naming with nhsuk-font.\n    $calculated-line-height: nhsuk-line-height(\n      $line-height: if($line-height, $line-height, map.get($breakpoint-map, \"line-height\")),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $calculated-line-height: $calculated-line-height if($important, !important, null);\n\n    & {\n      @if not $breakpoint {\n        font-size: $font-size;\n        font-size: $font-size-rem;\n        line-height: $calculated-line-height;\n      } @else if $breakpoint == \"print\" {\n        @include nhsuk-media-query($media-type: print) {\n          font-size: $font-size;\n          line-height: $calculated-line-height;\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          font-size: $font-size;\n          font-size: $font-size-rem;\n          line-height: $calculated-line-height;\n        }\n      }\n    }\n  }\n",
            "line": {
              "start": 134,
              "end": 215
            }
          }
        }
      ]
    },
    {
      "description": "Font size and line height helper\n\nTakes a point from the responsive 'font map' as an argument (the size as it\nwould appear on tablet and above), and uses it to create font-size and\nline-height declarations for different breakpoints, and print.\n\nExample font map:\n\n```scss\n19: (\n  null: (\n    font-size: 16px,\n    line-height: 20px\n  ),\n  tablet: (\n    font-size: 19px,\n    line-height: 25px\n  ),\n  print: (\n    font-size: 14pt,\n    line-height: 1.15\n  )\n);\n```\n\n",
      "commentRange": {
        "start": 98,
        "end": 132
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-font-size",
        "code": "\n  // Flag font sizes that start with underscores so we can suppress warnings on\n  // deprecated sizes used internally, for example `nhsuk-font($size: \"_24\")`\n  $size-internal-use-only: string.slice(#{$size}, 1, 1) == \"_\";\n\n  // Remove underscore from font sizes flagged for internal use\n  @if $size-internal-use-only {\n    $size: string.slice(#{$size}, 2);\n  }\n\n  // Check for a font map exactly matching the given size\n  $font-map: map.get($nhsuk-typography-scale, $size);\n\n  // No match? Try with string type (e.g. $size: \"16\" not 16)\n  @if not $font-map {\n    @each $font-size in map.keys($nhsuk-typography-scale) {\n      @if not $font-map and \"#{$font-size}\" == \"#{$size}\" {\n        $font-map: map.get($nhsuk-typography-scale, $font-size);\n      }\n    }\n  }\n\n  // Still no match? Throw error\n  @if not $font-map {\n    @error \"Unknown font size `#{$size}` - expected a point from the typography scale.\";\n  }\n\n  // Check for a deprecation within the typography scale\n  $deprecation: map.get($font-map, \"deprecation\");\n\n  @if $deprecation {\n    // Warn on deprecated font sizes unless flagged for internal use\n    @if not $size-internal-use-only {\n      @include nhsuk-warning(map.get($deprecation, \"key\"), map.get($deprecation, \"message\"));\n    }\n\n    // remove the deprecation map keys so they do not break the breakpoint loop\n    $font-map: map.remove($font-map, \"deprecation\");\n  }\n\n  @each $breakpoint, $breakpoint-map in $font-map {\n    $font-size: map.get($breakpoint-map, \"font-size\");\n    $font-size-rem: nhsuk-px-to-rem($font-size);\n\n    // $calculated-line-height is a separate variable from $line-height,\n    // as otherwise the value would get redefined with each loop and\n    // eventually break nhsuk-line-height.\n    //\n    // We continue to call the param $line-height to stay consistent with the\n    // naming with nhsuk-font.\n    $calculated-line-height: nhsuk-line-height(\n      $line-height: if($line-height, $line-height, map.get($breakpoint-map, \"line-height\")),\n      $font-size: $font-size\n    );\n\n    // Mark rules as !important if $important is true - this will result in\n    // these variables becoming strings, so this needs to happen *after* they\n    // are used in calculations\n    $font-size: $font-size if($important, !important, null);\n    $font-size-rem: $font-size-rem if($important, !important, null);\n    $calculated-line-height: $calculated-line-height if($important, !important, null);\n\n    & {\n      @if not $breakpoint {\n        font-size: $font-size;\n        font-size: $font-size-rem;\n        line-height: $calculated-line-height;\n      } @else if $breakpoint == \"print\" {\n        @include nhsuk-media-query($media-type: print) {\n          font-size: $font-size;\n          line-height: $calculated-line-height;\n        }\n      } @else {\n        @include nhsuk-media-query($from: $breakpoint) {\n          font-size: $font-size;\n          font-size: $font-size-rem;\n          line-height: $calculated-line-height;\n        }\n      }\n    }\n  }\n",
        "line": {
          "start": 134,
          "end": 215
        }
      },
      "parameter": [
        {
          "type": "Number | String",
          "name": "size",
          "description": "Point from the typography scale (the size\n  as it would appear on tablet and above)"
        },
        {
          "type": "Number",
          "name": "line-height",
          "default": "false",
          "description": "Non responsive custom line\n  height. Omit to use the line height from the font map."
        },
        {
          "type": "Boolean",
          "name": "important",
          "default": "false",
          "description": "Whether to mark declarations as\n  `!important`.\n"
        }
      ],
      "throw": [
        "Unknown font size `#{$size}` - expected a point from the typography scale."
      ],
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        },
        {
          "type": "mixin",
          "name": "nhsuk-media-query"
        },
        {
          "type": "function",
          "name": "nhsuk-px-to-rem"
        },
        {
          "type": "function",
          "name": "nhsuk-line-height"
        },
        {
          "type": "variable",
          "name": "nhsuk-typography-scale"
        },
        {
          "type": "variable",
          "name": "nhsuk-typography-scale"
        },
        {
          "type": "variable",
          "name": "nhsuk-typography-scale"
        }
      ],
      "file": {
        "path": "core/tools/_typography.scss",
        "name": "_typography.scss"
      },
      "aliased": [
        "nhsuk-typography-responsive"
      ],
      "aliasedGroup": [
        {
          "group": [
            "tools"
          ],
          "name": "nhsuk-typography-responsive"
        }
      ],
      "usedBy": [
        {
          "description": "Heading label mixin, adds a tab heading to\nwarning callout, do and don't lists and panel\n\n1. Background colour to be set on the @include.\n2. Ensures heading appears separate to the body text in high contrast mode.\n3. Text colour to be set on the @include.\n4. Display inline-block so it does not take up the full width.\n5. Negative left margin aligns the heading to the box.\n6. Top positioning set to minus to make heading sit just outside the box.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-heading-label",
            "code": "\n  display: inline-block; // [4]\n\n  position: relative;\n  top: nhsuk-spacing(-3); // [6]\n\n  margin: 0;\n  margin-bottom: nhsuk-spacing(2);\n  margin-left: nhsuk-spacing(-5) - 1px; // [5]\n  padding: nhsuk-spacing(2) nhsuk-spacing(5);\n\n  outline: 1px solid transparent; // [2]\n  outline-offset: -1px;\n\n  color: $heading-text-colour; // [3]\n  background-color: $heading-background-colour; // [1]\n\n  @include nhsuk-font-size(26);\n\n  @include nhsuk-media-query($until: tablet) {\n    top: nhsuk-spacing(-2); // [6]\n    margin-left: nhsuk-spacing(-4) - 1px; // [5]\n    padding: nhsuk-spacing(2) nhsuk-spacing(4);\n  }\n\n  @include nhsuk-print-colour {\n    top: 0;\n    background: none;\n  }\n",
            "line": {
              "start": 317,
              "end": 346
            }
          }
        },
        {
          "description": "Font size and line height helper (deprecated)\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-typography-responsive",
            "code": "\n  @include nhsuk-warning(\n    \"nhsuk-typography-responsive\",\n    \"nhsuk-typography-responsive is deprecated. Use nhsuk-font-size instead.\"\n  );\n  @include nhsuk-font-size($size, $override-line-height, $important);\n",
            "line": {
              "start": 232,
              "end": 238
            }
          }
        },
        {
          "description": "Font helper\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-font",
            "code": "\n  & {\n    @if $weight == normal {\n      @include nhsuk-typography-weight-normal;\n    } @else if $weight == bold {\n      @include nhsuk-typography-weight-bold;\n    }\n  }\n\n  @if $size {\n    @include nhsuk-font-size($size, $line-height);\n  }\n",
            "line": {
              "start": 256,
              "end": 268
            }
          }
        }
      ]
    },
    {
      "description": "Font size and line height helper (deprecated)\n\n",
      "commentRange": {
        "start": 217,
        "end": 230
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-typography-responsive",
        "code": "\n  @include nhsuk-warning(\n    \"nhsuk-typography-responsive\",\n    \"nhsuk-typography-responsive is deprecated. Use nhsuk-font-size instead.\"\n  );\n  @include nhsuk-font-size($size, $override-line-height, $important);\n",
        "line": {
          "start": 232,
          "end": 238
        }
      },
      "parameter": [
        {
          "type": "Number | Boolean | String",
          "name": "size",
          "description": "Point from the typography scale\n  (the size as it would appear on tablet and above). Use `false` to avoid\n  setting a size."
        },
        {
          "type": "Number",
          "name": "override-line-height",
          "default": "false",
          "description": "Non responsive custom line\n  height. Omit to use the line height from the font map."
        },
        {
          "type": "Boolean",
          "name": "important",
          "default": "false",
          "description": "Whether to mark declarations as\n  `!important`.\n"
        }
      ],
      "throw": [
        "if `$size` is not a valid point from the typography scale (or false)"
      ],
      "alias": "nhsuk-font-size",
      "deprecated": "To be removed in v11.0, replaced by nhsuk-font-size",
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "mixin",
          "name": "nhsuk-font-size"
        }
      ],
      "file": {
        "path": "core/tools/_typography.scss",
        "name": "_typography.scss"
      }
    },
    {
      "description": "Font helper\n\n",
      "commentRange": {
        "start": 240,
        "end": 254
      },
      "context": {
        "type": "mixin",
        "name": "nhsuk-font",
        "code": "\n  & {\n    @if $weight == normal {\n      @include nhsuk-typography-weight-normal;\n    } @else if $weight == bold {\n      @include nhsuk-typography-weight-bold;\n    }\n  }\n\n  @if $size {\n    @include nhsuk-font-size($size, $line-height);\n  }\n",
        "line": {
          "start": 256,
          "end": 268
        }
      },
      "example": [
        {
          "type": "scss",
          "code": ".foo {\n  @include nhsuk-font(19);\n}\n\n.foo {\n  @include nhsuk-font(36, $weight: bold);\n}"
        }
      ],
      "parameter": [
        {
          "type": "Number",
          "name": "size",
          "description": "Size of the font as it would appear on desktop -\n  uses the responsive font size map"
        },
        {
          "type": "String",
          "name": "weight",
          "default": "normal",
          "description": "Weight: `bold` or `normal`"
        },
        {
          "type": "Number",
          "name": "line-height",
          "default": "false",
          "description": "Line-height, if overriding the default"
        }
      ],
      "group": [
        "tools"
      ],
      "access": "public",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-typography-weight-normal"
        },
        {
          "type": "mixin",
          "name": "nhsuk-typography-weight-bold"
        },
        {
          "type": "mixin",
          "name": "nhsuk-font-size"
        }
      ],
      "file": {
        "path": "core/tools/_typography.scss",
        "name": "_typography.scss"
      }
    },
    {
      "description": "Breakpoint list\n\nName your breakpoints in a way that creates a ubiquitous language\nacross team members. It will improve communication between\nstakeholders, designers, developers, and testers.\n\n",
      "commentRange": {
        "start": 12,
        "end": 19
      },
      "context": {
        "type": "variable",
        "name": "mq-breakpoints",
        "value": "(\n  mobile: 320px,\n  tablet: 740px,\n  desktop: 980px,\n  wide: 1300px\n)",
        "scope": "default",
        "line": {
          "start": 20,
          "end": 25
        }
      },
      "type": "Map",
      "link": [
        {
          "url": "https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint",
          "caption": "Full documentation and examples"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "core/vendor/sass-mq.scss",
        "name": "sass-mq.scss"
      },
      "usedBy": [
        {
          "description": "Get a breakpoint's width\n\n",
          "context": {
            "type": "function",
            "name": "get-breakpoint-width",
            "code": "\n  @if map.has-key($breakpoints, $name) {\n    @return map.get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    @return null;\n  }\n",
            "line": {
              "start": 84,
              "end": 91
            }
          }
        },
        {
          "description": "Media Query mixin\n\n",
          "context": {
            "type": "mixin",
            "name": "mq",
            "code": "\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: \"\";\n\n  @if not $silence-warning {\n    @include nhsuk-warning(\"mq\", \"mq is deprecated. Use nhsuk-media-query instead.\");\n  }\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if meta.type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if meta.type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: \"#{$media-query} and (min-width: #{$min-width})\";\n  }\n  @if $max-width != 0 {\n    $media-query: \"#{$media-query} and (max-width: #{$max-width})\";\n  }\n  @if $and {\n    $media-query: \"#{$media-query} and #{$and}\";\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == \"all\" and $media-query != \"\") {\n    $media-type: \"\";\n    $media-query: string.slice(string.unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n",
            "line": {
              "start": 142,
              "end": 195
            }
          }
        },
        {
          "description": "Add a breakpoint\n\n",
          "context": {
            "type": "mixin",
            "name": "add-breakpoint",
            "code": "\n  $new-breakpoint: (\n    $name: $width\n  );\n  $mq-breakpoints: map.merge($mq-breakpoints, $new-breakpoint) !global;\n  $mq-breakpoints: _map-sort-by-value($mq-breakpoints) !global;\n",
            "line": {
              "start": 267,
              "end": 273
            }
          }
        },
        {
          "description": "Show the active breakpoint in the top right corner of the viewport\n",
          "context": {
            "type": "mixin",
            "name": "show-breakpoints",
            "code": "\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})\";\n      }\n    }\n  }\n",
            "line": {
              "start": 290,
              "end": 312
            }
          }
        }
      ]
    },
    {
      "description": "Show breakpoints in the top right corner\n\nIf you want to display the currently active breakpoint in the top\nright corner of your site during development, add the breakpoints\nto this list, ordered by width. For example: (mobile, tablet, desktop).\n\n",
      "commentRange": {
        "start": 27,
        "end": 37
      },
      "context": {
        "type": "variable",
        "name": "mq-show-breakpoints",
        "value": "()",
        "scope": "default",
        "line": {
          "start": 38,
          "end": 38
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@use 'path/to/mq' with ($mq-show-breakpoints: ('mobile', 'tablet', 'desktop'));\n"
        }
      ],
      "type": "map",
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "core/vendor/sass-mq.scss",
        "name": "sass-mq.scss"
      },
      "usedBy": [
        {
          "description": "Show the active breakpoint in the top right corner of the viewport\n",
          "context": {
            "type": "mixin",
            "name": "show-breakpoints",
            "code": "\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})\";\n      }\n    }\n  }\n",
            "line": {
              "start": 290,
              "end": 312
            }
          }
        }
      ]
    },
    {
      "description": "Customize the media type (for example: `@media screen` or `@media print`)\nBy default sass-mq uses an \"all\" media type (`@media all and …`)\n\nIf you want to overried the media type, you can use this option.\n",
      "commentRange": {
        "start": 40,
        "end": 48
      },
      "context": {
        "type": "variable",
        "name": "mq-media-type",
        "value": "all",
        "scope": "default",
        "line": {
          "start": 49,
          "end": 49
        }
      },
      "example": [
        {
          "type": "scss",
          "code": "@use 'path/to/mq' with ($media-type: 'screen');"
        }
      ],
      "type": "String",
      "link": [
        {
          "url": "https://github.com/sass-mq/sass-mq#changing-media-type",
          "caption": "Full documentation and example"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "core/vendor/sass-mq.scss",
        "name": "sass-mq.scss"
      },
      "usedBy": [
        {
          "description": "Media Query mixin\n\n",
          "context": {
            "type": "mixin",
            "name": "mq",
            "code": "\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: \"\";\n\n  @if not $silence-warning {\n    @include nhsuk-warning(\"mq\", \"mq is deprecated. Use nhsuk-media-query instead.\");\n  }\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if meta.type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if meta.type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: \"#{$media-query} and (min-width: #{$min-width})\";\n  }\n  @if $max-width != 0 {\n    $media-query: \"#{$media-query} and (max-width: #{$max-width})\";\n  }\n  @if $and {\n    $media-query: \"#{$media-query} and #{$and}\";\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == \"all\" and $media-query != \"\") {\n    $media-type: \"\";\n    $media-query: string.slice(string.unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n",
            "line": {
              "start": 142,
              "end": 195
            }
          }
        }
      ]
    },
    {
      "description": "Convert pixels to ems\n\n",
      "commentRange": {
        "start": 51,
        "end": 59
      },
      "context": {
        "type": "function",
        "name": "px2em",
        "code": "\n  @if math.is-unitless($px) {\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n    @return px2em($px * 1px);\n  }\n  // if $px is compatible with em units, then return value unchanged\n  @if math.compatible($px, 1em) {\n    @return $px;\n  }\n  @return math.div($px, 16px) * 1em;\n",
        "line": {
          "start": 61,
          "end": 71
        }
      },
      "parameter": [
        {
          "type": "Number",
          "name": "px",
          "description": "value to convert\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "$font-size-in-ems: px2em(16px);\np { font-size: px2em(16px); }"
        }
      ],
      "return": {
        "type": "Number"
      },
      "access": "public",
      "group": [
        "undefined"
      ],
      "require": [],
      "file": {
        "path": "core/vendor/sass-mq.scss",
        "name": "sass-mq.scss"
      },
      "usedBy": [
        {
          "description": "Media Query mixin\n\n",
          "context": {
            "type": "mixin",
            "name": "mq",
            "code": "\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: \"\";\n\n  @if not $silence-warning {\n    @include nhsuk-warning(\"mq\", \"mq is deprecated. Use nhsuk-media-query instead.\");\n  }\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if meta.type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if meta.type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: \"#{$media-query} and (min-width: #{$min-width})\";\n  }\n  @if $max-width != 0 {\n    $media-query: \"#{$media-query} and (max-width: #{$max-width})\";\n  }\n  @if $and {\n    $media-query: \"#{$media-query} and #{$and}\";\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == \"all\" and $media-query != \"\") {\n    $media-type: \"\";\n    $media-query: string.slice(string.unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n",
            "line": {
              "start": 142,
              "end": 195
            }
          }
        },
        {
          "description": "Show the active breakpoint in the top right corner of the viewport\n",
          "context": {
            "type": "mixin",
            "name": "show-breakpoints",
            "code": "\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})\";\n      }\n    }\n  }\n",
            "line": {
              "start": 290,
              "end": 312
            }
          }
        }
      ]
    },
    {
      "description": "Get a breakpoint's width\n\n",
      "commentRange": {
        "start": 73,
        "end": 83
      },
      "context": {
        "type": "function",
        "name": "get-breakpoint-width",
        "code": "\n  @if map.has-key($breakpoints, $name) {\n    @return map.get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    @return null;\n  }\n",
        "line": {
          "start": 84,
          "end": 91
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "name",
          "description": "Name of the breakpoint. One of $mq-breakpoints\n"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "$tablet-width: get-breakpoint-width(tablet);\n@media (min-width: get-breakpoint-width(tablet)) {}"
        }
      ],
      "require": [
        {
          "type": "variable",
          "name": "mq-breakpoints",
          "external": false
        }
      ],
      "return": {
        "type": "Number",
        "description": "Value in pixels"
      },
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "core/vendor/sass-mq.scss",
        "name": "sass-mq.scss"
      },
      "usedBy": [
        {
          "description": "Media Query mixin\n\n",
          "context": {
            "type": "mixin",
            "name": "mq",
            "code": "\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: \"\";\n\n  @if not $silence-warning {\n    @include nhsuk-warning(\"mq\", \"mq is deprecated. Use nhsuk-media-query instead.\");\n  }\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if meta.type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if meta.type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: \"#{$media-query} and (min-width: #{$min-width})\";\n  }\n  @if $max-width != 0 {\n    $media-query: \"#{$media-query} and (max-width: #{$max-width})\";\n  }\n  @if $and {\n    $media-query: \"#{$media-query} and #{$and}\";\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == \"all\" and $media-query != \"\") {\n    $media-type: \"\";\n    $media-query: string.slice(string.unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n",
            "line": {
              "start": 142,
              "end": 195
            }
          }
        },
        {
          "description": "Show the active breakpoint in the top right corner of the viewport\n",
          "context": {
            "type": "mixin",
            "name": "show-breakpoints",
            "code": "\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})\";\n      }\n    }\n  }\n",
            "line": {
              "start": 290,
              "end": 312
            }
          }
        }
      ]
    },
    {
      "description": "Media Query mixin\n\n",
      "commentRange": {
        "start": 93,
        "end": 141
      },
      "context": {
        "type": "mixin",
        "name": "mq",
        "code": "\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: \"\";\n\n  @if not $silence-warning {\n    @include nhsuk-warning(\"mq\", \"mq is deprecated. Use nhsuk-media-query instead.\");\n  }\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if meta.type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if meta.type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: \"#{$media-query} and (min-width: #{$min-width})\";\n  }\n  @if $max-width != 0 {\n    $media-query: \"#{$media-query} and (max-width: #{$max-width})\";\n  }\n  @if $and {\n    $media-query: \"#{$media-query} and #{$and}\";\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == \"all\" and $media-query != \"\") {\n    $media-type: \"\";\n    $media-query: string.slice(string.unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n",
        "line": {
          "start": 142,
          "end": 195
        }
      },
      "parameter": [
        {
          "type": "String | Boolean",
          "name": "from",
          "default": "false",
          "description": "One of $mq-breakpoints"
        },
        {
          "type": "String | Boolean",
          "name": "until",
          "default": "false",
          "description": "One of $mq-breakpoints"
        },
        {
          "type": "String | Boolean",
          "name": "and",
          "default": "false",
          "description": "Additional media query parameters"
        },
        {
          "type": "String",
          "name": "media-type",
          "default": "$mq-media-type",
          "description": "Media type: screen, print…\n"
        },
        {
          "type": "Boolean",
          "name": "silence-warning",
          "default": "false",
          "description": "Whether to silence deprecation\nwarning to use nhsuk-media-query instead\n"
        }
      ],
      "ignore": [],
      "content": "styling rules, wrapped into a @media query when $responsive is true",
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-warning"
        },
        {
          "type": "variable",
          "name": "mq-media-type",
          "external": false
        },
        {
          "type": "variable",
          "name": "mq-breakpoints",
          "external": false
        },
        {
          "type": "function",
          "name": "px2em",
          "external": false
        },
        {
          "type": "function",
          "name": "get-breakpoint-width",
          "external": false
        }
      ],
      "link": [
        {
          "url": "https://github.com/sass-mq/sass-mq#responsive-mode-on-default",
          "caption": "Full documentation and examples"
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@use 'path/to/mq' as *;\n.element {\n  @include mq($from: mobile) {\n    color: red;\n  }\n  @include mq($until: tablet) {\n    color: blue;\n  }\n  @include mq(mobile, tablet) {\n    color: green;\n  }\n  @include mq($from: tablet, $and: '(orientation: landscape)') {\n    color: teal;\n  }\n  @include mq(950px) {\n    color: hotpink;\n  }\n  @include mq(tablet, $media-type: screen) {\n    color: hotpink;\n  }\n  // Advanced use:\n  $my-breakpoints: (L: 900px, XL: 1200px);\n  @include mq(L, $breakpoints: $my-breakpoints) {\n    color: hotpink;\n  }\n}"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "core/vendor/sass-mq.scss",
        "name": "sass-mq.scss"
      },
      "usedBy": [
        {
          "description": "Media query\n\nThis is a currently a wrapper for sass-mq - abstracted so that we can\nreplace it in the future if we so choose.\n\nDue to Sass deprecated 'misplaced-rest' named argument warnings, all\narguments must be passed to maintain `nhsuk-media-query(950px)` support.\n\n",
          "context": {
            "type": "mixin",
            "name": "nhsuk-media-query",
            "code": "\n  @include mq($from, $until, $and, $media-type, $silence-warning: true) {\n    @content;\n  }\n",
            "line": {
              "start": 63,
              "end": 67
            }
          }
        },
        {
          "description": "Show the active breakpoint in the top right corner of the viewport\n",
          "context": {
            "type": "mixin",
            "name": "show-breakpoints",
            "code": "\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})\";\n      }\n    }\n  }\n",
            "line": {
              "start": 290,
              "end": 312
            }
          }
        }
      ]
    },
    {
      "description": "Quick sort\n\n",
      "commentRange": {
        "start": 197,
        "end": 202
      },
      "context": {
        "type": "function",
        "name": "_quick-sort",
        "code": "\n  $less: ();\n  $equal: ();\n  $large: ();\n\n  @if length($list) > 1 {\n    $seed: list.nth($list, math.ceil(math.div(length($list), 2)));\n\n    @each $item in $list {\n      @if ($item == $seed) {\n        $equal: list.append($equal, $item);\n      } @else if ($item < $seed) {\n        $less: list.append($less, $item);\n      } @else if ($item > $seed) {\n        $large: list.append($large, $item);\n      }\n    }\n\n    @return join(join(_quick-sort($less), $equal), _quick-sort($large));\n  }\n\n  @return $list;\n",
        "line": {
          "start": 203,
          "end": 225
        }
      },
      "author": [
        "Sam Richards"
      ],
      "access": "private",
      "parameter": [
        {
          "type": "List",
          "name": "list",
          "description": "List to sort"
        }
      ],
      "return": {
        "type": "List",
        "description": "Sorted List"
      },
      "group": [
        "undefined"
      ],
      "require": [],
      "file": {
        "path": "core/vendor/sass-mq.scss",
        "name": "sass-mq.scss"
      },
      "usedBy": [
        {
          "description": "Sort a map by values (works with numbers only)\n\n",
          "context": {
            "type": "function",
            "name": "_map-sort-by-value",
            "code": "\n  $map-sorted: ();\n  $map-keys: map.keys($map);\n  $map-values: map.values($map);\n  $map-values-sorted: _quick-sort($map-values);\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted {\n    $index: index($map-values, $value);\n    $key: list.nth($map-keys, $index);\n    $map-sorted: map.merge(\n      $map-sorted,\n      (\n        $key: $value\n      )\n    );\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: list.set-nth($map-values, $index, 0);\n  }\n\n  @return $map-sorted;\n",
            "line": {
              "start": 232,
              "end": 255
            }
          }
        }
      ]
    },
    {
      "description": "Sort a map by values (works with numbers only)\n\n",
      "commentRange": {
        "start": 227,
        "end": 231
      },
      "context": {
        "type": "function",
        "name": "_map-sort-by-value",
        "code": "\n  $map-sorted: ();\n  $map-keys: map.keys($map);\n  $map-values: map.values($map);\n  $map-values-sorted: _quick-sort($map-values);\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted {\n    $index: index($map-values, $value);\n    $key: list.nth($map-keys, $index);\n    $map-sorted: map.merge(\n      $map-sorted,\n      (\n        $key: $value\n      )\n    );\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: list.set-nth($map-values, $index, 0);\n  }\n\n  @return $map-sorted;\n",
        "line": {
          "start": 232,
          "end": 255
        }
      },
      "access": "private",
      "parameter": [
        {
          "type": "Map",
          "name": "map",
          "description": "Map to sort"
        }
      ],
      "return": {
        "type": "Map",
        "description": "Map sorted by value"
      },
      "group": [
        "undefined"
      ],
      "require": [
        {
          "type": "function",
          "name": "_quick-sort"
        }
      ],
      "file": {
        "path": "core/vendor/sass-mq.scss",
        "name": "sass-mq.scss"
      },
      "usedBy": [
        {
          "description": "Add a breakpoint\n\n",
          "context": {
            "type": "mixin",
            "name": "add-breakpoint",
            "code": "\n  $new-breakpoint: (\n    $name: $width\n  );\n  $mq-breakpoints: map.merge($mq-breakpoints, $new-breakpoint) !global;\n  $mq-breakpoints: _map-sort-by-value($mq-breakpoints) !global;\n",
            "line": {
              "start": 267,
              "end": 273
            }
          }
        }
      ]
    },
    {
      "description": "Add a breakpoint\n\n",
      "commentRange": {
        "start": 257,
        "end": 266
      },
      "context": {
        "type": "mixin",
        "name": "add-breakpoint",
        "code": "\n  $new-breakpoint: (\n    $name: $width\n  );\n  $mq-breakpoints: map.merge($mq-breakpoints, $new-breakpoint) !global;\n  $mq-breakpoints: _map-sort-by-value($mq-breakpoints) !global;\n",
        "line": {
          "start": 267,
          "end": 273
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "name",
          "description": "Name of the breakpoint"
        },
        {
          "type": "Number",
          "name": "width",
          "description": "Width of the breakpoint\n"
        }
      ],
      "require": [
        {
          "type": "function",
          "name": "_map-sort-by-value"
        },
        {
          "type": "variable",
          "name": "mq-breakpoints",
          "external": false
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "@include add-breakpoint(tvscreen, 1920px);\n@include mq(tvscreen) {}"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "core/vendor/sass-mq.scss",
        "name": "sass-mq.scss"
      }
    },
    {
      "description": "Show the active breakpoint in the top right corner of the viewport\n",
      "commentRange": {
        "start": 275,
        "end": 289
      },
      "context": {
        "type": "mixin",
        "name": "show-breakpoints",
        "code": "\n  body:before {\n    background-color: #fcf8e3;\n    border-bottom: 1px solid #fbeed5;\n    border-left: 1px solid #fbeed5;\n    color: #c09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})\";\n      }\n    }\n  }\n",
        "line": {
          "start": 290,
          "end": 312
        }
      },
      "link": [
        {
          "url": "https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint",
          "caption": ""
        }
      ],
      "parameter": [
        {
          "type": "List",
          "name": "show-breakpoints",
          "default": "$mq-show-breakpoints",
          "description": "List of breakpoints to show in the top right corner"
        },
        {
          "type": "Map",
          "name": "breakpoints",
          "default": "$mq-breakpoints",
          "description": "Breakpoint names and sizes\n"
        }
      ],
      "require": [
        {
          "type": "mixin",
          "name": "mq"
        },
        {
          "type": "function",
          "name": "get-breakpoint-width"
        },
        {
          "type": "function",
          "name": "px2em"
        },
        {
          "type": "variable",
          "name": "mq-breakpoints",
          "external": false
        },
        {
          "type": "variable",
          "name": "mq-show-breakpoints",
          "external": false
        }
      ],
      "example": [
        {
          "type": "scss",
          "code": "// Show breakpoints using global settings\n@include show-breakpoints;\n\n// Show breakpoints using custom settings\n@include show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));"
        }
      ],
      "access": "public",
      "group": [
        "undefined"
      ],
      "file": {
        "path": "core/vendor/sass-mq.scss",
        "name": "sass-mq.scss"
      }
    },
    {
      "description": "Directions for spacing\n\n",
      "commentRange": {
        "start": 13,
        "end": 17
      },
      "context": {
        "type": "variable",
        "name": "_spacing-directions",
        "value": "(\"top\", \"right\", \"bottom\", \"left\")",
        "scope": "default",
        "line": {
          "start": 19,
          "end": 19
        }
      },
      "link": [
        {
          "url": "https://github.com/alphagov/govuk-frontend",
          "caption": "Original code taken from GDS (Government Digital Service)"
        }
      ],
      "access": "private",
      "group": [
        "utilities"
      ],
      "file": {
        "path": "core/utilities/_spacing.scss",
        "name": "_spacing.scss"
      },
      "usedBy": [
        {
          "description": "Generate responsive spacing override classes\n\nGenerate spacing override classes for the given property (e.g. margin)\nfor each point in the responsive spacing scale.\n\n",
          "context": {
            "type": "mixin",
            "name": "_nhsuk-generate-responsive-spacing-overrides",
            "code": "\n  // For each point in the spacing scale (defined in settings), create an\n  // override that affects all directions...\n  @each $scale-point, $scale-map in $nhsuk-spacing-responsive-scale {\n    .nhsuk-u-#{$property}-#{$scale-point} {\n      @include nhsuk-responsive-spacing($scale-point, $property, \"all\", true);\n    }\n\n    // ... and then an override for each individual direction\n    @each $direction in $_spacing-directions {\n      .nhsuk-u-#{$property}-#{$direction}-#{$scale-point} {\n        @include nhsuk-responsive-spacing($scale-point, $property, $direction, true);\n      }\n    }\n  }\n",
            "line": {
              "start": 41,
              "end": 56
            }
          }
        },
        {
          "description": "Generate static spacing override classes\n\nGenerate spacing override classes for the given property (e.g. margin)\nfor each point in the non-responsive spacing scale.\n\n",
          "context": {
            "type": "mixin",
            "name": "_nhsuk-generate-static-spacing-overrides",
            "code": "\n  @each $spacing-point in map.keys($nhsuk-spacing-points) {\n    .nhsuk-u-static-#{$property}-#{$spacing-point} {\n      #{$property}: nhsuk-spacing($spacing-point) !important;\n    }\n\n    @each $direction in $_spacing-directions {\n      .nhsuk-u-static-#{$property}-#{$direction}-#{$spacing-point} {\n        #{$property}-#{$direction}: nhsuk-spacing($spacing-point) !important;\n      }\n    }\n  }\n",
            "line": {
              "start": 72,
              "end": 84
            }
          }
        }
      ]
    },
    {
      "description": "Generate responsive spacing override classes\n\nGenerate spacing override classes for the given property (e.g. margin)\nfor each point in the responsive spacing scale.\n\n",
      "commentRange": {
        "start": 21,
        "end": 39
      },
      "context": {
        "type": "mixin",
        "name": "_nhsuk-generate-responsive-spacing-overrides",
        "code": "\n  // For each point in the spacing scale (defined in settings), create an\n  // override that affects all directions...\n  @each $scale-point, $scale-map in $nhsuk-spacing-responsive-scale {\n    .nhsuk-u-#{$property}-#{$scale-point} {\n      @include nhsuk-responsive-spacing($scale-point, $property, \"all\", true);\n    }\n\n    // ... and then an override for each individual direction\n    @each $direction in $_spacing-directions {\n      .nhsuk-u-#{$property}-#{$direction}-#{$scale-point} {\n        @include nhsuk-responsive-spacing($scale-point, $property, $direction, true);\n      }\n    }\n  }\n",
        "line": {
          "start": 41,
          "end": 56
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "property",
          "description": "Property to add spacing to (e.g. 'margin')\n"
        }
      ],
      "example": [
        {
          "type": "css",
          "code": ".nhsuk-u-margin-4 {\n  margin: 16px !important;\n}\n\n@media (min-width: 40.0625em) {\n  .nhsuk-u-margin-4 {\n    margin: 24px !important;\n  }\n}"
        }
      ],
      "access": "private",
      "group": [
        "utilities"
      ],
      "require": [
        {
          "type": "mixin",
          "name": "nhsuk-responsive-spacing"
        },
        {
          "type": "mixin",
          "name": "nhsuk-responsive-spacing"
        },
        {
          "type": "variable",
          "name": "nhsuk-spacing-responsive-scale"
        },
        {
          "type": "variable",
          "name": "_spacing-directions"
        }
      ],
      "file": {
        "path": "core/utilities/_spacing.scss",
        "name": "_spacing.scss"
      }
    },
    {
      "description": "Generate static spacing override classes\n\nGenerate spacing override classes for the given property (e.g. margin)\nfor each point in the non-responsive spacing scale.\n\n",
      "commentRange": {
        "start": 58,
        "end": 70
      },
      "context": {
        "type": "mixin",
        "name": "_nhsuk-generate-static-spacing-overrides",
        "code": "\n  @each $spacing-point in map.keys($nhsuk-spacing-points) {\n    .nhsuk-u-static-#{$property}-#{$spacing-point} {\n      #{$property}: nhsuk-spacing($spacing-point) !important;\n    }\n\n    @each $direction in $_spacing-directions {\n      .nhsuk-u-static-#{$property}-#{$direction}-#{$spacing-point} {\n        #{$property}-#{$direction}: nhsuk-spacing($spacing-point) !important;\n      }\n    }\n  }\n",
        "line": {
          "start": 72,
          "end": 84
        }
      },
      "parameter": [
        {
          "type": "String",
          "name": "property",
          "description": "Property to add spacing to (e.g. 'margin')\n"
        }
      ],
      "example": [
        {
          "type": "css",
          "code": ".nhsuk-u-static-margin-4 {\n   margin: 24px !important;\n}"
        }
      ],
      "access": "private",
      "group": [
        "utilities"
      ],
      "require": [
        {
          "type": "function",
          "name": "nhsuk-spacing"
        },
        {
          "type": "function",
          "name": "nhsuk-spacing"
        },
        {
          "type": "variable",
          "name": "nhsuk-spacing-points"
        },
        {
          "type": "variable",
          "name": "_spacing-directions"
        }
      ],
      "file": {
        "path": "core/utilities/_spacing.scss",
        "name": "_spacing.scss"
      }
    }
  ]
}